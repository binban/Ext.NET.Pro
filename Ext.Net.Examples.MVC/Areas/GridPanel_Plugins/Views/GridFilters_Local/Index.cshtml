@{
    ViewBag.Title = "GridPanel with Local Filtering, Sorting and Paging - Ext.NET Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}

@section example
{
    <h1>GridPanel with Local Filtering, Sorting and Paging</h1>    
    <p>Please see column header menu for apllying filters</p>

    @(
        Html.X().Window()
            .Width(700)
            .Height(400)
            .Closable(false)
            .Title("Example")
            .Layout(LayoutType.Fit)
            .Items(
                Html.X().GridPanel()
                    .Border(false)
                    .Store(
                        Html.X().Store()
                            .DataSource(Model)
                            .PageSize(10)
                            .Model(
                                Html.X().Model()
                                    .IDProperty("Id")
                                    .Fields(
                                        Html.X().ModelField().Name("Id").Type(ModelFieldType.Int),
                                        Html.X().ModelField().Name("Company").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("Price").Type(ModelFieldType.Float),
                                        Html.X().ModelField().Name("Date").Type(ModelFieldType.Date).DateFormat("yyyy-MM-ddTHH:mm:ss"),
                                        Html.X().ModelField().Name("Size").Type(ModelFieldType.String),
                                        Html.X().ModelField().Name("Visible").Type(ModelFieldType.Boolean)
                                    )
                            )
                            .Sorters(
                                Html.X().DataSorter().Property("Company").Direction(Ext.Net.SortDirection.ASC)                                
                            )
                    )
                    .ColumnModel(
                        Html.X().Column().Text("ID").DataIndex("Id"),
                        Html.X().Column().Text("Company").DataIndex("Company"),
                        Html.X().Column().Text("Price").DataIndex("Price").Renderer(RendererFormat.UsMoney),
                        Html.X().DateColumn().Text("Date").DataIndex("Date").Align(Alignment.Center).Format("yyyy-MM-dd"),
                        Html.X().Column().Text("Size").DataIndex("Size"),
                        Html.X().BooleanColumn().Text("Visible").DataIndex("Visible").Align(Alignment.Center).TrueText("Yes").FalseText("No")
                    )
                    .Features(
                        Html.X().GridFilters()
                            .Local(true)
                            .Filters(
                                Html.X().NumericFilter().DataIndex("Id"),
                                Html.X().StringFilter().DataIndex("Company"),
                                Html.X().NumericFilter().DataIndex("Price"),
                                Html.X().DateFilter().DataIndex("Date")
                                    .DatePickerOptions(options => {
                                        options.TodayText = "Now";
                                    }),
                                Html.X().ListFilter().DataIndex("Size").Options("extra small,small,medium,large,extra large"),
                                Html.X().BooleanFilter().DataIndex("Visible")
                            )
                    )
                    .BottomBar(
                        Html.X().PagingToolbar()
                            .Items(
                                Html.X().ToolbarSeparator(),
                                Html.X().Button()
                                    .Text("Find '3m Co'")
                                    .Handler("var f = this.up('grid').filters.getFilter('Company'); f.setValue('3m Co'); f.setActive(true);"),
                                Html.X().Button()
                                    .Text("All Filters")
                                    .ToolTip("Get Filters of Grid")
                                    .Handler("var filters = Ext.encode(this.up('grid').filters.getFilterData()); Ext.Msg.alert('Filters', filters);"),
                                Html.X().Button()
                                    .Text("Clear Filters")
                                    .Handler("this.up('grid').filters.clearFilters();")
                            )
                    )
            )
    )
}
