/********
 * @version   : 1.3.0 - Ext.NET Pro License
 * @author    : Ext.NET, Inc. http://www.ext.net/
 * @date      : 2012-02-21
 * @copyright : Copyright (c) 2007-2012, Ext.NET, Inc. (http://www.ext.net/). All rights reserved.
 * @license   : See license.txt and http://www.ext.net/license/. 
 ********/

using System.ComponentModel;

namespace Ext.Net
{
	/// <summary>
	/// IDMode specifies how the ConfigID/ClientID of the control should be generated and rendered to client.
    /// The IDMode property is defined in Ext.Net.XControl, the base class for all Ext.NET controls.
    /// The related things: ID - the native ASP.NET System.Web.UI.Control property, ID is used to access the control on server side;
    /// ClientID - the native ASP.NET System.Web.UI.Control.ClientID property has been overrode in the Ext.Net.XControl class, 
    /// ClientID is used on client as a reference which might be used to access the respective control’s JavaScript instance on client side. 
    /// ClientID is the concatenation of Namespace and ConfigID or Namespace and ItemID if ItemID is explicitly specified and 
    /// there is at least one Namespace explicitly specified in the chain from the control and all its parent controls or in ResourceManager;
    /// BaseClientID - the base ClientID property, i.e. the native ASP.NET System.Web.UI.Control.ClientID property; 
    /// ConfigID - The Ext.Net.XControl property which means the client side “id” config option, 
    /// so, you can access the respective control’s JavaScript instance on client using the Ext.getCmp method.
    /// How to set up IDMode: application level - “idMode” option of “extnet” section in Web.config. Please see the sample Web.config in README, 
    /// page level - IDMode of ResourceManager, control level - IDMode of Control.
    /// </summary>
    [Description("IDMode specifies how the ConfigID/ClientID of the control should be generated and rendered to client.")]
    public enum IDMode
    {
        /// <summary>
        /// [Default] The control inherits the IDMode setting of its parent control. 
        /// This is the default functionality of all Ext.Net Components.
        /// </summary>
        Inherit,
        
        /// <summary>
        /// ConfigID equals BaseClientID (i.e. native ASP.NET ClientID property). 
        /// The control has IDMode="Legacy", if there are no IDMode of its parent control, ResourceManager and idMode in web.config differing from "Inherit".
        /// ConfigID is always rendered.
        /// </summary>
        Legacy,
        
        /// <summary>
        /// ConfigID equals ID.
        /// ConfigID is always rendered.
        /// A developer must manually ensure client-side ID uniqueness.
        /// </summary>
        Static,
        
        /// <summary>
        /// ConfigID is not rendered to client.
        /// </summary>
        Ignore,
        
        /// <summary>
        /// ConfigID equals ID if it’s set up explicitly, if not then ConfigID equals BaseClientID (i.e. native ASP.NET ClientID property).
        /// ConfigID is not rendered to client if ID was auto-generated, i.e. was not explicitly set up.
        /// A developer must manually ensure client-side ID uniqueness.
        /// </summary>
        Explicit,

        /// <summary>
        /// ConfigID equals BaseClientID (i.e. native ASP.NET ClientID property).
        /// ConfigID is not rendered to client if ID was auto-generated, i.e. was not explicitly set up.
        /// </summary>
        Client,

        /// <summary>
        /// The ClientID value is generated by concatenating the ID value of the parent naming container 
        /// with the ID value of the control. Each segment is separated by an underscore character (_).
        /// ConfigID is always rendered.
        /// </summary>
        Predictable,

        /// <summary>
        /// ConfigID is generated by concatenating the ID value of the parent Ext.NET component of the parent naming container 
        /// with the ID value of the control. Each segment is separated by an underscore character (_).
        /// ConfigID is always rendered.
        /// </summary>
        Parent
    }
}