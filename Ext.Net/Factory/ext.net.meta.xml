<?xml version="1.0" encoding="utf-8"?>
<Ext.Net xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Classes>
    <Class Name="AbsoluteLayoutConfig" Extends="AnchorLayoutConfig">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreOnContentChange" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True indicates that changes to one item in this layout do not effect the layout in general. This may need to be set to false if Ext.AbstractComponent.autoScroll is enabled for the container. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True indicates that changes to one item in this layout do not effect the layout in general. This may need to be set to false if Ext.AbstractComponent.autoScroll is enabled for the container. Defaults to: true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractAssociation" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Abstract="true" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AssociationKey" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the property in the data to read the association from. Defaults to the name of the associated model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the property in the data to read the association from. Defaults to the name of the associated model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrimaryKey" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the primary key on the associated model.  In general this will be the Ext.data.Model.idProperty of the Model. Defaults to 'id']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the primary key on the associated model.  In general this will be the Ext.data.Model.idProperty of the Model. Defaults to 'id'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Model" Type="string" DefaultValue="null">
          <Summary><![CDATA[The string name of the model that is being associated with. Required]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The string name of the model that is being associated with. Required" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[A special reader to read associated data]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;PrimaryProxy&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A special reader to read associated data" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractAxis" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AxisID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelTitle" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Label" Type="AxisLabel" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractCalendarView" Abstract="true" Extends="ComponentBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="0">
          <Summary><![CDATA[The 0-based index for the day on which the calendar week begins (0=Sunday, which is the default)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The 0-based index for the day on which the calendar week begins (0=Sunday, which is the default)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDCreateEventText" Type="string" DefaultValue="&quot;Create event for {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddCreateEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Create event for {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDMoveEventText" Type="string" DefaultValue="&quot;Move event to {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddMoveEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Move event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDResizeEventText" Type="string" DefaultValue="&quot;Update event to {0}&quot;">
          <Summary><![CDATA[The string displayed to the user in the drag proxy while dragging the resize handle of an event (defaults to 'Update event to {0}' where {0} is the updated event start-end range supplied by the view). Note that this text is only used in views that allow resizing of events.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddResizeEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Update event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string displayed to the user in the drag proxy while dragging the resize handle of an event (defaults to 'Update event to {0}' where {0} is the updated event start-end range supplied by the view). Note that this text is only used in views that allow resizing of events." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableAddFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDD" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable drag and drop in the calendar view (the default), false to disable it]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable drag and drop in the calendar view (the default), false to disable it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableRemoveFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on removing an event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doRemoveFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on removing an event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doRemoveFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableUpdateFx" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable a visual effect on updating an event, false to disable it (the default). Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doUpdateFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on updating an event, false to disable it (the default). Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doUpdateFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to monitor the browser's resize event (the default), false to ignore it. If the calendar view is rendered into a fixed-size container this can be set to false. However, if the view can change dimensions (e.g., it's in fit layout in a viewport or some other resizable container) it is very important that this config is true so that any resize event propagates properly to all subcomponents and layouts get recalculated properly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to monitor the browser's resize event (the default), false to ignore it. If the calendar view is rendered into a fixed-size container this can be set to false. However, if the view can change dimensions (e.g., it's in fit layout in a viewport or some other resizable container) it is very important that this config is true so that any resize event propagates properly to all subcomponents and layouts get recalculated properly." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpansHavePriority" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allows switching between two different modes of rendering events that span multiple days. When true, span events are always sorted first, possibly at the expense of start dates being out of order (e.g., a span event that starts at 11am one day and spans into the next day would display before a non-spanning event that starts at 10am, even though they would not be in date order). This can lead to more compact layouts when there are many overlapping events. If false (the default), events will always sort by start date first which can result in a less compact, but chronologically consistent layout.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allows switching between two different modes of rendering events that span multiple days. When true, span events are always sorted first, possibly at the expense of start dates being out of order (e.g., a span event that starts at 11am one day and spans into the next day would display before a non-spanning event that starts at 10am, even though they would not be in date order). This can lead to more compact layouts when there are many overlapping events. If false (the default), events will always sort by start date first which can result in a less compact, but chronologically consistent layout." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouseOver" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not the view tracks and responds to the browser mouseover event on contained elements (defaults to true). If you don't need mouseover event highlighting you can disable this.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not the view tracks and responds to the browser mouseover event on contained elements (defaults to true). If you don't need mouseover event highlighting you can disable this." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetEventBodyMarkup" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns a string of HTML template markup to be used as the body portion of the event template created by getEventTemplate. This provdes the flexibility to customize what's in the body without having to override the entire XTemplate. This string can include any valid Ext.Template code, and any data tokens accessible to the containing event template can be referenced in this string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns a string of HTML template markup to be used as the body portion of the event template created by getEventTemplate. This provdes the flexibility to customize what's in the body without having to override the entire XTemplate. This string can include any valid Ext.Template code, and any data tokens accessible to the containing event template can be referenced in this string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetEventTemplate" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns the XTemplate that is bound to the calendar's event store to populate the calendar views with events.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the XTemplate that is bound to the calendar's event store to populate the calendar views with events." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractCalendarViewDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse exits a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires while the mouse is over a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is being moused over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires while the mouse is over a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractCalendarViewListeners" Extends="AbstractComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse exits a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOver" Type="ComponentListener">
          <Summary><![CDATA[Fires while the mouse is over a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is being moused over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires while the mouse is over a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractCalendarView), &quot;Ext.calendar.AbstractCalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractComponent" Abstract="true" Extends="Observable" Inherits="IComponent,IContent,ILazy,IStateful,IAnimate,IFloating">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TagHiddenName" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tag" Type="object" DefaultValue="null">
          <Summary><![CDATA[An Object that contains data about the Component. The default is a null reference.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTag&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Serialize" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An Object that contains data about the Component. The default is a null reference." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TagString" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ApplyTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specify the id of the element, a DOM element or an existing Element corresponding to a DIV that is already present in the document that specifies some structural markup for this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specify the id of the element, a DOM element or an existing Element corresponding to a DIV that is already present in the document that specifies some structural markup for this component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ApplyToProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;applyTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoEl" Type="DomObject">
          <Summary><![CDATA[A tag name or DomHelper spec used to create the Element which will encapsulate this AbstractComponent.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tag name or DomHelper spec used to create the Element which will encapsulate this AbstractComponent." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRenderElement" Type="string" DefaultValue="null">
          <Summary><![CDATA[This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoShow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically show the component upon creation. This config option may only be used for floating components or components that use autoRender. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically show the component upon creation. This config option may only be used for floating components or components that use autoRender. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The base CSS class to apply to this components's element. This will also be prepended to elements within this component like Panel's body will get a class x-panel-body. This means that if you create a subclass of Panel, and you want it to get all the Panels styling for the element and the body, you leave the baseCls x-panel and use componentCls to add specific styling for this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The base CSS class to apply to this components's element. This will also be prepended to elements within this component like Panel's body will get a class x-panel-body. This means that if you create a subclass of Panel, and you want it to get all the Panels styling for the element and the body, you leave the baseCls x-panel and use componentCls to add specific styling for this component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Border" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Specifies the border for this component. The border can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetBorder&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specifies the border for this component. The border can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BorderSpec" Type="string" DefaultValue="null">
          <Summary><![CDATA[Specifies the border for this component. The border can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;border&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBorderSpec&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specifies the border for this component. The border can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChildEls" Type="ChildElementCollection">
          <Summary><![CDATA[An array describing the child elements of the Component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;childEls&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array describing the child elements of the Component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;AddCls&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[CSS Class to be added to a components root level element to give distinction to it via styling.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="CSS Class to be added to a components root level element to give distinction to it via styling." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentLayout" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;AddContainerCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Data" Type="object" DefaultValue="null">
          <Summary><![CDATA[The initial set of data to apply to the tpl to update the content area of the AbstractComponent.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Serialize" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The initial set of data to apply to the tpl to update the content area of the AbstractComponent." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component disabled (default is false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDisabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Render this component disabled (default is false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledCls" Type="string" DefaultValue="&quot;x-item-disabled&quot;">
          <Summary><![CDATA[CSS class to add when the AbstractComponent is disabled. Defaults to 'x-item-disabled'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-item-disabled&quot;" />
            <Attribute Type="Description" RawValue="CSS class to add when the AbstractComponent is disabled. Defaults to 'x-item-disabled'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Dock" Type="Dock" DefaultValue="Dock.None">
          <Summary><![CDATA[The dock position of this component in its parent panel]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDocked&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="Dock.None" />
            <Attribute Type="Description" RawValue="The dock position of this component in its parent panel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Floating" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to float the AbstractComponent outside of the document flow using CSS absolute positioning.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to float the AbstractComponent outside of the document flow using CSS absolute positioning." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FloatingProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="&quot;floating&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FloatingConfig" Type="LayerConfig" DefaultValue="null">
          <Summary><![CDATA[Additional floating configs]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Additional floating configs" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FloatingConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;floating&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Frame" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to have the AbstractComponent inject framing elements within the AbstractComponent at render time to provide a graphical rounded frame around the AbstractComponent content.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to have the AbstractComponent inject framing elements within the AbstractComponent at render time to provide a graphical rounded frame around the AbstractComponent content." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormBind" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Any component within the FormPanel can be configured with formBind: true. This will cause that component to be automatically disabled when the form is invalid, and enabled when it is valid. This is most commonly used for Button components to prevent submitting the form in an invalid state, but can be used on any component type.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Any component within the FormPanel can be configured with formBind: true. This will cause that component to be automatically disabled when the form is invalid, and enabled when it is valid. This is most commonly used for Button components to prevent submitting the form in an invalid state, but can be used on any component type." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of this component in pixels." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component hidden (default is false). If true, the hide method will be called internally.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.setVisible(!{1});&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Render this component hidden (default is false). If true, the hide method will be called internally." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment, or a DomHelper specification to use as the layout element content (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;Update&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;html&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An HTML fragment, or a DomHelper specification to use as the layout element content (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Loader" Type="ComponentLoader" DefaultValue="null">
          <Summary><![CDATA[A configuration object or an instance of a Ext.ComponentLoader to load remote content for this AbstractComponent.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="&quot;loader&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A configuration object or an instance of a Ext.ComponentLoader to load remote content for this AbstractComponent." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Specifies the margin for this component. The margin can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specifies the margin for this component. The margin can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarginSpec" Type="string" DefaultValue="null">
          <Summary><![CDATA[Specifies the margin for this component. The margin can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;margin&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specifies the margin for this component. The margin can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskOnDisable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[This is an internal flag that you use when creating custom components. By default this is set to true which means that every component gets a mask when its disabled. Components like FieldContainer, FieldSet, Field, Button, Tab override this property to false since they want to implement custom disable logic.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="This is an internal flag that you use when creating custom components. By default this is set to true which means that every component gets a mask when its disabled. Components like FieldContainer, FieldSet, Field, Button, Tab override this property to false since they want to implement custom disable logic." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The maximum value in pixels which this AbstractComponent will set its height to.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this AbstractComponent will set its height to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The maximum value in pixels which this AbstractComponent will set its width to.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this AbstractComponent will set its width to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The minimum value in pixels which this AbstractComponent will set its height to.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this AbstractComponent will set its height to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The minimum value in pixels which this AbstractComponent will set its width to.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this AbstractComponent will set its width to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element when the mouse moves over the Element, and removed when the mouse moves out. (defaults to ''). This can be useful for adding customized 'active' or 'hover' styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element when the mouse moves over the Element, and removed when the mouse moves out. (defaults to ''). This can be useful for adding customized 'active' or 'hover' styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Specifies the padding for this component. The padding can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specifies the padding for this component. The padding can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PaddingSpec" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specifies the padding for this component. The padding can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;padding&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specifies the padding for this component. The padding can be a single numeric value to apply to all sides or it can be a CSS style specification for each style, for example: '10 5 3 10'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plugins" Type="ItemsCollection&lt;Plugin&gt;">
          <Summary><![CDATA[An object or array of objects that will provide custom functionality for this component. The only requirement for a valid plugin is that it contain an init method that accepts a reference of type Ext.AbstractComponent. When a component is created, if any plugins are available, the component will call the init method on each plugin, passing a reference to itself. Each plugin can then call methods or respond to events on the component as needed to provide its functionality.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;plugins&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object or array of objects that will provide custom functionality for this component. The only requirement for a valid plugin is that it contain an init method that accepts a reference of type Ext.AbstractComponent. When a component is created, if any plugins are available, the component will call the init method on each plugin, passing a reference to itself. Each plugin can then call methods or respond to events on the component as needed to provide its functionality." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderData" Type="ParameterCollection">
          <Summary><![CDATA[The data used by renderTpl in addition to the following property values of the component : id, ui, uiCls, baseCls, componentCls, frame]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data used by renderTpl in addition to the following property values of the component : id, ui, uiCls, baseCls, componentCls, frame" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderSelectors" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties specifying DomQuery selectors which identify child elements created by the render process.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties specifying DomQuery selectors which identify child elements created by the render process." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specify the id of the element, a DOM element or an existing Element that this component will be rendered into.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="Description" RawValue="Specify the id of the element, a DOM element or an existing Element that this component will be rendered into." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An XTemplate used to create the internal structure inside this AbstractComponent's encapsulating Element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;renderTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An XTemplate used to create the internal structure inside this AbstractComponent's encapsulating Element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StyleSpec" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom style specification to be applied to this component's Element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;style&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ApplyStyles&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom style specification to be applied to this component's Element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StyleHtmlCls" Type="string" DefaultValue="&quot;x-html&quot;">
          <Summary><![CDATA[The class that is added to the content target when you set styleHtmlContent to true. Defaults to 'x-html']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-html&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The class that is added to the content target when you set styleHtmlContent to true. Defaults to 'x-html'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StyleHtmlContent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically style the html inside the content target of this component (body for panels). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically style the html inside the content target of this component (body for panels). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An XTemplate used to create the internal structure inside this AbstractComponent's encapsulating Element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An XTemplate used to create the internal structure inside this AbstractComponent's encapsulating Element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TplWriteMode" Type="TemplateWriteMode" DefaultValue="TemplateWriteMode.Overwrite">
          <Summary><![CDATA[The Ext.(X)Template method to use when updating the content area of the AbstractComponent. Defaults to 'overwrite']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="TemplateWriteMode.Overwrite" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="Description" RawValue="The Ext.(X)Template method to use when updating the content area of the AbstractComponent. Defaults to 'overwrite'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UI" Type="string" DefaultValue="null">
          <Summary><![CDATA[A set of predefined ui styles for individual components. Most components support 'light' and 'dark'. Extra string added to the baseCls with an extra '-'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ui&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetUI&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A set of predefined ui styles for individual components. Most components support 'light' and 'dark'. Extra string added to the baseCls with an extra '-'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this component in pixels." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The registered xtype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a child items of a Container is being specified not as a fully instantiated AbstractComponent, but as a AbstractComponent config object. The xtype will be looked up at render time up to determine what type of child AbstractComponent to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="Description" RawValue="The registered xtype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a child items of a Container is being specified not as a fully instantiated AbstractComponent, but as a AbstractComponent config object. The xtype will be looked up at render time up to determine what type of child AbstractComponent to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreInit" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;preinitFn&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Anchor" Type="string" DefaultValue="null">
          <Summary><![CDATA[This config is only used when this AbstractComponent is rendered by a Container which has been configured to use an AnchorLayout based layout manager]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="This config is only used when this AbstractComponent is rendered by a Container which has been configured to use an AnchorLayout based layout manager" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnchor&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAnchor" Type="string" DefaultValue="null">
          <Summary><![CDATA[The DefaultAnchor is applied as the Anchor config item to all child Items during render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The DefaultAnchor is applied as the Anchor config item to all child Items during render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorHorizontal" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[See Anchor property]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="See Anchor property" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnchor&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorVertical" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[See Anchor property]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="See Anchor property" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;anchor&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margins" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Note: this config is only used when this AbstractComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Note: this config is only used when this AbstractComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Region" Type="Region" DefaultValue="Region.None">
          <Summary><![CDATA[Note: this config is only used when this AbstractComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="Region.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Note: this config is only used when this AbstractComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create a SplitRegion and display a 5px wide Ext.SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically. Defaults to false creating a Region. Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to create a SplitRegion and display a 5px wide Ext.SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically. Defaults to false creating a Region. Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnWidth" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[The ColumnWidth property is only used with ColumnLayout is used. The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="The ColumnWidth property is only used with ColumnLayout is used. The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnWidthProxy" Access="Protected" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;columnWidth&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flex" Type="int" DefaultValue="0">
          <Summary><![CDATA[NOTE: This property is only used when the parent Layout is HBoxLayout or VBoxLayout. This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - BoxItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="NOTE: This property is only used when the parent Layout is HBoxLayout or VBoxLayout. This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSpan" Type="int" DefaultValue="0">
          <Summary><![CDATA[Applied to the table cell containing the item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowspan&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Applied to the table cell containing the item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColSpan" Type="int" DefaultValue="0">
          <Summary><![CDATA[Applied to the table cell containing the item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;colspan&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Applied to the table cell containing the item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[ CSS class name added to the table cell containing the item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue=" CSS class name added to the table cell containing the item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellId" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An id applied to the table cell containing the item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent - TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An id applied to the table cell containing the item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AdditionalConfig" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenuID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(MenuBase)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenuIDProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextMenuId&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Bin" Type="ItemsCollection&lt;Observable&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bin&quot;, typeof(ItemCollectionJsonConverter), int.MinValue" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContentEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of an existing HTML node to use as the panel's body content (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of an existing HTML node to use as the panel's body content (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveDelay" Type="int" DefaultValue="100">
          <Summary><![CDATA[A buffer to be applied if many state events are fired within a short period (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;saveDelay&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="A buffer to be applied if many state events are fired within a short period (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of events that, when fired, should trigger this component to save its state (defaults to none). These can be any types of events supported by this component, including browser or custom events (e.g., ['click', 'customerchange']).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of events that, when fired, should trigger this component to save its state (defaults to none). These can be any types of events supported by this component, including browser or custom events (e.g., ['click', 'customerchange'])." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The unique id for this component to use for state management purposes (defaults to the component id).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stateId&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The unique id for this component to use for state management purposes (defaults to the component id)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stateful" Type="bool" DefaultValue="false">
          <Summary><![CDATA[A flag which causes the AbstractComponent to attempt to restore the state of internal properties from a saved state on startup. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A flag which causes the AbstractComponent to attempt to restore the state of internal properties from a saved state on startup. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetState" Type="JFunction">
          <Summary><![CDATA[Return component's data which should be saved by StateProvider]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Return component's data which should be saved by StateProvider" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusOnToFront" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the floated component should be automatically focused when it is brought to the front. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the floated component should be automatically focused when it is brought to the front. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the floating component should be given a shadow. Set to true to automatically create an Ext.Shadow, or a string indicating the shadow's display Ext.Shadow.mode. Set to false to disable the shadow. (Defaults to 'sides'.)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the floating component should be given a shadow. Set to true to automatically create an Ext.Shadow, or a string indicating the shadow's display Ext.Shadow.mode. Set to false to disable the shadow. (Defaults to 'sides'.)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShadowMode" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA[Specifies whether the floating component should be given a shadow. Set to true to automatically create an Ext.Shadow, or a string indicating the shadow's display Ext.Shadow.mode. Set to false to disable the shadow. (Defaults to 'sides'.)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;shadow&quot;, typeof(ShadowJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the floating component should be given a shadow. Set to true to automatically create an Ext.Shadow, or a string indicating the shadow's display Ext.Shadow.mode. Set to false to disable the shadow. (Defaults to 'sides'.)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTips" Type="ItemsCollection&lt;ToolTip&gt;">
          <Summary><![CDATA[A collection of ToolTip configs used to add ToolTips to the AbstractComponent]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltips&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A collection of ToolTip configs used to add ToolTips to the AbstractComponent" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFocus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically set the focus after render (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically set the focus after render (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFocusDelay" Type="int" DefaultValue="10">
          <Summary><![CDATA[Focus delay (in milliseconds) when AutoFocus is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="Focus delay (in milliseconds) when AutoFocus is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Selectable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Determines if this component is selectable. (default is true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSelectable&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Determines if this component is selectable. (default is true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHeight" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use height:'auto', false to use fixed height (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use height:'auto', false to use fixed height (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageX" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The page level x coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page level x coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageY" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The page level y coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page level y coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int" DefaultValue="0">
          <Summary><![CDATA[The local x (left) coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The local x (left) coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int" DefaultValue="0">
          <Summary><![CDATA[The local y (addToStart) coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The local y (addToStart) coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Weight" Type="int" DefaultValue="0">
          <Summary><![CDATA[Weight of docked item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Weight of docked item" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CallEl" ParamsRaw="string name, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddCls" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddClsWithUI" ParamsRaw="string cls, bool skip">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddClsWithUI" ParamsRaw="string[] cls, bool skip">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddUIClsToElement" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddContainerCls" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Destroy">
          <Summary><![CDATA[Destroys this component by purging any event listeners, removing the component's element from the DOM, removing the component from its Ext.Container (if applicable) and unregistering it from Ext.ComponentMgr. Destruction is generally handled automatically by the framework and this method should usually not need to be called directly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Destroys this component by purging any event listeners, removing the component's element from the DOM, removing the component from its Ext.Container (if applicable) and unregistering it from Ext.ComponentMgr. Destruction is generally handled automatically by the framework and this method should usually not need to be called directly." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Disable">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Disable" ParamsRaw="bool silent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoAutoRender">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoComponentLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Enable">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Enable" ParamsRaw="bool silent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveCls" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveUIClsFromElement" ParamsRaw="string ui">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetDocked" ParamsRaw="Dock dock, bool layoutParent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetDocked" ParamsRaw="Dock dock">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetHeight" ParamsRaw="Unit height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetHeight" ParamsRaw="int height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetHeight" ParamsRaw="string height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSize" ParamsRaw="int width, int height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSize" ParamsRaw="string width, string height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetWidth" ParamsRaw="Unit width">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetWidth" ParamsRaw="int width">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts, string callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts, JFunction callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddStateEvents" ParamsRaw="string events">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddStateEvents" ParamsRaw="string[] events">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoAnimation" ParamsRaw="AnimConfig cfg">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SequenceFx">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopAnimation">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncFx">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignTo" ParamsRaw="string element, string position, int xOffset, int yOffset">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignTo" ParamsRaw="string element, string position">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignTo" ParamsRaw="string element">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Center">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoConstrain">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoConstrain" ParamsRaw="string element">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoConstrain" ParamsRaw="Rectangle region">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActive">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActive" ParamsRaw="bool active">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToBack">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToFront">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToFront" ParamsRaw="bool preventFocus">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyStyles" ParamsRaw="string styles">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveContainerCls" ParamsRaw="string cls">
          <Summary><![CDATA[Removes a CSS class from the component's container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a CSS class from the component's container." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractComponentDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a AbstractComponent has been visually activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent has been visually activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Added" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a AbstractComponent had been added to a Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;pos&quot;, typeof(int), &quot;Position at which the component was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;added&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent had been added to a Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRender" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component rendering is finished.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterrender&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component rendering is finished." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeActivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a AbstractComponent has been visually activated. Returning false from an event listener can prevent the activate from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a AbstractComponent has been visually activated. Returning false from an event listener can prevent the activate from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a AbstractComponent has been visually deactivated. Returning false from an event listener can prevent the deactivate from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a AbstractComponent has been visually deactivated. Returning false from an event listener can prevent the deactivate from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDestroy" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is destroyed. Return false from an event handler to stop the destroy.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedestroy&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is destroyed. Return false from an event handler to stop the destroy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeHide" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is hidden when calling the hide method. Return false from an event handler to stop the hide.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforehide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is hidden when calling the hide method. Return false from an event handler to stop the hide." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRender" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is rendered. Return false from an event handler to stop the render.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerender&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is rendered. Return false from an event handler to stop the render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeShow" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is shown when calling the show method. Return false from an event handler to stop the show.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeshow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is shown when calling the show method. Return false from an event handler to stop the show." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a AbstractComponent has been visually deactivated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent has been visually deactivated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is destroyed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disable" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is disabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disable&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is disabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enable" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is enabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enable&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is enabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hide" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is hidden. Fires after the component is hidden when calling the hide method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is hidden. Fires after the component is hidden when calling the hide method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Removed" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a component is removed from an Ext.container.Container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;removed&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is removed from an Ext.container.Container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Render" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component markup is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;render&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component markup is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;adjWidth&quot;, typeof(int), &quot;The box-adjusted width that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;adjHeight&quot;, typeof(AbstractComponent), &quot;The box-adjusted height that was set&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Show" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is shown when calling the show method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;show&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is shown when calling the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateRestore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the state of the component is restored. Return false to stop the restore.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestaterestore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is restored. Return false to stop the restore." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateSave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the state of the component is saved to the configured state provider. Return false to stop the save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestatesave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is saved to the configured state provider. Return false to stop the save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateRestore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the state of the component is restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;staterestore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateSave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the state of the component is saved to the configured state provider.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;statesave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is saved to the configured state provider." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Blur" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this Component loses focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this Component loses focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this Component receives focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this Component receives focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxReady" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires one time - after the component has been layed out for the first time at its initial size.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;boxready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires one time - after the component has been layed out for the first time at its initial size." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractComponentListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires after a AbstractComponent has been visually activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent has been visually activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Added" Type="ComponentListener">
          <Summary><![CDATA[Fires after a AbstractComponent had been added to a Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;pos&quot;, typeof(int), &quot;Position at which the component was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;added&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent had been added to a Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRender" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component rendering is finished.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterrender&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component rendering is finished." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeActivate" Type="ComponentListener">
          <Summary><![CDATA[Fires before a AbstractComponent has been visually activated. Returning false from an event listener can prevent the activate from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a AbstractComponent has been visually activated. Returning false from an event listener can prevent the activate from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires before a AbstractComponent has been visually deactivated. Returning false from an event listener can prevent the deactivate from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a AbstractComponent has been visually deactivated. Returning false from an event listener can prevent the deactivate from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDestroy" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is destroyed. Return false from an event handler to stop the destroy.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedestroy&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is destroyed. Return false from an event handler to stop the destroy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeHide" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is hidden when calling the hide method. Return false from an event handler to stop the hide.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforehide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is hidden when calling the hide method. Return false from an event handler to stop the hide." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRender" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is rendered. Return false from an event handler to stop the render.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerender&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is rendered. Return false from an event handler to stop the render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeShow" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is shown when calling the show method. Return false from an event handler to stop the show.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeshow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is shown when calling the show method. Return false from an event handler to stop the show." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires after a AbstractComponent has been visually deactivated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a AbstractComponent has been visually deactivated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is destroyed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disable" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is disabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disable&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is disabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enable" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is enabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enable&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is enabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hide" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is hidden. Fires after the component is hidden when calling the hide method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is hidden. Fires after the component is hidden when calling the hide method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Removed" Type="ComponentListener">
          <Summary><![CDATA[Fires when a component is removed from an Ext.container.Container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;removed&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is removed from an Ext.container.Container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Render" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component markup is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;render&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component markup is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;adjWidth&quot;, typeof(int), &quot;The box-adjusted width that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;adjHeight&quot;, typeof(AbstractComponent), &quot;The box-adjusted height that was set&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Show" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is shown when calling the show method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;show&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is shown when calling the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateRestore" Type="ComponentListener">
          <Summary><![CDATA[Fires before the state of the component is restored. Return false to stop the restore.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestaterestore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is restored. Return false to stop the restore." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateSave" Type="ComponentListener">
          <Summary><![CDATA[Fires before the state of the component is saved to the configured state provider. Return false to stop the save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestatesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is saved to the configured state provider. Return false to stop the save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateRestore" Type="ComponentListener">
          <Summary><![CDATA[Fires after the state of the component is restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;staterestore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateSave" Type="ComponentListener">
          <Summary><![CDATA[Fires after the state of the component is saved to the configured state provider.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;statesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is saved to the configured state provider." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Blur" Type="ComponentListener">
          <Summary><![CDATA[Fires when this Component loses focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this Component loses focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentListener">
          <Summary><![CDATA[Fires when this Component receives focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this Component receives focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxReady" Type="ComponentListener">
          <Summary><![CDATA[Fires one time - after the component has been layed out for the first time at its initial size.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;boxready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires one time - after the component has been layed out for the first time at its initial size." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractContainer" Abstract="true" Extends="ComponentBase" Inherits="ILayout,IItems">
      <Summary><![CDATA[An abstract base class which provides shared methods for Containers across the Sencha product line.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Description" RawValue="An abstract base class which provides shared methods for Containers across the Sencha product line." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AnchorHeight" Type="int" DefaultValue="0">
          <Summary><![CDATA[The height of this Anchor in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this Anchor in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorWidth" Type="int" DefaultValue="0">
          <Summary><![CDATA[The width of this Anchor in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this Anchor in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorSizeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;anchorSize&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveItem" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string component id or the numeric index of the component that should be initially activated within the container's layout on render. For example, activeItem: 'item-1' or activeItem: 0 (index 0 = the first item in the container's collection). activeItem only applies to layout styles that can display items one at a time (like Ext.layout.container.Card and Ext.layout.container.Fit)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveItem&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string component id or the numeric index of the component that should be initially activated within the container's layout on render. For example, activeItem: 'item-1' or activeItem: 0 (index 0 = the first item in the container's collection). activeItem only applies to layout styles that can display items one at a time (like Ext.layout.container.Card and Ext.layout.container.Fit)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[A string component id or the numeric index of the component that should be initially activated within the container's layout on render. For example, activeItem: 'item-1' or activeItem: 0 (index 0 = the first item in the container's collection). activeItem only applies to layout styles that can display items one at a time (like Ext.layout.container.Card and Ext.layout.container.Fit)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeItem&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveIndex&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string component id or the numeric index of the component that should be initially activated within the container's layout on render. For example, activeItem: 'item-1' or activeItem: 0 (index 0 = the first item in the container's collection). activeItem only applies to layout styles that can display items one at a time (like Ext.layout.container.Card and Ext.layout.container.Fit)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDestroy" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true the container will automatically destroy any contained component that is removed from it, else destruction must be handled manually. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true the container will automatically destroy any contained component that is removed from it, else destruction must be handled manually. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDoLayout" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true .doLayout() is called after render. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true .doLayout() is called after render. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BubbleEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of events that, when fired, should be bubbled to any parent container. See Ext.util.Observable-enableBubble. Defaults to ['add', 'remove'].]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of events that, when fired, should be bubbled to any parent container. See Ext.util.Observable-enableBubble. Defaults to ['add', 'remove']." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultType" Type="string" DefaultValue="&quot;panel&quot;">
          <Summary><![CDATA[The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultButton" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A button is used after Enter is pressed. Can be ID, index or selector]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode=AutoGeneratingScript.Simple" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ButtonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A button is used after Enter is pressed. Can be ID, index or selector" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultButtonProxy" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Defaults" Type="ParameterCollection">
          <Summary><![CDATA[This option is a means of applying default settings to all added items whether added through the items config or via the add or insert methods.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="This option is a means of applying default settings to all added items whether added through the items config or via the add or insert methods." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DetachOnRemove" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to move any component to the detachedBody when the component is removed from this container. This option is only applicable when the component is not destroyed while being removed, see autoDestroy and remove. If this option is set to false, the DOM of the component will remain in the current place until it is explicitly moved. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to move any component to the detachedBody when the component is removed from this container. This option is only applicable when the component is not destroyed while being removed, see autoDestroy and remove. If this option is set to false, the DOM of the component will remain in the current place until it is explicitly moved. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SuspendLayout" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true, suspend calls to doLayout.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, suspend calls to doLayout." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="Protected" Type="ItemsCollection&lt;AbstractComponent&gt;" DefaultValue="null">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsToRenderProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMenu" Type="MenuCollection">
          <Summary><![CDATA[Tab's menu]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabMenu&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tab's menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMenuHidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. True to hide tab's menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTabMenuVisible&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to false. True to hide tab's menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Layout" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The layout type to be used in this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(LayoutConverter)" />
            <Attribute Type="Description" RawValue="The layout type to be used in this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfig" Type="LayoutConfigCollection">
          <Summary><![CDATA[This is a config object containing properties specific to the chosen layout (to be used in conjunction with the layout config value)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;layout&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="This is a config object containing properties specific to the chosen layout (to be used in conjunction with the layout config value)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;layout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Add" ParamsRaw="AbstractComponent component">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="AbstractComponent component, bool render">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="IEnumerable&lt;AbstractComponent&gt; collection">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, AbstractComponent component">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, AbstractComponent component, bool render">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, string id">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Move" ParamsRaw="int fromIdx, int toIdx">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="AbstractComponent component">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="AbstractComponent component, bool autoDestroy">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="string id">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="string id, bool autoDestroy">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll">
          <Summary><![CDATA[Removes all components from this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes all components from this container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll" ParamsRaw="bool autoDestroy">
          <Summary><![CDATA[Removes all components from this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes all components from this container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearContent">
          <Summary><![CDATA[Clear loaded content.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear loaded content." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="string url">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="string url, bool noCache">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="ComponentLoader config">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload">
          <Summary><![CDATA[Reloads the content panel based on the current LoadConfig.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Reloads the content panel based on the current LoadConfig." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractDataView" Abstract="true" Extends="ComponentBase" Inherits="IStore&lt;Store&gt;,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Copy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Always copy items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Always copy items" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowCopy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Copy items if Ctrl key is pressed]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Copy items if Ctrl key is pressed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlockRefresh" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set this to true to ignore datachanged events on the bound store. This is useful if you wish to provide custom transition animations via a plugin (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set this to true to ignore datachanged events on the bound store. This is useful if you wish to provide custom transition animations via a plugin (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferEmptyText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to defer emptyText being applied until the store's first load. Defaults to:true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to defer emptyText being applied until the store's first load. Defaults to:true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferInitialRefresh" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true to defer the initial refresh of the view.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true to defer the initial refresh of the view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableSelection" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable selection within the DataView. Defaults to false. This configuration will lock the selection model that the DataView uses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disable selection within the DataView. Defaults to false. This configuration will lock the selection model that the DataView uses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display in the view when there is no data to display. Note that when using local data the emptyText will not be displayed unless you set the deferEmptyText option to false. Defaults to: \"\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to display in the view when there is no data to display. Note that when using local data the emptyText will not be displayed unless you set the deferEmptyText option to false. Defaults to: \&quot;\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specifies the class to be assigned to each element in the view when used in conjunction with the itemTpl configuration. Defaults to: \"x-dataview-item\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specifies the class to be assigned to each element in the view when used in conjunction with the itemTpl configuration. Defaults to: \&quot;x-dataview-item\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This is a required setting. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes this DataView will be working with. The itemSelector is used to map DOM nodes to records. As such, there should only be one root level element that matches the selector for each record.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="This is a required setting. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes this DataView will be working with. The itemSelector is used to map DOM nodes to records. As such, there should only be one root level element that matches the selector for each record." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The inner portion of the item template to be rendered. Follows an XTemplate structure and will be placed inside of a tpl.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The inner portion of the item template to be rendered. Follows an XTemplate structure and will be placed inside of a tpl." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable a load mask from displaying will the view is loading.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable a load mask from displaying will the view is loading." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to apply to the loading message element (defaults to Ext.LoadMask.prototype.msgCls \"x-mask-loading\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to the loading message element (defaults to Ext.LoadMask.prototype.msgCls \&quot;x-mask-loading\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingUseMsg" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not to use a loading message class or simply mask the bound element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not to use a loading message class or simply mask the bound element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingHeight" Type="int?" DefaultValue="null">
          <Summary><![CDATA[If specified, gives an explicit height for the data view when it is showing the loadingText, if that is specified. This is useful to prevent the view's height from collapsing to zero when the loading mask is applied and there are no other contents in the data view. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If specified, gives an explicit height for the data view when it is showing the loadingText, if that is specified. This is useful to prevent the view's height from collapsing to zero when the loading mask is applied and there are no other contents in the data view. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string to display during data load operations (defaults to undefined). If specified, this text will be displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's contents will continue to display normally until the new data is loaded and the contents are replaced.Defaults to: \"Loading...\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A string to display during data load operations (defaults to undefined). If specified, this text will be displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's contents will continue to display normally until the new data is loaded and the contents are replaced.Defaults to: \&quot;Loading...\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to each item in the view on mouseover. Ensure trackOver is set to true to make use of this.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to each item in the view on mouseover. Ensure trackOver is set to true to make use of this." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveScrollOnRefresh" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to preserve scroll position across refresh operations. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to preserve scroll position across refresh operations. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedItemCls" Type="string" DefaultValue="&quot;x-item-selected&quot;">
          <Summary><![CDATA[A CSS class to apply to each selected item in the view (defaults to 'x-item-selected').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-item-selected&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to each selected item in the view (defaults to 'x-item-selected')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection&lt;Store&gt;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tpl" Modifier="Override" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The HTML fragment or an array of fragments that will make up the template used by this DataView. This should be specified in the same format expected by the constructor of Ext.XTemplate.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The HTML fragment or an array of fragments that will make up the template used by this DataView. This should be specified in the same format expected by the constructor of Ext.XTemplate." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackOver" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable mouseenter and mouseleave events]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable mouseenter and mouseleave events" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareData" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Deselect" ParamsRaw="int index">
          <Summary><![CDATA[Deselects a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a node." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Deselect" ParamsRaw="int index, bool suppressEvent">
          <Summary><![CDATA[Deselects a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a node." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Deselect" ParamsRaw="ModelProxy[] records">
          <Summary><![CDATA[Deselects a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a node." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Deselect" ParamsRaw="ModelProxy[] records, bool suppressEvent">
          <Summary><![CDATA[Deselects a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a node." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Refresh">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RefreshNode" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index, bool keepExisting, bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index, bool keepExisting">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="ModelProxy[] records, bool keepExisting, bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="ModelProxy[] records, bool keepExisting">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="ModelProxy[] records">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int start, int end, bool keepExisting">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int start, int end">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLocked" ParamsRaw="bool locked">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSelectionMode" ParamsRaw="SelectionMode mode">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearHighlight">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HighlightItem" ParamsRaw="Element item">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractDrawComponent" Abstract="true" Extends="ComponentBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Turn on autoSize support which will set the bounding div's size to the natural size of the contents. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DrawComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Turn on autoSize support which will set the bounding div's size to the natural size of the contents. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnginePriority" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[Defines the priority order for which Surface implementation to use. The first one supported by the current environment will be used. Defaults to: [\"Svg\", \"Vml\"]]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DrawComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Defines the priority order for which Surface implementation to use. The first one supported by the current environment will be used. Defaults to: [\&quot;Svg\&quot;, \&quot;Vml\&quot;]" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Gradients" Type="Gradients">
          <Summary><![CDATA[Define a set of gradients that can be used as fill property in sprites.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Define a set of gradients that can be used as fill property in sprites." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewBox" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turn on view box support which will scale and position items in the draw component to fit to the component while maintaining aspect ratio. Note that this scaling can override other sizing settings on yor items. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DrawComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Turn on view box support which will scale and position items in the draw component to fit to the component while maintaining aspect ratio. Note that this scaling can override other sizing settings on yor items. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Background" Type="DrawBackground" DefaultValue="null">
          <Summary><![CDATA[The chart background. This can be a gradient object, image, or color. Defaults to false for no background.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The chart background. This can be a gradient object, image, or color. Defaults to false for no background." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="SpriteCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CallSurface" ParamsRaw="string name, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="Sprite sprite">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="IEnumerable&lt;Sprite&gt; sprites">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddCls" ParamsRaw="Sprite sprite, string className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddCls" ParamsRaw="Sprite sprite, string[] className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddGradient" ParamsRaw="Gradient gradient">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DestroySurface">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="Sprite sprite, bool destroySprite">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="Sprite sprite">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll" ParamsRaw="bool destroySprites">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveCls" ParamsRaw="Sprite sprite, string className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveCls" ParamsRaw="Sprite sprite, string[] className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSurfaceSize" ParamsRaw="int width, int height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStyle" ParamsRaw="Sprite sprite, Dictionary&lt;string, string&gt; styles">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetText" ParamsRaw="Sprite sprite, string text">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractPanel" Abstract="true" Extends="AbstractContainer" Inherits="IIcon,IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TabConfig" Type="Button">
          <Summary><![CDATA[A standard Ext.button.Button config object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A standard Ext.button.Button config object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Additional css class selector to be applied to the body element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;AddBodyCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Additional css class selector to be applied to the body element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Custom CSS styles to be applied to the body element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ApplyBodyStyles&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Custom CSS styles to be applied to the body element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimCollapseDuration" Type="int" DefaultValue="0">
          <Summary><![CDATA[True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.fx.Anim class is available, otherwise false). May also be specified as the animation duration in milliseconds]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.fx.Anim class is available, otherwise false). May also be specified as the animation duration in milliseconds" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimCollapseProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;animCollapse&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyBorder" Type="int?" DefaultValue="null">
          <Summary><![CDATA[A shortcut to add or remove the border on the body of a panel. This only applies to a panel which has the frame configuration set to true. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A shortcut to add or remove the border on the body of a panel. This only applies to a panel which has the frame configuration set to true. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyPadding" Type="int?" DefaultValue="null">
          <Summary><![CDATA[A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyPaddingSummary" Type="string" DefaultValue="null">
          <Summary><![CDATA[A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyPadding&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BottomBar" Type="ToolbarCollection">
          <Summary><![CDATA[The bottom toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The bottom toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonAlign" Type="Alignment" DefaultValue="Alignment.Right">
          <Summary><![CDATA[The alignment of any buttons added to this panel. Valid values are 'right', 'left' and 'center' (defaults to 'right' for buttons/fbar, 'left' for other toolbar types).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Right" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alignment of any buttons added to this panel. Valid values are 'right', 'left' and 'center' (defaults to 'right' for buttons/fbar, 'left' for other toolbar types)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buttons" Type="ItemsCollection&lt;ButtonBase&gt;">
          <Summary><![CDATA[Convenience method used for adding buttons docked to the bottom right of the panel. This is a synonym for the fbar config.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;buttons&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Convenience method used for adding buttons docked to the bottom right of the panel. This is a synonym for the fbar config." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAction" Type="CloseAction" DefaultValue="CloseAction.Destroy">
          <Summary><![CDATA[The action to take when the Panel is closed. The default action is 'close' which will actually remove the Panel from the DOM and destroy it. The other valid option is 'hide' which will simply hide the Panel by setting visibility to hidden and applying negative offsets, keeping the Panel available to be redisplayed via the show method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="CloseAction.Destroy" />
            <Attribute Type="Description" RawValue="The action to take when the Panel is closed. The default action is 'close' which will actually remove the Panel from the DOM and destroy it. The other valid option is 'hide' which will simply hide the Panel by setting visibility to hidden and applying negative offsets, keeping the Panel available to be redisplayed via the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseDirection" Type="Direction" DefaultValue="Direction.None">
          <Summary><![CDATA[The direction to collapse the Panel when the toggle button is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Direction.None" />
            <Attribute Type="Description" RawValue="The direction to collapse the Panel when the toggle button is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseFirst" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the panel's title bar, false to render it last (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the panel's title bar, false to render it last (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseMode" Type="CollapseMode" DefaultValue="CollapseMode.Default">
          <Summary><![CDATA[When not a direct child item of a border layout, then the Panel's header remains visible, and the body is collapsed to zero dimensions. If the Panel has no header, then a new header (orientated correctly depending on the collapseDirection) will be inserted to show a the title and a re-expand tool.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="CollapseMode.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When not a direct child item of a border layout, then the Panel's header remains visible, and the body is collapsed to zero dimensions. If the Panel has no header, then a new header (orientated correctly depending on the collapseDirection) will be inserted to show a the title and a re-expand tool." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the panel collapsed, false to render it expanded (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetCollapsed&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the panel collapsed, false to render it expanded (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapsedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to add to the panel's element after it has been collapsed (defaults to 'x-collapsed').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class to add to the panel's element after it has been collapsed (defaults to 'x-collapsed')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the panel collapsible and have an expand/collapse toggle Tool added into the header tool button area. False to keep the panel sized either statically, or by an owning layout manager, with no toggle Tool (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make the panel collapsible and have an expand/collapse toggle Tool added into the header tool button area. False to keep the panel sized either statically, or by an owning layout manager, with no toggle Tool (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DockedItems" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Summary><![CDATA[A component or series of components to be added as docked items to this panel. The docked items can be docked to either the top, right, left or bottom of a panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A component or series of components to be added as docked items to this panel. The docked items can be docked to either the top, right, left or bottom of a panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DockedItemsProxy" Access="Protected" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dockedItems&quot;, typeof(ItemCollectionJsonConverter)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FooterBar" Type="ToolbarCollection">
          <Summary><![CDATA[Convenience method used for adding items to the bottom right of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;fbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Convenience method used for adding items to the bottom right of the panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeftBar" Type="ToolbarCollection">
          <Summary><![CDATA[Convenience method. Short for 'Left Bar' (left-docked, vertical toolbar).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;lbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Convenience method. Short for 'Left Bar' (left-docked, vertical toolbar)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightBar" Type="ToolbarCollection">
          <Summary><![CDATA[Convenience method. Short for 'Right Bar' (right-docked, vertical toolbar).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Convenience method. Short for 'Right Bar' (right-docked, vertical toolbar)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Floatable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow clicking a collapsed Panel's placeHolder to display the Panel floated above the layout, false to force the user to fully expand a collapsed region by clicking the expand button to see it again (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow clicking a collapsed Panel's placeHolder to display the Panel floated above the layout, false to force the user to fully expand a collapsed region by clicking the expand button to see it again (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FrameHeader" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to apply a frame to the panel panels header (if 'frame' is true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to apply a frame to the panel panels header (if 'frame' is true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Pass as false to prevent a Header from being created and shown.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Pass as false to prevent a Header from being created and shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderConfig" Type="PanelHeader" DefaultValue="null">
          <Summary><![CDATA[Pass as a config object (optionally containing an xtype) to custom-configure this Panel's header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Panel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;header&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Pass as a config object (optionally containing an xtype) to custom-configure this Panel's header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderPosition" Type="Direction" DefaultValue="Direction.Top">
          <Summary><![CDATA[Specify as 'top', 'bottom', 'left' or 'right'. Defaults to 'top'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Direction.Top" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify as 'top', 'bottom', 'left' or 'right'. Defaults to 'top'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderTextCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to add to the panel's header text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class to add to the panel's header text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCollapseTool" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the expand/collapse toggle button when collapsible == true, false to display it (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the expand/collapse toggle button when collapsible == true, false to display it (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ManageHeight" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When true, the dock component layout writes height information to the panel's DOM elements based on its shrink wrap height calculation. This ensures that the browser respects the calculated height. When false, the dock component layout will not write heights on the panel or its body element. In some simple layout cases, not writing the heights to the DOM may be desired because this allows the browser to respond to direct DOM manipulations (like animations).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When true, the dock component layout writes height information to the panel's DOM elements based on its shrink wrap height calculation. This ensures that the browser respects the calculated height. When false, the dock component layout will not write heights on the panel or its body element. In some simple layout cases, not writing the heights to the DOM may be desired because this allows the browser to respond to direct DOM manipulations (like animations)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinButtonWidth" Type="int" DefaultValue="75">
          <Summary><![CDATA[Minimum width of all footer toolbar buttons in pixels (defaults to undefined). If set, this will be used as the default value for the Ext.button.Button-minWidth config of each Button added to the footer toolbar. Will be ignored for buttons that have this value configured some other way, e.g. in their own config object or via the defaults of their parent container]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="75" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Minimum width of all footer toolbar buttons in pixels (defaults to undefined). If set, this will be used as the default value for the Ext.button.Button-minWidth config of each Button added to the footer toolbar. Will be ignored for buttons that have this value configured some other way, e.g. in their own config object or via the defaults of their parent container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverlapHeader" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to overlap the header in a panel over the framing of the panel itself. This is needed when frame:true (and is done automatically for you). Otherwise it is undefined. If you manually add rounded corners to a panel header which does not have frame:true, this will need to be set to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to overlap the header in a panel over the framing of the panel itself. This is needed when frame:true (and is done automatically for you). Otherwise it is undefined. If you manually add rounded corners to a panel header which does not have frame:true, this will need to be set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PlaceHolder" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Summary><![CDATA[A Component (or config object for a Component) to show in place of this Panel when this Panel is collapsed by a border layout. Defaults to a generated Header containing a Tool to re-expand the Panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A Component (or config object for a Component) to show in place of this Panel when this Panel is collapsed by a border layout. Defaults to a generated Header containing a Tool to re-expand the Panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TopBar" Type="ToolbarCollection">
          <Summary><![CDATA[Convenience method used for adding items to the top of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Convenience method used for adding items to the top of the panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text to display in the panel header (defaults to ''). When a title is specified the header element will automatically be created and displayed unless header is explicitly set to false. If you don't want to specify a title at config time, but you may want one later, you must either specify a non-empty title (a blank space ' ' will do) or header:true so that the content Container element will get created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTitle&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text to display in the panel header (defaults to ''). When a title is specified the header element will automatically be created and displayed unless header is explicitly set to false. If you don't want to specify a title at config time, but you may want one later, you must either specify a non-empty title (a blank space ' ' will do) or header:true so that the content Container element will get created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleAlign" Type="TitleAlign" DefaultValue="TitleAlign.Default">
          <Summary><![CDATA[May be \"left\", \"right\" or \"center\". The alignment of the title text within the available space between the icon and the tools. Defaults to: \"left\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TitleAlign.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="May be \&quot;left\&quot;, \&quot;right\&quot; or \&quot;center\&quot;. The alignment of the title text within the available space between the icon and the tools. Defaults to: \&quot;left\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleCollapse" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow expanding and collapsing the panel (when collapsible = true) by clicking anywhere in the header bar, false) to allow it only by clicking to tool button (defaults to false)).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow expanding and collapsing the panel (when collapsible = true) by clicking anywhere in the header bar, false) to allow it only by clicking to tool button (defaults to false))." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableConfigProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggablePanelConfig" Type="DragSource" DefaultValue="null">
          <Summary><![CDATA[Drag config object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Drag config object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultDockWeights" Type="string" DefaultValue="null">
          <Summary><![CDATA[This object holds the default weights applied to dockedItems that have no weight. These start with a weight of 1, to allow negative weights to insert before top items and are odd numbers so that even weights can be used to get between different dock orders. Defaults to: {top: 1, left: 3, right: 5, bottom: 7}. A string must be the four numbers separated by space symbols. The first number is a top dock weight, the second one - left, the third one - right, the fourth one - bottom.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="Description" RawValue="This object holds the default weights applied to dockedItems that have no weight. These start with a weight of 1, to allow negative weights to insert before top items and are odd numbers so that even weights can be used to get between different dock orders. Defaults to: {top: 1, left: 3, right: 5, bottom: 7}. A string must be the four numbers separated by space symbols. The first number is a top dock weight, the second one - left, the third one - right, the fourth one - bottom." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultDockWeightsProxy" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultDockWeights&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will provide a background image to be used as the panel header icon (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class that will provide a background image to be used as the panel header icon (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconPath" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will provide a background image to be used as the panel header icon (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Url" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconPath&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class that will provide a background image to be used as the panel header icon (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyMap" Type="KeyBindingCollection">
          <Summary><![CDATA[A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;keys&quot;, JsonMode.Array" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tools" Type="ToolsCollection">
          <Summary><![CDATA[An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tools&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unstyled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Overrides the baseCls setting to baseCls = 'x-plain' which renders the panel unstyled except for required attributes for Ext layouts to function (e.g. overflow:hidden).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Overrides the baseCls setting to baseCls = 'x-plain' which renders the panel unstyled except for required attributes for Ext layouts to function (e.g. overflow:hidden)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="RemoveDocked" ParamsRaw="string id">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveDocked" ParamsRaw="string id, bool autoDestroy">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyBodyStyles" ParamsRaw="string style">
          <Summary><![CDATA[Apply css styles for body]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Apply css styles for body" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddBodyCls" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveBodyCls" ParamsRaw="string cls">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse" ParamsRaw="Direction direction, bool animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse" ParamsRaw="Direction direction">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Expand">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Expand" ParamsRaw="bool animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitle" ParamsRaw="string title">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleCollapse">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Close">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractProxy" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Abstract="true" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BatchActions" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to batch actions of a particular type when synchronizing the store. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AbstractProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to batch actions of a particular type when synchronizing the store. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BatchOrder" Type="string" DefaultValue="&quot;create,update,destroy&quot;">
          <Summary><![CDATA[Comma-separated ordering 'create', 'update' and 'destroy' actions when batching. Override this to set a different order for the batched CRUD actions to be executed in. Defaults to 'create,update,destroy']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AbstractProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;create,update,destroy&quot;" />
            <Attribute Type="Description" RawValue="Comma-separated ordering 'create', 'update' and 'destroy' actions when batching. Override this to set a different order for the batched CRUD actions to be executed in. Defaults to 'create,update,destroy'" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractReader" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Abstract="true" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the property within a row object that contains a record identifier value. Defaults to The id of the model. If an idProperty is explicitly specified it will override that of the one specified on the model]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idProperty&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the property within a row object that contains a record identifier value. Defaults to The id of the model. If an idProperty is explicitly specified it will override that of the one specified on the model" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImplicitIncludes" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically parse models nested within other models in a response object. See the Ext.data.reader.Reader intro docs for full explanation. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically parse models nested within other models in a response object. See the Ext.data.reader.Reader intro docs for full explanation. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadRecordsOnFailure" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to read extract the records from a data packet even if the success property returns false. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to read extract the records from a data packet even if the success property returns false. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the property which contains the Array of row objects. For JSON reader it's dot-separated list of property names. For XML reader it's a CSS selector. For array reader it's not applicable.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the property which contains the Array of row objects. For JSON reader it's dot-separated list of property names. For XML reader it's a CSS selector. For array reader it's not applicable." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SuccessProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the property from which to retrieve the success attribute. Defaults to success. See Ext.data.proxy.Proxy.exception for additional information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the property from which to retrieve the success attribute. Defaults to success. See Ext.data.proxy.Proxy.exception for additional information." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TotalProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the property from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server. Defaults to total.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the property from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server. Defaults to total." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the property which contains a response message. This property is optional.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the property which contains a response message. This property is optional." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ModelName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The Ext.data.Model associated with this reader]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;model&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The Ext.data.Model associated with this reader" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractSelectionModel" Abstract="true" Extends="LazyObservable">
      <Summary><![CDATA[Tracks what records are currently selected in a databound component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Tracks what records are currently selected in a databound component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDeselect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow users to deselect a record in a DataView, List or Grid. Only applicable when the SelectionModel's mode is 'SINGLE'. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Allow users to deselect a record in a DataView, List or Grid. Only applicable when the SelectionModel's mode is 'SINGLE'. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PruneRemoved" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Prune records when they are removed from the store from the selection.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Prune records when they are removed from the store from the selection." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="SelectionMode" DefaultValue="SelectionMode.Single">
          <Summary><![CDATA[Modes of selection. Valid values are SINGLE, SIMPLE, and MULTI. Defaults to 'SINGLE']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetSelectionMode&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SelectionMode.Single" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Modes of selection. Valid values are SINGLE, SIMPLE, and MULTI. Defaults to 'SINGLE'" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractSelectionModelDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a selection change has occurred]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selected&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a selection change has occurred" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractSelectionModelListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fired after a selection change has occurred]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selected&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a selection change has occurred" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractSeries" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SeriesID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;seriesId&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Highlight" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true it will highlight the markers or the series when hovering with the mouse. This parameter can also be an object with the same style properties you would apply to a Ext.draw.Sprite to apply custom styles to markers and series.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true it will highlight the markers or the series when hovering with the mouse. This parameter can also be an object with the same style properties you would apply to a Ext.draw.Sprite to apply custom styles to markers and series." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightConfig" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;highlightCfg&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Label" Type="SeriesLabel" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="JFunction">
          <Summary><![CDATA[A function that can be overridden to set custom styling properties to each rendered element. Passes in (sprite, record, attributes, index, store) to the function.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A function that can be overridden to set custom styling properties to each rendered element. Passes in (sprite, record, attributes, index, store) to the function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowInLegend" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to show this series in the legend. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to show this series in the legend. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tips" Type="ChartTip" DefaultValue="null">
          <Summary><![CDATA[Add tooltips to the visualization's markers. The options for the tips are the same configuration used with Ext.tip.ToolTip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tips&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Add tooltips to the visualization's markers. The options for the tips are the same configuration used with Ext.tip.ToolTip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The human-readable name of the series.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The human-readable name of the series." />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetTitle&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Titles" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The human-readable name of the series.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;title&quot;, typeof(SingleStringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The human-readable name of the series." />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTitles&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XField" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The field used to access the x axis value from the items from the data source.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleStringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The field used to access the x axis value from the items from the data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YField" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The field used to access the y axis value from the items from the data source.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleStringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The field used to access the y axis value from the items from the data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="SeriesListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="HideAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitle" ParamsRaw="string title">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitles" ParamsRaw="string[] titles">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitle" ParamsRaw="int index, string title">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractStore" Abstract="true" Extends="Observable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;storeId&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDestroy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to destroy the store when the component the store is bound to is destroyed (defaults to false). Note: this should be set to true when using stores that are bound to only 1 component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractStore&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to destroy the store when the component the store is bound to is destroyed (defaults to false). Note: this should be set to true when using stores that are bound to only 1 component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called after creation. If the value of autoLoad is an Object, this Object will be passed to the store's load method. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractStore&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called after creation. If the value of autoLoad is an Object, this Object will be passed to the store's load method. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on auto load HTTP request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on auto load HTTP request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadParamsProxy" Access="Protected" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;, typeof(AutoLoadParamsJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Parameters" Type="StoreParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on any HTTP request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on any HTTP request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParametersProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;readParameters&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncParameters" Type="StoreParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on sync request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on sync request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncParametersProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;writeParameters&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSync" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically sync the Store with its Proxy after every edit to one of its Records. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractStore&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically sync the Store with its Proxy after every edit to one of its Records. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Proxy" Type="ProxyCollection">
          <Summary><![CDATA[The Proxy to use for this Store.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&gt;Primary&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Proxy to use for this Store." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BatchUpdateMode" Type="BatchUpdateMode" DefaultValue="BatchUpdateMode.Operation">
          <Summary><![CDATA[Sets the updating behavior based on batch synchronization.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="BatchUpdateMode.Operation" />
            <Attribute Type="Description" RawValue="Sets the updating behavior based on batch synchronization." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterOnLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired. Defaults to true, ignored if remoteFilter is true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired. Defaults to true, ignored if remoteFilter is true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Filters" Type="DataFilterCollection">
          <Summary><![CDATA[The collection of Filters currently applied to this Store]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The collection of Filters currently applied to this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortOnLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired. Defaults to true, igored if remoteSort is true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired. Defaults to true, igored if remoteSort is true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortRoot" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field name by which to sort the store's data (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field name by which to sort the store's data (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sorters" Type="DataSorterCollection">
          <Summary><![CDATA[The collection of Sorters currently applied to this Store]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The collection of Sorters currently applied to this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWarningOnFailure" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Show a Window with error message is DirectEvent request fails.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Show a Window with error message is DirectEvent request fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ModelName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The Ext.data.Model associated with this store]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;model&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The Ext.data.Model associated with this store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Model" Type="ModelCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;model&gt;Primary&quot;, 1" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="LoadProxy" ParamsRaw="object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadProxy">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload" ParamsRaw="object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload" ParamsRaw="object options, AbstractProxy proxy">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload" ParamsRaw="ParameterCollection parameters">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetProxy" ParamsRaw="string proxyType">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetProxy" ParamsRaw="AbstractProxy proxy">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Sync">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ResumeAutoSync">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SuspendAutoSync">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractStoreDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when a Model instance has been added to this Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Model instances that were added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the instances were inserted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a Model instance has been added to this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;, typeof(object), &quot;The Ext.data.Operation object that will be passed to the Proxy to load the Store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentDirectEvent">
          <Summary><![CDATA[Called before a call to sync is executed. Return false from any listener to cancel the sync]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;options&quot;, typeof(object), &quot;Hash of all records to be synchronized, broken down into create, update and destroy&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Called before a call to sync is executed. Return false from any listener to cancel the sync" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Clear" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after the removeAll method is called.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after the removeAll method is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataChanged" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever the records in the Store have changed in some way - this could include adding or removing records, or updating the data in existing records]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datachanged&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the records in the Store have changed in some way - this could include adding or removing records, or updating the data in existing records" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever the store reads data from a remote data source.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;, typeof(object), &quot;True if the operation was successful.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the store reads data from a remote data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when a Model instance has been removed from this Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The Record that was removed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a Model instance has been removed from this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a Record has been updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The Model instance that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(object), &quot;The update operation being performed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;modifiedFieldNames&quot;, typeof(object), &quot;Array of field names changed during edit.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Write" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever a successful write has been made via the configured Proxy]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;write&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever a successful write has been made via the configured Proxy" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the server returns an exception]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(AbstractProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(string), &quot;The response from the AJAX request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(string), &quot;The operation that triggered request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the server returns an exception" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MetaChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this store's underlying reader (available via the proxy) provides new metadata. Metadata usually consists of new field definitions, but can include any configuration data required by an application, and can be processed as needed in the event handler. This event is currently only fired for JsonReaders.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;meta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;metachange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this store's underlying reader (available via the proxy) provides new metadata. Metadata usually consists of new field definitions, but can include any configuration data required by an application, and can be processed as needed in the event handler. This event is currently only fired for JsonReaders." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a widget that is using this Store as a Record cache should refresh its view.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a widget that is using this Store as a Record cache should refresh its view." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractStoreListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentListener">
          <Summary><![CDATA[Fired when a Model instance has been added to this Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Model instances that were added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the instances were inserted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a Model instance has been added to this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;, typeof(object), &quot;The Ext.data.Operation object that will be passed to the Proxy to load the Store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentListener">
          <Summary><![CDATA[Called before a call to sync is executed. Return false from any listener to cancel the sync]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;options&quot;, typeof(object), &quot;Hash of all records to be synchronized, broken down into create, update and destroy&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Called before a call to sync is executed. Return false from any listener to cancel the sync" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Clear" Type="ComponentListener">
          <Summary><![CDATA[Fired after the removeAll method is called.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after the removeAll method is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataChanged" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever the records in the Store have changed in some way - this could include adding or removing records, or updating the data in existing records]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datachanged&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the records in the Store have changed in some way - this could include adding or removing records, or updating the data in existing records" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever the store reads data from a remote data source.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;, typeof(object), &quot;True if the operation was successful.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the store reads data from a remote data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fired when a Model instance has been removed from this Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The Record that was removed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a Model instance has been removed from this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires when a Record has been updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The Model instance that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(object), &quot;The update operation being performed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;modifiedFieldNames&quot;, typeof(object), &quot;Array of field names changed during edit.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Write" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever a successful write has been made via the configured Proxy]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;write&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever a successful write has been made via the configured Proxy" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentListener">
          <Summary><![CDATA[Fires when the server returns an exception]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(AbstractProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(string), &quot;The response from the AJAX request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(string), &quot;The operation that triggered request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the server returns an exception" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MetaChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when this store's underlying reader (available via the proxy) provides new metadata. Metadata usually consists of new field definitions, but can include any configuration data required by an application, and can be processed as needed in the event handler. This event is currently only fired for JsonReaders.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;meta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;metachange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this store's underlying reader (available via the proxy) provides new metadata. Metadata usually consists of new field definitions, but can include any configuration data required by an application, and can be processed as needed in the event handler. This event is currently only fired for JsonReaders." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentListener">
          <Summary><![CDATA[Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a widget that is using this Store as a Record cache should refresh its view.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a widget that is using this Store as a Record cache should refresh its view." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractSummary" Abstract="true" Extends="GridFeature">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShowSummaryRow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to add css for column separation lines. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.toggleSummaryRow({1});&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to add css for column separation lines. Default is false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractTabPanel" Abstract="true" Extends="AbstractPanel" Inherits="IItems,IAutoPostBack,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveTab" Type="AbstractComponent" DefaultValue="null">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VisibleIndex" Access="ProtectedInternal" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True by default to defer the rendering of child items to the browsers DOM until a tab is activated.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True by default to defer the rendering of child items to the browsers DOM until a tab is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTabWidth" Type="int" DefaultValue="0">
          <Summary><![CDATA[The minimum width for a tab in the tabBar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width for a tab in the tabBar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTabWidth" Type="int" DefaultValue="int.MaxValue">
          <Summary><![CDATA[The maximum width for each tab.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MaxValue" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum width for each tab." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to not show the full background on the TabBar. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to not show the full background on the TabBar. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabAlign" Type="TabAlign" DefaultValue="TabAlign.Left">
          <Summary><![CDATA[The alignment of the Tabs (defaults to 'Left'). Other option includes 'Right'. Note that tab scrolling is only supported for TabAlign='Left'. Note that when 'Right', the Tabs will be rendered in reverse order.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabAlign&quot;, JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alignment of the Tabs (defaults to 'Left'). Other option includes 'Right'. Note that tab scrolling is only supported for TabAlign='Left'. Note that when 'Right', the Tabs will be rendered in reverse order." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabBar" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Summary><![CDATA[Optional items for the internal Ext.tab.Bar. If present, this is passed straight through to the TabBar's constructor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabBarItems&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Optional items for the internal Ext.tab.Bar. If present, this is passed straight through to the TabBar's constructor." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The class added to each child item of this TabPanel. Defaults to: \"x-tabpanel-child\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The class added to each child item of this TabPanel. Defaults to: \&quot;x-tabpanel-child\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemovePanelHeader" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to instruct each Panel added to the TabContainer to not render its header element. This is to ensure that the title of the panel does not appear twice. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to instruct each Panel added to the TabContainer to not render its header element. This is to ensure that the title of the panel does not appear twice. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabPosition" Type="TabPosition" DefaultValue="TabPosition.Top">
          <Summary><![CDATA[The position where the tab strip should be rendered. Can be top or bottom. Defaults to: \"top\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabPosition.Top" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The position where the tab strip should be rendered. Can be top or bottom. Defaults to: \&quot;top\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTabMenu" Type="MenuCollection">
          <Summary><![CDATA[Default menu for all tabs]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;defaultTabMenu&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractTabPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Default menu for all tabs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;beforetabchange&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;beforetabchange&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetActiveTab" ParamsRaw="int index">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveTab" ParamsRaw="AbstractComponent item">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveTab" ParamsRaw="string id">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLastTabAsActive">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPreviousTabAsActive">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetNextTabAsActive">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractValidation" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Abstract="true" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Field" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the field to validate]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the field to validate" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="null">
          <Summary><![CDATA[The error message used when a validation fails]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The error message used when a validation fails" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AbstractWindow" Abstract="true" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AnimateTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Id or element from which the window should animate while opening (defaults to null with no animation).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnimateTarget&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ControlConverter)" />
            <Attribute Type="Description" RawValue="Id or element from which the window should animate while opening (defaults to null with no animation)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (default to true).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (default to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAction" Modifier="Override" Type="CloseAction" DefaultValue="CloseAction.Hide">
          <Summary><![CDATA[The action to take when the close button is clicked. The default action is 'close' which will actually remove the window from the DOM and destroy it. The other valid option is 'hide' which will simply hide the window by setting visibility to hidden and applying negative offsets, keeping the window available to be redisplayed via the show method.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="CloseAction.Hide" />
            <Attribute Type="Description" RawValue="The action to take when the close button is clicked. The default action is 'close' which will actually remove the window from the DOM and destroy it. The other valid option is 'hide' which will simply hide the window by setting visibility to hidden and applying negative offsets, keeping the window available to be redisplayed via the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain the window within its containing element, false to allow it to fall outside of its containing element. By default the window will be rendered to document.body. To render and constrain the window within another element specify renderTo. (defaults to false). Optionally the header only can be constrained using constrainHeader.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to constrain the window within its containing element, false to allow it to fall outside of its containing element. By default the window will be rendered to document.body. To render and constrain the window within another element specify renderTo. (defaults to false). Optionally the header only can be constrained using constrainHeader." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain the window header within its containing element (allowing the window body to fall outside of its containing element) or false to allow the header to fall outside its containing element (defaults to false). Optionally the entire window can be constrained using constrain.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to constrain the window header within its containing element (allowing the window body to fall outside of its containing element) or false to allow the header to fall outside its containing element (defaults to false). Optionally the entire window can be constrained using constrain." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainToElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An element id which is used to constrain the window.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;constrainTo&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An element id which is used to constrain the window." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainToRegion" Type="System.Drawing.Rectangle?" DefaultValue="null">
          <Summary><![CDATA[A region which is used to constrain the window.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A region which is used to constrain the window." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainToRegionProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;constrainTo&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultFocus" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of a button to focus when this window received the focus.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of a button to focus when this window received the focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultFocusProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultFocus&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultRenderTo" Type="DefaultRenderTo" DefaultValue="DefaultRenderTo.Body">
          <Summary><![CDATA[The default render to Element (Body or Form). Using when AutoRender='false']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="DefaultRenderTo.Body" />
            <Attribute Type="Description" RawValue="The default render to Element (Body or Form). Using when AutoRender='false'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnShow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to always expand the window when it is displayed, false to keep it in its current state (which may be collapsed) when displayed (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to always expand the window when it is displayed, false to keep it in its current state (which may be collapsed) when displayed (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnShowProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;expandOnShow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Render this Window hidden (default is true). If true, the hide method will be called internally.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.setVisible(!{1});&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this Window hidden (default is true). If true, the hide method will be called internally." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Modifier="Override" Type="HideMode" DefaultValue="HideMode.Offsets">
          <Summary><![CDATA[A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Offsets" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximizable" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initially display the window in a maximized state. (Defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to initially display the window in a maximized state. (Defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimizable" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ToggleModal&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnEsc" Type="string" DefaultValue="&quot;Ext.emptyFn&quot;">
          <Summary><![CDATA[Allows override of the built-in processing for the escape key. Default action is to close the Window (performing whatever action is specified in closeAction. To prevent the Window closing when the escape key is pressed, specify this as Ext.emptyFn (See Ext.emptyFn).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Ext.emptyFn&quot;" />
            <Attribute Type="Description" RawValue="Allows override of the built-in processing for the escape key. Default action is to close the Window (performing whatever action is specified in closeAction. To prevent the Window closing when the escape key is pressed, specify this as Ext.emptyFn (See Ext.emptyFn)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the window body with a transparent background so that it will blend into the framing elements, false to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AbstractWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render the window body with a transparent background so that it will blend into the framing elements, false to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this component in pixels." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of this component in pixels." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRender" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="This config is intended mainly for floating Components which may or may not be shown. Instead of using renderTo in the configuration, and rendering upon construction, this allows a AbstractComponent to render itself upon first show. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Hide" ParamsRaw="Control animateTarget">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="Control animateTarget, string callback">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="Control animateTarget, string callback, string scope">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" Modifier="Override" ParamsRaw="string animateTarget, string callback, string scope">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Maximize">
          <Summary><![CDATA[Fits the window within its current container and automatically replaces the 'maximize' tool button with the 'restore' tool button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Fits the window within its current container and automatically replaces the 'maximize' tool button with the 'restore' tool button." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Minimize">
          <Summary><![CDATA[Placeholder method for minimizing the window. By default, this method simply fires the minimize event since the behavior of minimizing a window is application-specific. To implement custom minimize behavior, either the minimize event can be handled or this method can be overridden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Placeholder method for minimizing the window. By default, this method simply fires the minimize event since the behavior of minimizing a window is application-specific. To implement custom minimize behavior, either the minimize event can be handled or this method can be overridden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Restore">
          <Summary><![CDATA[Restores a maximized window back to its original size and position prior to being maximized and also replaces the 'restore' tool button with the 'maximize' tool button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Restores a maximized window back to its original size and position prior to being maximized and also replaces the 'restore' tool button with the 'maximize' tool button." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAnimateTarget" ParamsRaw="string element">
          <Summary><![CDATA[Sets the target element from which the window should animate while opening.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the target element from which the window should animate while opening." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAnimateTarget" ParamsRaw="Control element">
          <Summary><![CDATA[Sets the target element from which the window should animate while opening.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the target element from which the window should animate while opening." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMaximize">
          <Summary><![CDATA[A shortcut method for toggling between maximize and restore based on the current maximized state of the window.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="A shortcut method for toggling between maximize and restore based on the current maximized state of the window." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractWriter" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Abstract="true" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NameProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This property is used to read the key for each value that will be sent to the server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This property is used to read the key for each value that will be sent to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WriteAllFields" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to write all fields from the record to the server. If set to false it will only send the fields that were modified. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to write all fields from the record to the server. If set to false it will only send the fields that were modified. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetRecordData" Type="JFunction">
          <Summary><![CDATA[Formats the data for each record before sending it to the server. This method should be overridden to format the data in a way that differs from the default.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Formats the data for each record before sending it to the server. This method should be overridden to format the data in a way that differs from the default." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterRecord" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterField" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prepare" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExcludeId" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SkipIdForPhantomRecords" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SkipPhantomId" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AccordionLayoutConfig" Extends="VBoxLayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveOnTop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to swap the position of each panel as it is expanded so that it becomes the first item in the container, false to keep the panels in the rendered order.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to swap the position of each panel as it is expanded so that it becomes the first item in the container, false to keep the panels in the rendered order." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OriginalHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then original header UI is used]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true then original header UI is used" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseFirst" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fill" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to adjust the active item's height to fill the available space in the container, false to use the item's current height, or auto height if not explicitly set (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to adjust the active item's height to fill the available space in the container, false to use the item's current height, or auto height if not explicitly set (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCollapseTool" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Multi" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. Set to true to enable multiple accordion items to be open at once.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Defaults to false. Set to true to enable multiple accordion items to be open at once." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ActionColumn" Extends="ColumnBase" Inherits="IIcon">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="AltText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The alt text to use for the image element. Defaults to ''.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alt text to use for the image element. Defaults to ''." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true. Prevent grid row selection upon mousedown.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true. Prevent grid row selection upon mousedown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ActionItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ActionItem" Extends="BaseItem">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[An icon to apply to the icon image. To determine the class dynamically, configure the item with a getClass function.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An icon to apply to the icon image. To determine the class dynamically, configure the item with a getClass function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to the icon image. To determine the class dynamically, configure the item with a getClass function.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class to apply to the icon image. To determine the class dynamically, configure the item with a getClass function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The url of an image to display as the clickable element in the column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The url of an image to display as the clickable element in the column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetClass" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A function which returns the CSS class to apply to the icon image.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A function which returns the CSS class to apply to the icon image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the icon is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the icon is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[The scope (this reference) in which the handler and getClass functions are executed. Fallback defaults are this Column's configured scope, then this Column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler and getClass functions are executed. Fallback defaults are this Column's configured scope, then this Column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tooltip" Type="string" DefaultValue="null">
          <Summary><![CDATA[A tooltip message to be displayed on hover. Ext.tip.QuickTipManager must have been initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A tooltip message to be displayed on hover. Ext.tip.QuickTipManager must have been initialized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true, the action will not respond to click events, and will be displayed semi-opaque.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true, the action will not respond to click events, and will be displayed semi-opaque." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ActionItemCollection" Extends="BaseItemCollection&lt;ActionItem&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterDirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordDeletedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordInsertedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordUpdatedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterStoreChangedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AjaxOptions" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DisableCaching" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to add a unique cache-buster param to GET requests. (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a unique cache-buster param to GET requests. (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCachingParam" Type="string" DefaultValue="&quot;_dc&quot;">
          <Summary><![CDATA[Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;_dc&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The timeout in milliseconds to be used for requests. (defaults to 30000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="Description" RawValue="The timeout in milliseconds to be used for requests. (defaults to 30000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to which to send the request, or a function to call which returns a URL string. The scope of the function is specified by the scope option. Defaults to the configured url.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The URL to which to send the request, or a function to call which returns a URL string. The scope of the function is specified by the scope option. Defaults to the configured url." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="Description" RawValue="The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use for the request. Defaults to the configured method, or if no method was configured, \"GET\" if no parameters are being sent, and \"POST\" if parameters are being sent. Note that the method name is case-sensitive and should be all caps.]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="Description" RawValue="The HTTP method to use for the request. Defaults to the configured method, or if no method was configured, \&quot;GET\&quot; if no parameters are being sent, and \&quot;POST\&quot; if parameters are being sent. Note that the method name is case-sensitive and should be all caps." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsUpload" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[JSON data to use as the post. ]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="JSON data to use as the post. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Xml" Type="bool" DefaultValue="false">
          <Summary><![CDATA[XML document to use for the post.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="XML document to use for the post." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the form to submit. If this.ParentForm is not null then this.ParentForm.ClientID is used, else if FormID is empty the Page.Form.ClientID is used, else try to find the form in dom tree hierarchy, otherwise the Url of current page is used.]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the form to submit. If this.ParentForm is not null then this.ParentForm.ClientID is used, else if FormID is empty the Page.Form.ClientID is used, else try to find the form in dom tree hierarchy, otherwise the Url of current page is used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormProxyArg" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;form&quot;" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Headers" Type="ParameterCollection">
          <Summary><![CDATA[An object containing request headers which are added to each request made by this object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing request headers which are added to each request made by this object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Callback" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CallbackProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;callback&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AjaxProxy" Extends="ServerProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Headers" Type="ParameterCollection">
          <Summary><![CDATA[Any headers to add to the Ajax request. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Any headers to add to the Ajax request. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Send params as JSON object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Send params as JSON object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Xml" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Send params as XML object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Send params as XML object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionMethods" Type="CRUDMethods">
          <Summary><![CDATA[Mapping of action name to HTTP request method. In the basic AjaxProxy these are set to 'GET' for 'read' actions and 'POST' for 'create', 'update' and 'destroy' actions. The Ext.data.proxy.Rest maps these to the correct RESTful methods.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Mapping of action name to HTTP request method. In the basic AjaxProxy these are set to 'GET' for 'read' actions and 'POST' for 'create', 'update' and 'destroy' actions. The Ext.data.proxy.Rest maps these to the correct RESTful methods." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionMethodsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionMethods&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetMethod" Type="JFunction">
          <Summary><![CDATA[Returns the HTTP method name for a given request. By default this returns based on a lookup on actionMethods.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the HTTP method name for a given request. By default this returns based on a lookup on actionMethods." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AjaxResult" Extends="ActionResult">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AnchorLayoutConfig" Extends="LayoutConfig">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAnchor" Type="string" DefaultValue="null">
          <Summary><![CDATA[Default anchor for all child container items applied if no anchor or specific width is set on the child item. Defaults to '100%'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Default anchor for all child container items applied if no anchor or specific width is set on the child item. Defaults to '100%'." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AnimConfig" Extends="BaseItem">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Alternate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Used in conjunction with iterations to reverse the animation each time an iteration completes.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Used in conjunction with iterations to reverse the animation each time an iteration completes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Callback" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function to be run after the animation has completed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function to be run after the animation has completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope that the callback function will be called with]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope that the callback function will be called with" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="0">
          <Summary><![CDATA[Time to delay before starting the animation. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Time to delay before starting the animation. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="int" DefaultValue="250">
          <Summary><![CDATA[Time in milliseconds for the animation to last. Defaults to 250.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Time in milliseconds for the animation to last. Defaults to 250." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Dynamic" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Currently only for AbstractComponent Animation: Only set a component's outer element size bypassing layouts. Set to true to do full layouts for every frame of the animation. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Currently only for AbstractComponent Animation: Only set a component's outer element size bypassing layouts. Set to true to do full layouts for every frame of the animation. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.Ease">
          <Summary><![CDATA[This describes how the intermediate values used during a transition will be calculated. It allows for a transition to change speed over its duration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="Easing.Ease" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This describes how the intermediate values used during a transition will be calculated. It allows for a transition to change speed over its duration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EasingArgs" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This describes how the intermediate values used during a transition will be calculated. It allows for a transition to change speed over its duration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This describes how the intermediate values used during a transition will be calculated. It allows for a transition to change speed over its duration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EasingProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;easing&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="From" Type="ParameterCollection">
          <Summary><![CDATA[An object containing property/value pairs for the beginning of the animation. If not specified, the current state of the Ext.fx.target will be used.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing property/value pairs for the beginning of the animation. If not specified, the current state of the Ext.fx.target will be used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Iterations" Type="int" DefaultValue="1">
          <Summary><![CDATA[Number of times to execute the animation. Defaults to 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of times to execute the animation. Defaults to 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyFrames" Type="InsertOrderedDictionary&lt;string,ParameterCollection&gt;" DefaultValue="null">
          <Summary><![CDATA[Animation keyframes follow the CSS3 Animation configuration pattern.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Animation keyframes follow the CSS3 Animation configuration pattern." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyFramesProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;keyframes&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reverse" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Run the animation from the end to the beginning. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Run the animation from the end to the beginning. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="To" Type="ParameterCollection">
          <Summary><![CDATA[An object containing property/value pairs for the end of the animation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing property/value pairs for the end of the animation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="AnimConfigListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. AnimConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AnimConfigListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="AfterAnimate" Type="ComponentListener">
          <Summary><![CDATA[Fires when the animation is complete.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AnimConfig), &quot;Ext.fx.Anim&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startTime&quot;, typeof(DateTime), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteranimate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the animation is complete." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAnimate" Type="ComponentListener">
          <Summary><![CDATA[Fires before the animation starts. A handler can return false to cancel the animation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AnimConfig), &quot;Ext.fx.Anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeanimate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the animation starts. A handler can return false to cancel the animation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LastFrame" Type="ComponentListener">
          <Summary><![CDATA[Fires when the animation's last frame has been set.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AnimConfig), &quot;Ext.fx.Anim&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startTime&quot;, typeof(DateTime), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;lastframe&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the animation's last frame has been set." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="App" Extends="ControllerBase" Inherits="ICustomConfigSerialization">
      <Summary><![CDATA[Represents an Application, which is typically a single page app using a Viewport.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Application runat=\&quot;server\&quot; Name=\&quot;CompanyX\&quot;&gt;&lt;Launch&gt;&lt;{0}:Viewport runat=\&quot;server\&quot; Layout=\&quot;FitLayout\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Viewport&gt;&lt;/Launch&gt;&lt;/{0}:Application&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(App), &quot;Build.ToolboxIcons.Application.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Name&quot;" />
        <Attribute Type="Description" RawValue="Represents an Application, which is typically a single page app using a Viewport." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Launch" Type="ItemsCollection&lt;Observable&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of your application. This will also be the namespace for your views, controllers models and stores. Don't use spaces or special characters in the name.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of your application. This will also be the namespace for your views, controllers models and stores. Don't use spaces or special characters in the name." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AreaSeries" Extends="CartesianSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ArrayReader" Extends="JsonReader">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AssociationCollection" Extends="BaseItemCollection&lt;AbstractAssociation&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AsyncTreeNodeListeners" Extends="TreeNodeListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is loaded, return false to cancel]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is loaded, return false to cancel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is loaded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is loaded" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AutoLoadParamsJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Axis" Abstract="true" Extends="AbstractAxis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AdjustEnd" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to adjust the label at the end of the axis. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to adjust the label at the end of the axis. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DashSize" Type="int" DefaultValue="3">
          <Summary><![CDATA[The size of the dash marker. Default's 3.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="3" />
            <Attribute Type="Description" RawValue="The size of the dash marker. Default's 3." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Grid" Type="bool" DefaultValue="false">
          <Summary><![CDATA[The grid configuration enables you to set a background grid for an axis. If set to true on a vertical axis, vertical lines will be drawn. If set to true on a horizontal axis, horizontal lines will be drawn. If both are set, a proper grid with horizontal and vertical lines will be drawn.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="The grid configuration enables you to set a background grid for an axis. If set to true on a vertical axis, vertical lines will be drawn. If set to true on a horizontal axis, horizontal lines will be drawn. If both are set, a proper grid with horizontal and vertical lines will be drawn." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GridConfig" Type="AxisGrid" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;grid&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Length" Type="int" DefaultValue="0">
          <Summary><![CDATA[Offset axis position. Default's 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Offset axis position. Default's 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MajorTickSteps" Type="int" DefaultValue="int.MinValue">
          <Summary><![CDATA[If minimum and maximum are specified it forces the number of major ticks to the specified value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" RawValue="If minimum and maximum are specified it forces the number of major ticks to the specified value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinorTickSteps" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of small ticks between two major ticks. Default is zero.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The number of small ticks between two major ticks. Default is zero." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Position" Type="Position" DefaultValue="Position.Bottom">
          <Summary><![CDATA[Where to set the axis. Available options are left, bottom, right, top. Default's bottom.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Position.Bottom" />
            <Attribute Type="Description" RawValue="Where to set the axis. Available options are left, bottom, right, top. Default's bottom." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PositionProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;position&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title for the Axis]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The title for the Axis" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="0">
          <Summary><![CDATA[Offset axis width. Default's 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Offset axis width. Default's 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fields" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The fields of model to bind to this axis.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The fields of model to bind to this axis." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AxisCollection" Extends="BaseItemCollection&lt;AbstractAxis&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AxisGrid" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Odd" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Even" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AxisLabel" Extends="SpriteAttributes">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Renderer" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BarSeries" Extends="CartesianSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Column" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to set the visualization as column chart or horizontal bar chart.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to set the visualization as column chart or horizontal bar chart." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stacked" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupGutter" Type="double" DefaultValue="38.2d">
          <Summary><![CDATA[The gutter space between groups of bars, as a percentage of the bar width. Defaults to: 38.2]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="38.2d" />
            <Attribute Type="Description" RawValue="The gutter space between groups of bars, as a percentage of the bar width. Defaults to: 38.2" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Gutter" Type="double" DefaultValue="38.2d">
          <Summary><![CDATA[The gutter space between single bars, as a percentage of the bar width. Defaults to: 38.2]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="38.2d" />
            <Attribute Type="Description" RawValue="The gutter space between single bars, as a percentage of the bar width. Defaults to: 38.2" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XPadding" Type="int" DefaultValue="0">
          <Summary><![CDATA[Padding between the left/right axes and the bars. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Padding between the left/right axes and the bars. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YPadding" Type="int" DefaultValue="10">
          <Summary><![CDATA[Padding between the top/bottom axes and the bars. Defaults to: 10]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="Padding between the top/bottom axes and the bars. Defaults to: 10" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseDirectEvent" Extends="BaseListener">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CleanRequest" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Only extra params will be added to request. Useful if request has web-service Url]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Only extra params will be added to request. Useful if request has web-service Url" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCaching" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to add a unique cache-buster param to GET requests.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a unique cache-buster param to GET requests." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCachingParam" Type="string" DefaultValue="&quot;_dc&quot;">
          <Summary><![CDATA[Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;_dc&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsUpload" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewStateMode" Type="ViewStateMode" DefaultValue="ViewStateMode.Inherit">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ViewStateMode.Inherit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="DirectEventType" DefaultValue="DirectEventType.Submit">
          <Summary><![CDATA[The type of DirectEvent to perform. The 'Submit' type will submit the &lt;form> and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="DirectEventType.Submit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of DirectEvent to perform. The 'Submit' type will submit the &amp;lt;form&gt; and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="Description" RawValue="The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The timeout in milliseconds to be used for requests. (defaults to 30000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="Description" RawValue="The timeout in milliseconds to be used for requests. (defaults to 30000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormProxyArg" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;formId&quot;" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParams" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMask" Type="EventMask">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWarningOnFailure" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Show a Window with error message is DirectEvent request fails. This message Window will only show if a Failure Handler does not exist.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Show a Window with error message is DirectEvent request fails. This message Window will only show if a Failure Handler does not exist." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseListener" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope in which to execute the handler function. The handler function's 'this' context.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to execute the handler function. The handler function's 'this' context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A simple selector to filter the target or look for a descendant of the target]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A simple selector to filter the target or look for a descendant of the target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event. That is stop propagation, and prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event. That is stop propagation, and prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopPropagation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent event propagation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent event propagation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Normalized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to pass a browser event to the handler function instead of an Ext.EventObject.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to pass a browser event to the handler function instead of an Ext.EventObject." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of milliseconds to delay the invocation of the handler after the event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to delay the invocation of the handler after the event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a handler to handle just the next firing of the event, and then remove itself.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a handler to handle just the next firing of the event, and then remove itself." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buffer" Type="int" DefaultValue="0">
          <Summary><![CDATA[Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseLoadConfig" Extends="BaseItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CallbackProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;callback&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DiscardUrl" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoCache" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;nocache&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScriptsProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;scripts&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseParameter" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Params&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Params&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="ParameterMode" DefaultValue="ParameterMode.Auto">
          <Summary><![CDATA[Wrap in quotes or not]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="ParameterMode.Auto" />
            <Attribute Type="Description" RawValue="Wrap in quotes or not" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Encode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Encode value, it might be useful when value is js object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Encode value, it might be useful when value is js object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseScriptBuilder" Abstract="true">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BaseTriggerField" Abstract="true" Extends="TriggerFieldBase" Inherits="IPostBackEventHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PostBackEvent" Modifier="Override" Type="string" DefaultValue="&quot;triggerclick&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;triggerclick&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BeforeDirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordDeletedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordInsertedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordUpdatedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeStoreChangedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BelongsToAssociation" Extends="AbstractAssociation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForeignKey" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the foreign key on the owner model that links it to the associated model. Defaults to the lowercased name of the associated model plus \"_id\", e.g. an association with a model called Product would set up a product_id foreign key.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the foreign key on the owner model that links it to the associated model. Defaults to the lowercased name of the associated model plus \&quot;_id\&quot;, e.g. an association with a model called Product would set up a product_id foreign key." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetterName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the getter function that will be added to the local model's prototype. Defaults to 'get' + the name of the foreign model, e.g. getCategory]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the getter function that will be added to the local model's prototype. Defaults to 'get' + the name of the foreign model, e.g. getCategory" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SetterName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the setter function that will be added to the local model's prototype. Defaults to 'set' + the name of the foreign model, e.g. setCategory]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the setter function that will be added to the local model's prototype. Defaults to 'set' + the name of the foreign model, e.g. setCategory" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BooleanColumn" Extends="CellCommandColumn">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FalseText" Type="string" DefaultValue="&quot;false&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;false&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrueText" Type="string" DefaultValue="&quot;true&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is not falsey (defaults to 'true').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;true&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is not falsey (defaults to 'true')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UndefinedText" Type="string" DefaultValue="&quot;&amp;#160;&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is undefined (defaults to ' ').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;#160;&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is undefined (defaults to ' ')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BooleanFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YesText" Type="string" DefaultValue="&quot;Yes&quot;">
          <Summary><![CDATA[The text displayed for the 'Yes' checkbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Yes&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Yes' checkbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoText" Type="string" DefaultValue="&quot;No&quot;">
          <Summary><![CDATA[The text displayed for the 'No' checkbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;No&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'No' checkbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="bool" DefaultValue="false">
          <Summary><![CDATA[The default value of this filter (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default value of this filter (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Predefined filter value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Predefined filter value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BorderLayoutConfig" Extends="LayoutConfig">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;padding&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoundList" Extends="BoundListBase" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DataViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DataViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoundListBase" Abstract="true" Extends="AbstractDataView">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="0">
          <Summary><![CDATA[If greater than 0, a Ext.toolbar.Paging is displayed at the bottom of the list and store queries will execute with page start and limit parameters. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If greater than 0, a Ext.toolbar.Paging is displayed at the bottom of the list and store queries will execute with page start and limit parameters. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemTpl" Modifier="Override" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The inner portion of the item template to be rendered. Follows an XTemplate structure and will be placed inside of a tpl.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The inner portion of the item template to be rendered. Follows an XTemplate structure and will be placed inside of a tpl." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemTplProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getInnerTpl&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Box" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="X" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrWidth" Type="string" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;width&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrHeight" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;height&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxLayoutConfig" Abstract="true" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultMarginsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultMargins&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;padding&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pack" Type="BoxPack" DefaultValue="BoxPack.Start">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="BoxPack.Start" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StretchMaxPartner" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxReorderer" Extends="Plugin">
      <Summary><![CDATA[Plugin which can be attached to any container instance with VBox/HBox layout. Provides ability to reorder container items with drag and drop.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(BoxReorderer), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:BoxReorderer runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Plugin which can be attached to any container instance with VBox/HBox layout. Provides ability to reorder container items with drag and drop." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="int" DefaultValue="100">
          <Summary><![CDATA[The duration of the animation in milliseconds]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BoxReorderer&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="The duration of the animation in milliseconds" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemSelector" Type="string" DefaultValue="&quot;.x-box-item&quot;">
          <Summary><![CDATA[A selector which identifies the encapsulating elements of child Components which participate in reordering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BoxReorderer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;.x-box-item&quot;" />
            <Attribute Type="Description" RawValue="A selector which identifies the encapsulating elements of child Components which participate in reordering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="BoxReordererListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BoxReordererDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxReordererDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StartDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when dragging of a child Component begins.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;StartDrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when dragging of a child Component begins." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires during dragging of a child Component.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;Drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires during dragging of a child Component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeIndex" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when dragging of a child Component causes its drop index to change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ChangeIndex&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when dragging of a child Component causes its drop index to change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child Component is dropped at a new index position.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;Drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child Component is dropped at a new index position." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxReordererListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StartDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when dragging of a child Component begins.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;StartDrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when dragging of a child Component begins." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Summary><![CDATA[Fires during dragging of a child Component.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;Drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires during dragging of a child Component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeIndex" Type="ComponentListener">
          <Summary><![CDATA[Fires when dragging of a child Component causes its drop index to change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ChangeIndex&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when dragging of a child Component causes its drop index to change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child Component is dropped at a new index position.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;container&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dragCmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;startIdx&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;idx&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;Drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child Component is dropped at a new index position." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxSplitter" Extends="AbstractComponent">
      <Summary><![CDATA[This class functions between siblings of a VBox or HBox layout to resize both immediate siblings.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:BoxSplitter runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(BoxSplitter), &quot;Build.ToolboxIcons.Resizable.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class functions between siblings of a VBox or HBox layout to resize both immediate siblings." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CollapseOnDblClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable dblclick to toggle expand and collapse on the collapseTarget Panel. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable dblclick to toggle expand and collapse on the collapseTarget Panel. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseTarget" Type="CollapseTarget" DefaultValue="CollapseTarget.Default">
          <Summary><![CDATA[A string describing the relative position of the immediate sibling Panel to collapse.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="CollapseTarget.Default" />
            <Attribute Type="Description" RawValue="A string describing the relative position of the immediate sibling Panel to collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseTargetPanel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string describing the relative position of the immediate sibling Panel to collapse.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A string describing the relative position of the immediate sibling Panel to collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseTargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;collapseTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapsedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A class to add to the splitter when it is collapsed. See collapsible.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A class to add to the splitter when it is collapsed. See collapsible." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show a mini-collapse tool in the Splitter to toggle expand and collapse on the collapseTarget Panel. Defaults to the collapsible setting of the Panel. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show a mini-collapse tool in the Splitter to toggle expand and collapse on the collapseTarget Panel. Defaults to the collapsible setting of the Panel. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultSplitMax" Type="int" DefaultValue="1000">
          <Summary><![CDATA[Provides a default maximum width or height for the two components that the splitter is between. Defaults to: 1000]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="Description" RawValue="Provides a default maximum width or height for the two components that the splitter is between. Defaults to: 1000" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultSplitMin" Type="int" DefaultValue="40">
          <Summary><![CDATA[Provides a default minimum width or height for the two components that the splitter is between. Defaults to: 40]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="40" />
            <Attribute Type="Description" RawValue="Provides a default minimum width or height for the two components that the splitter is between. Defaults to: 40" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PerformCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to prevent this Splitter's mini-collapse tool from managing the collapse state of the collapseTarget.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxSplitter&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to prevent this Splitter's mini-collapse tool from managing the collapse state of the collapseTarget." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Button" Extends="ButtonBase">
      <Summary><![CDATA[Simple Button class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Button runat=\&quot;server\&quot; Text=\&quot;Submit\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Button), &quot;Build.ToolboxIcons.Button.bmp&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;DirectClick&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="Description" RawValue="Simple Button class" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ButtonDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonBase" Abstract="true" Extends="ComponentBase" Inherits="IIcon,IAutoPostBack,IPostBackEventHandler,IXPostBackDataHandler,IButtonControl,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StandOut" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable stand out by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable stand out by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="UrlProperty" RawValue="&quot;*.aspx&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.UrlEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnClientClick" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript to execute when the Button is clicked. Or, please use the &lt;Listeners> for more flexibility.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The JavaScript to execute when the Button is clicked. Or, please use the &amp;lt;Listeners&gt; for more flexibility." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedHiddenName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDepress" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to not allow a pressed Button to be depressed (defaults to true). Only valid when enableToggle is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to not allow a pressed Button to be depressed (defaults to true). Only valid when enableToggle is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArrowAlign" Type="ArrowAlign" DefaultValue="ArrowAlign.Right">
          <Summary><![CDATA[The side of the Button box to render the arrow if the button has an associated menu. Defaults to 'Right'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ArrowAlign.Right" />
            <Attribute Type="Description" RawValue="The side of the Button box to render the arrow if the button has an associated menu. Defaults to 'Right'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArrowCls" Type="string" DefaultValue="&quot;arrow&quot;">
          <Summary><![CDATA[The className used for the inner arrow element if the button has a menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;arrow&quot;" />
            <Attribute Type="Description" RawValue="The className used for the inner arrow element if the button has a menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParams" Type="ParameterCollection">
          <Summary><![CDATA[An object literal of parameters to pass to the url when the href property is specified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object literal of parameters to pass to the url when the href property is specified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;baseParams&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Summary><![CDATA[The DOM event that will fire the handler of the button. This can be any valid event name (dblclick, contextmenu). Defaults to: \"click\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" RawValue="The DOM event that will fire the handler of the button. This can be any valid event name (dblclick, contextmenu). Defaults to: \&quot;click\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableToggle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable pressed/not pressed toggling (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable pressed/not pressed toggling (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusCls" Type="string" DefaultValue="&quot;focus&quot;">
          <Summary><![CDATA[The CSS class to add to a button when it is in the focussed state. Defaults to: \"focus\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;focus&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to add to a button when it is in the focussed state. Defaults to: \&quot;focus\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to apply a flat style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to apply a flat style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandleMouseEvents" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable visual cues on mouseover, mouseout and mousedown (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable visual cues on mouseover, mouseout and mousedown (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the button is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHandler&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the button is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to open when the button is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.Simple" />
            <Attribute Type="Description" RawValue="The URL to open when the button is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HrefTarget" Type="string" DefaultValue="&quot;_blank&quot;">
          <Summary><![CDATA[The target attribute to use for the underlying anchor. Only used if the href property is specified. Defaults to: \"_blank\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="TypeConverter" RawValue="typeof(TargetConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;_blank&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.Simple" />
            <Attribute Type="Description" RawValue="The target attribute to use for the underlying anchor. Only used if the href property is specified. Defaults to: \&quot;_blank\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The path to an image to display in the button (the image will be set as the background-image CSS property of the button by default, so if you want a mixed icon/text button, set cls:'x-btn-text-icon')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The path to an image to display in the button (the image will be set as the background-image CSS property of the button by default, so if you want a mixed icon/text button, set cls:'x-btn-text-icon')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconAlign" Type="IconAlign" DefaultValue="IconAlign.Left">
          <Summary><![CDATA[The side of the Button box to render the icon. Defaults to 'Left'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="IconAlign.Left" />
            <Attribute Type="Description" RawValue="The side of the Button box to render the icon. Defaults to 'Left'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The path to an image to display in the button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconUrl&quot;" />
            <Attribute Type="Description" RawValue="The path to an image to display in the button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuArrow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the Menu arrow drop down arrow (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ToggleMenuArrow&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the Menu arrow drop down arrow (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="MenuCollection">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuActiveCls" Type="string" DefaultValue="&quot;menu-active&quot;">
          <Summary><![CDATA[The CSS class to add to a button when it's menu is active. Defaults to: \"menu-active\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;menu-active&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to add to a button when it's menu is active. Defaults to: \&quot;menu-active\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuAlign" Type="string" DefaultValue="&quot;tl-bl?&quot;">
          <Summary><![CDATA[The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-bl?&quot;" />
            <Attribute Type="Description" RawValue="The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverflowText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[If used in a Toolbar, the text to be used if this item is shown in the overflow menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="If used in a Toolbar, the text to be used if this item is shown in the overflow menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Summary><![CDATA[An object literal of parameters to pass to the url when the href property is specified. Any params override baseParams. New params can be set using the setParams method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetParams&quot;" />
            <Attribute Type="Description" RawValue="An object literal of parameters to pass to the url when the href property is specified. Any params override baseParams. New params can be set using the setParams method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;params&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pressed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start pressed (only if enableToggle = true). Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to start pressed (only if enableToggle = true). Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedCls" Type="string" DefaultValue="&quot;pressed&quot;">
          <Summary><![CDATA[The CSS class to add to a button when it is in the pressed state. Defaults to: \"pressed\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;pressed&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to add to a button when it is in the pressed state. Defaults to: \&quot;pressed\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to prevent the default action when the clickEvent is processed. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default action when the clickEvent is processed. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Repeat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to repeat fire the click event while the mouse is down. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to repeat fire the click event while the mouse is down. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[The scope (this reference) in which the handler and toggleHandler is executed. Defaults to this Button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler and toggleHandler is executed. Defaults to this Button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scale" Type="ButtonScale" DefaultValue="ButtonScale.Small">
          <Summary><![CDATA[The size of the Button. Defaults to 'Small'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ButtonScale.Small" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetScale&quot;" />
            <Attribute Type="Description" RawValue="The size of the Button. Defaults to 'Small'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabIndex" Modifier="Override" Type="short" DefaultValue="(short)0">
          <Summary><![CDATA[Set a DOM tabIndex for this button (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="(short)0" />
            <Attribute Type="Description" RawValue="Set a DOM tabIndex for this button (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The button text to be used as innerHTML (html tags are accepted).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.WithSet" />
            <Attribute Type="Description" RawValue="The button text to be used as innerHTML (html tags are accepted)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextAlign" Type="ButtonTextAlign" DefaultValue="ButtonTextAlign.Center">
          <Summary><![CDATA[The text alignment for this button (center, left, right). Defaults to: \"center\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ButtonTextAlign.Center" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetTextAlign&quot;" />
            <Attribute Type="Description" RawValue="The text alignment for this button (center, left, right). Defaults to: \&quot;center\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Function called when a Button with enableToggle set to true is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Function called when a Button with enableToggle set to true is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The group this toggle button is a member of (only 1 per group can be pressed, only applies if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The group this toggle button is a member of (only 1 per group can be pressed, only applies if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted). Or, see ToolTip config.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTooltip&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ReadOnly" RawValue="false" />
            <Attribute Type="Browsable" RawValue="true" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Always" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted). Or, see ToolTip config." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTipCfg" Type="QTipCfg">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTipType" Type="ToolTipType" DefaultValue="ToolTipType.Qtip">
          <Summary><![CDATA[The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltipType&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ToolTipType.Qtip" />
            <Attribute Type="Description" RawValue="The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="ButtonType" DefaultValue="ButtonType.Button">
          <Summary><![CDATA[The type of input to create: submit, reset or button. Defaults to: \"button\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ButtonType.Button" />
            <Attribute Type="Description" RawValue="The type of input to create: submit, reset or button. Defaults to: \&quot;button\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="HideMenu">
          <Summary><![CDATA[Hide this button's menu (if it has one)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hide this button's menu (if it has one)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTooltip" ParamsRaw="string tooltip">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTooltip" ParamsRaw="QTipCfg config">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowMenu">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Toggle">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Toggle" ParamsRaw="bool state">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Toggle" ParamsRaw="bool state, bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMenuArrow">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMenuArrow" ParamsRaw="bool state">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ButtonCollection" Extends="Collection&lt;Button&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ButtonCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ButtonConverter" Extends="ControlConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ButtonDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this button is clicked, before the configured handler is invoked. Execution of the handler may be vetoed by returning false to this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button is clicked, before the configured handler is invoked. Execution of the handler may be vetoed by returning false to this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuHide" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when it is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menuhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuShow" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when it is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menushow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse leaves the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse leaves the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse enters the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse enters the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse exits the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse hovers over the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse hovers over the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Toggle" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the 'pressed' state of this button changes (only if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pressed&quot;, typeof(bool), &quot;Pressed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;toggle&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the 'pressed' state of this button changes (only if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonGroup" Extends="Panel">
      <Summary><![CDATA[Container for a group of buttons.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ButtonGroup runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:ButtonGroup&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Panel), &quot;Build.ToolboxIcons.ButtonGroup.bmp&quot;" />
        <Attribute Type="Description" RawValue="Container for a group of buttons." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;button&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr. Defaults to 'button' in ButtonGroup]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr. Defaults to 'button' in ButtonGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Frame" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. ButtonGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The columns configuration property passed to the configured layout manager. See Ext.layout.TableLayout.columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. ButtonGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The columns configuration property passed to the configured layout manager. See Ext.layout.TableLayout.columns." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this button is clicked, before the configured handler is invoked. Execution of the handler may be vetoed by returning false to this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button is clicked, before the configured handler is invoked. Execution of the handler may be vetoed by returning false to this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuHide" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when it is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menuhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuShow" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when it is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menushow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOut" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse leaves the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse leaves the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOver" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse enters the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse enters the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse exits the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse hovers over the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse hovers over the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Toggle" Type="ComponentListener">
          <Summary><![CDATA[Fires when the 'pressed' state of this button changes (only if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pressed&quot;, typeof(bool), &quot;Pressed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;toggle&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the 'pressed' state of this button changes (only if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarCombo" Extends="ComboBox">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CalendarStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The calendar store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The calendar store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldLabel" Modifier="Override" Type="string" DefaultValue="&quot;Calendar&quot;">
          <Summary><![CDATA[The label text to display next to this Component (defaults to 'Calendar').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Calendar&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label text to display next to this Component (defaults to 'Calendar')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAction" Modifier="Override" Type="TriggerAction" DefaultValue="TriggerAction.All">
          <Summary><![CDATA[The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'All').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerAction.All" />
            <Attribute Type="Description" RawValue="The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'All')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryMode" Modifier="Override" Type="DataLoadMode" DefaultValue="DataLoadMode.Local">
          <Summary><![CDATA[Set to 'local' if the ComboBox loads local data (defaults to 'Local' which loads from the server).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="DataLoadMode.Local" />
            <Attribute Type="Description" RawValue="Set to 'local' if the ComboBox loads local data (defaults to 'Local' which loads from the server)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceSelection" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnFocus" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically select any existing field text when the field receives input focus (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically select any existing field text when the field receives input focus (defaults to true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarMappingsContractResolver" Extends="DefaultContractResolver">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CalendarModel">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CalendarModelCollection" Extends="List&lt;CalendarModel&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CalendarPanel" Extends="CalendarPanelBase">
      <Summary><![CDATA[This is the default container for calendar views. It supports day, week, multi-week and month views as well as a built-in event edit form. The only requirement for displaying a calendar is passing in a valid store config containing records of type EventRecord.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CalendarPanel runat=\&quot;server\&quot;&gt;&lt;/{0}:CalendarPanel&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This is the default container for calendar views. It supports day, week, multi-week and month views as well as a built-in event edit form. The only requirement for displaying a calendar is passing in a valid store config containing records of type EventRecord." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="CalendarPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CalendarPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelBase" Abstract="true" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DayText" Type="string" DefaultValue="&quot;Day&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Day' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Day&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Day' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthText" Type="string" DefaultValue="&quot;Month&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Month' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Month&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Month' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDayView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the day view (and toolbar button), false to hide them (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the day view (and toolbar button), false to hide them (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMonthView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the month view (and toolbar button), false to hide them (defaults to true). If the day and week views are both hidden, the month view will show by default even if this config is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the month view (and toolbar button), false to hide them (defaults to true). If the day and week views are both hidden, the month view will show by default even if this config is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowNavBar" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the calendar navigation toolbar, false to hide it (defaults to true). Note that if you hide the default navigation toolbar you'll have to provide an alternate means of navigating the calendar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the calendar navigation toolbar, false to hide it (defaults to true). Note that if you hide the default navigation toolbar you'll have to provide an alternate means of navigating the calendar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time next to the date in the calendar's current day box, false to not show it (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time next to the date in the calendar's current day box, false to not show it (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the value of todayText instead of today's date in the calendar's current day box, false to display the day number(defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the value of todayText instead of today's date in the calendar's current day box, false to display the day number(defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the week view (and toolbar button), false to hide them (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the week view (and toolbar button), false to hide them (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Today' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Today' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekText" Type="string" DefaultValue="&quot;Week&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Week' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Week&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Week' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalendarStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The calendar store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The calendar store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalendarStore" Type="CalendarStore" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The event store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The event store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventStore" Type="EventStore" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventStore&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayView" Type="DayView" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekView" Type="WeekView" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;weekViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthView" Type="MonthView" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;monthViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDetails" Type="EventDetails" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;editViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within a day/week view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(Boolean), &quot;True if the day clicked on represents an all-day box, else false.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a day/week view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is deleted by the user.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was deleted&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted by the user." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags the resize handle of an event to resize it]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was resized containing the updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags the resize handle of an event to resize it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a different calendar view is activated (but not when the event edit form is activated)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;view&quot;, typeof(object), &quot;The view being activated (any valid CalendarView subclass)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;info&quot;, typeof(Object), &quot;Extra information about the newly activated view (activeDate, viewStart, viewEnd).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a different calendar view is activated (but not when the event edit form is activated)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelListeners" Extends="PanelListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within a day/week view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(Boolean), &quot;True if the day clicked on represents an all-day box, else false.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a day/week view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is deleted by the user.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was deleted&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted by the user." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventResize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags the resize handle of an event to resize it]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was resized containing the updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags the resize handle of an event to resize it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after a different calendar view is activated (but not when the event edit form is activated)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;view&quot;, typeof(object), &quot;The view being activated (any valid CalendarView subclass)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;info&quot;, typeof(Object), &quot;Extra information about the newly activated view (activeDate, viewStart, viewEnd).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a different calendar view is activated (but not when the event edit form is activated)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarStore" Extends="Store">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MemoryProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Calendars" Type="CalendarModelCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CapsLockDetector" Extends="Plugin" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ValidationStatus), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CapsLockDetector runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PreventCapsLockChar" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockIndicatorIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The error icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. CapsLockDetector&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The error icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockIndicatorIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. CapsLockDetector&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockIndicatorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;capsLockIndicatorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockIndicatorText" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CapsLockDetector&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockIndicatorTip" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CapsLockDetector&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CapsLockDetectorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CapsLockDetectorDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CapsLockDetectorDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CapsLockOn" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CapsLockDetector), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;capslockon&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockOff" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CapsLockDetector), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;capslockoff&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CapsLockDetectorListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CapsLockOn" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CapsLockDetector), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;capslockon&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CapsLockOff" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CapsLockDetector), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;capslockoff&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CardLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render each contained item at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CardLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render each contained item at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CartesianSeries" Abstract="true" Extends="AbstractSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Axis" Type="Position" DefaultValue="Position.Left">
          <Summary><![CDATA[The position of the axis to bind the values to. Possible values are 'left', 'bottom', 'top' and 'right'. You must explicitly set this value to bind the values of the line series to the ones in the axis, otherwise a relative scale will be used. Defaults to: \"left\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="Position.Left" />
            <Attribute Type="Description" RawValue="The position of the axis to bind the values to. Possible values are 'left', 'bottom', 'top' and 'right'. You must explicitly set this value to bind the values of the line series to the ones in the axis, otherwise a relative scale will be used. Defaults to: \&quot;left\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Axes" Type="Position[]" DefaultValue="null">
          <Summary><![CDATA[The array of positions of the axes to bind the values to.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(PositionArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The array of positions of the axes to bind the values to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;axis&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CategoryAxis" Extends="Axis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalculateCategoryCount" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Indicates whether or not to calculate the number of categories (ticks and labels) when there is not enough room to display all labels on the axis. If set to true, the axis will determine the number of categories to plot. If not, all categories will be plotted. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Indicates whether or not to calculate the number of categories (ticks and labels) when there is not enough room to display all labels on the axis. If set to true, the axis will determine the number of categories to plot. If not, all categories will be plotted. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CategoryNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[A list of category names to display along this axis.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A list of category names to display along this axis." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellCommandColumn" Abstract="true" Extends="ColumnBase" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RightCommandAlign" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Commands" Type="ImageCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;commands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsCellCommand" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommand" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommands" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellCommandColumnDirectEvents" Extends="ColumnDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Command" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;command&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;recordIndex&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;cellIndex&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a command is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellCommandColumnListeners" Extends="ColumnListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Command" Type="ComponentListener">
          <Summary><![CDATA[Fires when a command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;command&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;recordIndex&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;cellIndex&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a command is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellEditing" Extends="GridEditing">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CellEditingListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CellEditingDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellEditingDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before cell editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before cell editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user started editing a cell but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user started editing a cell but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a cell is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellEditingListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires before cell editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before cell editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user started editing a cell but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user started editing a cell but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a cell is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellEditorOptions" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="InlineEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alignment" Type="string" DefaultValue="&quot;tl-tl&quot;">
          <Summary><![CDATA[The position to align to (see Ext.Element.alignTo for more details, defaults to \"tl-tl\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-tl&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The position to align to (see Ext.Element.alignTo for more details, defaults to \&quot;tl-tl\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSize" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSizeConfig" Type="EditorAutoSize" DefaultValue="null">
          <Summary><![CDATA[True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoSize&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnEsc" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to cancel the edit when the escape key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the escape key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CompleteOnEnter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete the edit when the enter key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete the edit when the enter key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to cancel the edit when the blur event is fired (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the blur event is fired (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreNoChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RevertInvalid" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.None">
          <Summary><![CDATA[\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"frame\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="\&quot;sides\&quot; for sides/bottom only, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;frame\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowKeys" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Handle the keydown/keypress events so they don't propagate (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown/keypress events so they don't propagate (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Offsets" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[The offsets to use when aligning. Defaults to [0, 0].]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The offsets to use when aligning. Defaults to [0, 0]." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellSelectionModel" Extends="AbstractSelectionModel" Inherits="IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableKeyNav" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turns on/off keyboard navigation within the grid. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Turns on/off keyboard navigation within the grid. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventWrap" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set this configuration to true to prevent wrapping around of selection as a user navigates to the first or last column. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set this configuration to true to prevent wrapping around of selection as a user navigates to the first or last column. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CellSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CellSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCell" Type="SelectedCell">
          <Summary><![CDATA[Selected cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Selected cell" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CellSelectionModelDirectEvents" Extends="AbstractSelectionModelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Deselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a cell is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;column&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a cell is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;column&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellSelectionModelListeners" Extends="AbstractSelectionModelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Deselect" Type="ComponentListener">
          <Summary><![CDATA[Fired after a cell is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel),&quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;column&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a cell is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;column&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChangeRecords&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Chart" Extends="AbstractDrawComponent" Inherits="IStore&lt;Store&gt;">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Axes" Type="AxisCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InsetPadding" Type="int" DefaultValue="10">
          <Summary><![CDATA[The amount of inset padding in pixels for the chart. Defaults to 10.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The amount of inset padding in pixels for the chart. Defaults to 10." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for the default animation (easing: 'ease' and duration: 500) or a standard animation config object to be used for default chart animations. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True for the default animation (easing: 'ease' and duration: 500) or a standard animation config object to be used for default chart animations. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimateConfig" Type="AnimConfig" DefaultValue="null">
          <Summary><![CDATA[Animation config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;animate&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Animation config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Legend" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for the default legend display or a legend config object. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True for the default legend display or a legend config object. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LegendConfig" Type="ChartLegend" DefaultValue="null">
          <Summary><![CDATA[Legend config object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;legend&quot;, JsonMode.ObjectAllowEmpty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Legend config object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Series" Type="SeriesCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Theme" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the theme to be used. A theme defines the colors and other visual displays of tick marks on axis, text, title text, line colors, marker colors and styles, etc.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The name of the theme to be used. A theme defines the colors and other visual displays of tick marks on axis, text, title text, line colors, marker colors and styles, etc." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandardTheme" Type="StandardChartTheme" DefaultValue="StandardChartTheme.Base">
          <Summary><![CDATA[The name of the standard theme to be used.  Possible theme values are 'Base', 'Green', 'Sky', 'Red', 'Purple', 'Blue', 'Yellow' and also six category themes 'Category1' to 'Category6'. Default value is 'Base'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;theme&quot;, JsonMode.ToString" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="DefaultValue" RawValue="StandardChartTheme.Base" />
            <Attribute Type="Description" RawValue="The name of the standard theme to be used.  Possible theme values are 'Base', 'Green', 'Sky', 'Red', 'Purple', 'Blue', 'Yellow' and also six category themes 'Category1' to 'Category6'. Default value is 'Base'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mask" Type="ChartMask" DefaultValue="ChartMask.None">
          <Summary><![CDATA[Defines a mask for a chart's series.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="DefaultValue" RawValue="ChartMask.None" />
            <Attribute Type="Description" RawValue="Defines a mask for a chart's series." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;mask&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The store that supplies data to this chart.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The store that supplies data to this chart." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection&lt;Store&gt;">
          <Summary><![CDATA[The store that supplies data to this chart.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Chart&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The store that supplies data to this chart." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ChartListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ChartDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChartDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a refresh to the chart data is called. If the beforerefresh handler returns false the refresh action will be cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a refresh to the chart data is called. If the beforerefresh handler returns false the refresh action will be cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the chart data has been refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the chart data has been refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChartLegend" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BoxFill" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Fill style for the legend box. Defaults to: \"#FFF\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Fill style for the legend box. Defaults to: \&quot;#FFF\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxStroke" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Style of the stroke for the legend box. Defaults to: \"#000\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Style of the stroke for the legend box. Defaults to: \&quot;#000\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxStrokeWidth" Type="int" DefaultValue="1">
          <Summary><![CDATA[Width of the stroke for the legend box. Defaults to: 1]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="Width of the stroke for the legend box. Defaults to: 1" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxZIndex" Type="int" DefaultValue="100">
          <Summary><![CDATA[Sets the z-index for the legend. Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="Sets the z-index for the legend. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemSpacing" Type="int" DefaultValue="10">
          <Summary><![CDATA[Amount of space between legend items. Defaults to: 10]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="Amount of space between legend items. Defaults to: 10" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelColor" Type="string" DefaultValue="&quot;#000&quot;">
          <Summary><![CDATA[Color to be used for the legend labels, eg '#000'. Defaults to: \"#000\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;#000&quot;" />
            <Attribute Type="Description" RawValue="Color to be used for the legend labels, eg '#000'. Defaults to: \&quot;#000\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelFont" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Font to be used for the legend labels, eg '12px Helvetica'. Defaults to: \"12px Helvetica, sans-serif\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Font to be used for the legend labels, eg '12px Helvetica'. Defaults to: \&quot;12px Helvetica, sans-serif\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int" DefaultValue="5">
          <Summary><![CDATA[Amount of padding between the legend box's border and its items. Defaults to: 5]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" RawValue="Amount of padding between the legend box's border and its items. Defaults to: 5" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Position" Type="LegendPosition" DefaultValue="LegendPosition.Bottom">
          <Summary><![CDATA[The position of the legend in relation to the chart. One of: \"top\", \"bottom\", \"left\", \"right\", or \"float\". If set to \"float\", then the legend box will be positioned at the point denoted by the x and y parameters. Defaults to: \"bottom\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="LegendPosition.Bottom" />
            <Attribute Type="Description" RawValue="The position of the legend in relation to the chart. One of: \&quot;top\&quot;, \&quot;bottom\&quot;, \&quot;left\&quot;, \&quot;right\&quot;, or \&quot;float\&quot;. If set to \&quot;float\&quot;, then the legend box will be positioned at the point denoted by the x and y parameters. Defaults to: \&quot;bottom\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RefreshOnItemToggle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true the chart will be refreshed after show/hide series]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true the chart will be refreshed after show/hide series" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If set to true the legend will be refreshed when the chart is. This is useful to update the legend items if series are added/removed/updated from the chart. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true the legend will be refreshed when the chart is. This is useful to update the legend items if series are added/removed/updated from the chart. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Visible" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not the legend should be displayed. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not the legend should be displayed. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int" DefaultValue="0">
          <Summary><![CDATA[X-position of the legend box. Used directly if position is set to \"float\", otherwise it will be calculated dynamically. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="X-position of the legend box. Used directly if position is set to \&quot;float\&quot;, otherwise it will be calculated dynamically. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int" DefaultValue="0">
          <Summary><![CDATA[Y-position of the legend box. Used directly if position is set to \"float\", otherwise it will be calculated dynamically. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Y-position of the legend box. Used directly if position is set to \&quot;float\&quot;, otherwise it will be calculated dynamically. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChartListeners" Extends="AbstractComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentListener">
          <Summary><![CDATA[Fires before a refresh to the chart data is called. If the beforerefresh handler returns false the refresh action will be cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a refresh to the chart data is called. If the beforerefresh handler returns false the refresh action will be cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentListener">
          <Summary><![CDATA[Fires after the chart data has been refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the chart data has been refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Chart), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChartTheme" Extends="Observable" Inherits="ICustomConfigSerialization,IVirtual">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ThemeName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Background" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseGradients" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseColor" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Colors" Type="string[]" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Axis" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisLabelTop" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisLabelRight" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisLabelBottom" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisLabelLeft" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisTitleTop" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisTitleRight" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisTitleBottom" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisTitleLeft" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Series" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SeriesLabel" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Marker" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisLabel" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AxisTitle" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SeriesThemes" Type="SpriteAttributesCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkerThemes" Type="SpriteAttributesCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChartTip" Extends="ToolTipBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Renderer" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainPosition" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true, then the tooltip will be automatically constrained to stay within the browser viewport. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, then the tooltip will be automatically constrained to stay within the browser viewport. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Checkbox" Extends="CheckboxBase" Inherits="IPostBackEventHandler,ICheckBoxControl">
      <Summary><![CDATA[Single checkbox field. Can be used as a direct replacement for traditional Checkbox controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Checkbox runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;CheckedChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Checked&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Checkbox), &quot;Build.ToolboxIcons.Checkbox.bmp&quot;" />
        <Attribute Type="Description" RawValue="Single checkbox field. Can be used as a direct replacement for traditional Checkbox controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="CheckboxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckboxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxBase" Abstract="true" Extends="Field">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterBoxLabelTextTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the box label text. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterBoxLabelTextTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the box label text. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterBoxLabelTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the box label element. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterBoxLabelTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the box label element. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeBoxLabelTextTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the box label text. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeBoxLabelTextTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the box label text. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeBoxLabelTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the box label text. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeBoxLabelTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the box label text. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional text label that will appear next to the checkbox. Whether it appears before or after the checkbox is determined by the boxLabelAlign config (defaults to after).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional text label that will appear next to the checkbox. Whether it appears before or after the checkbox is determined by the boxLabelAlign config (defaults to after)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelAlign" Type="BoxLabelAlign" DefaultValue="BoxLabelAlign.After">
          <Summary><![CDATA[The position relative to the checkbox where the boxLabel should appear. Recognized values are 'before' and 'after'. Defaults to 'after'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="BoxLabelAlign.After" />
            <Attribute Type="Description" RawValue="The position relative to the checkbox where the boxLabel should appear. Recognized values are 'before' and 'after'. Defaults to 'after'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabelStyle&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelAttrTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup inside the box label element (as attributes). If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;boxLabelAttrTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup inside the box label element (as attributes). If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;boxLabelClsExtra&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabelCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Checked" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the the checkbox should render already checked (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="True if the the checkbox should render already checked (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class added to the component's main element when it is in the checked state.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class added to the component's main element when it is in the checked state." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the checked value changes (can be used instead of handling the change event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the checked value changes (can be used instead of handling the change event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The value that should go into the generated input element's value attribute and should be used as the parameter value when submitting as part of a form. Defaults to \"on\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The value that should go into the generated input element's value attribute and should be used as the parameter value when submitting as part of a form. Defaults to \&quot;on\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[An object to use as the scope ('this' reference) of the handler function. Defaults to this Checkbox.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An object to use as the scope ('this' reference) of the handler function. Defaults to this Checkbox." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UncheckedValue" Type="string" DefaultValue="null">
          <Summary><![CDATA[If configured, this will be submitted as the checkbox's value during form submit if the checkbox is unchecked. By default this is undefined, which results in nothing being submitted for the checkbox field when the form is submitted (the default behavior of HTML checkboxes).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="If configured, this will be submitted as the checkbox's value during form submit if the checkbox is unchecked. By default this is undefined, which results in nothing being submitted for the checkbox field when the form is submitted (the default behavior of HTML checkboxes)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CheckboxDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CheckboxGroup" Extends="CheckboxGroupBase">
      <Summary><![CDATA[A grouping container for Ext.form.Checkbox controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CheckboxGroup runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CheckboxGroup), &quot;Build.ToolboxIcons.CheckboxGroup.bmp&quot;" />
        <Attribute Type="Description" RawValue="A grouping container for Ext.form.Checkbox controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;checkbox&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'checkbox').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;checkbox&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'checkbox')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckboxGroupListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckboxGroupDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroupBase" Abstract="true" Extends="FieldContainerBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to validate that at least one item in the group is checked (defaults to true). If no items are selected at validation time, BlankText will be used as the error text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to validate that at least one item in the group is checked (defaults to true). If no items are selected at validation time, BlankText will be used as the error text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the AllowBlank validation fails (defaults to 'You must select at least one item in this group')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the AllowBlank validation fails (defaults to 'You must select at least one item in this group')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsNumber" Type="int" DefaultValue="0">
          <Summary><![CDATA[Specifies a number of columns will be created and the contained controls will be automatically distributed based on the value of vertical.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Specifies a number of columns will be created and the contained controls will be automatically distributed based on the value of vertical." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsWidths" Type="double[]" DefaultValue="null">
          <Summary><![CDATA[You can also specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.Serialize" />
            <Attribute Type="TypeConverter" RawValue="typeof(DoubleArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="You can also specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireChangeOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Fire change event after rendering]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Fire change event after rendering" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to distribute contained controls across columns, completely filling each column top to bottom before starting on the next column. The number of controls in each column will be automatically calculated to keep columns as even as possible. The default value is false, so that controls will be added to columns one at a time, completely filling each row left to right before starting on the next row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to distribute contained controls across columns, completely filling each column top to bottom before starting on the next column. The number of controls in each column will be automatically calculated to keep columns as even as possible. The default value is false, so that controls will be added to columns one at a time, completely filling each row left to right before starting on the next row." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetValue" ParamsRaw="Dictionary&lt;string, object&gt; values">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CheckboxGroupDirectEvents" Extends="FieldContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a user-initiated change is detected in the value of the field.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a user-initiated change is detected in the value of the field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a change in the field's isDirty state is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's isDirty state is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a change in the field's validity is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isValid&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's validity is detected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroupLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFlex" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroupListeners" Extends="FieldContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires when a user-initiated change is detected in the value of the field.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a user-initiated change is detected in the value of the field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a change in the field's isDirty state is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's isDirty state is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a change in the field's validity is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isValid&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's validity is detected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CheckboxSelectionModel" Extends="RowSelectionModel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true if rows can only be selected by clicking on the checkbox column (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true if rows can only be selected by clicking on the checkbox column (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Modifier="Override" Type="SelectionMode" DefaultValue="SelectionMode.Multi">
          <Summary><![CDATA[Modes of selection. Valid values are SINGLE, SIMPLE, and MULTI. Defaults to 'MULTI']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SelectionMode.Multi" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Modes of selection. Valid values are SINGLE, SIMPLE, and MULTI. Defaults to 'MULTI'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InjectCheckbox" Type="string" DefaultValue="&quot;0&quot;">
          <Summary><![CDATA[Instructs the SelectionModel whether or not to inject the checkbox header automatically or not. (Note: By not placing the checkbox in manually, the grid view will need to be rendered 2x on initial render.) Supported values are a Number index, false and the strings 'first' and 'last'. Default is 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Instructs the SelectionModel whether or not to inject the checkbox header automatically or not. (Note: By not placing the checkbox in manually, the grid view will need to be rendered 2x on initial render.) Supported values are a Number index, false and the strings 'first' and 'last'. Default is 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSpan" Type="int" DefaultValue="1">
          <Summary><![CDATA[RowSpan attribute for the checkbox table cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowspan&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="RowSpan attribute for the checkbox table cell" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowHeaderCheckbox" Type="bool" DefaultValue="true">
          <Summary><![CDATA[RowSpan attribute for the checkbox table cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="RowSpan attribute for the checkbox table cell" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InjectCheckboxProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;injectCheckbox&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[(optional) A function used to generate HTML markup for a cell given the cell's data value. If not specified, the default renderer uses the raw data value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="(optional) A function used to generate HTML markup for a cell given the cell's data value. If not specified, the default renderer uses the raw data value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckColumn" Extends="ColumnBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CheckColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CheckColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopSelection" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CheckColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckColumnDirectEvents" Extends="ColumnDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the checked state of a row changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the checked state of a row changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckColumnListeners" Extends="ColumnListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the checked state of a row changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the checked state of a row changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckMenuItem" Extends="MenuItemBase" Inherits="IXPostBackDataHandler">
      <Summary><![CDATA[Adds a menu item that contains a checkbox by default, but can also be part of a radio group.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Adds a menu item that contains a checkbox by default, but can also be part of a radio group." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CheckChangeDisabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the checked item from being toggled. Any submenu will still be accessible. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetCheckChangeDisabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the checked item from being toggled. Any submenu will still be accessible. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Checked" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initialize this checkbox as checked (defaults to false). Note that if this checkbox is part of a radio group (group = true) only the last item in the group that is initialized with checked = true will be rendered as checked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetChecked&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to initialize this checkbox as checked (defaults to false). Note that if this checkbox is part of a radio group (group = true) only the last item in the group that is initialized with checked = true will be rendered as checked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class used by cls to show the checked state. Defaults to Ext.baseCSSPrefix + 'menu-item-checked'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class used by cls to show the checked state. Defaults to Ext.baseCSSPrefix + 'menu-item-checked'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Group" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[All check items with the same group name will automatically be grouped into a single-select radio button group (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="All check items with the same group name will automatically be grouped into a single-select radio button group (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class applied to this item's icon image to denote being a part of a radio group. Defaults to Ext.baseCSSClass + 'menu-group-icon'. Any specified iconCls overrides this.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class applied to this item's icon image to denote being a part of a radio group. Defaults to Ext.baseCSSClass + 'menu-group-icon'. Any specified iconCls overrides this." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to not to hide the owning menu when this item is clicked. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to not to hide the owning menu when this item is clicked. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UncheckedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class used by cls to show the unchecked state. Defaults to Ext.baseCSSPrefix + 'menu-item-unchecked'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class used by cls to show the unchecked state. Defaults to Ext.baseCSSPrefix + 'menu-item-unchecked'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that handles the checkchange event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function that handles the checkchange event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckMenuItemListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckMenuItemDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetChecked" ParamsRaw="bool value, bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetChecked" ParamsRaw="bool value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DisableCheckChange">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="EnableCheckChange">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CheckMenuItemDirectEvents" Extends="MenuItemDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a change event. Return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a change event. Return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a change event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a change event." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckMenuItemListeners" Extends="MenuItemListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a change event. Return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a change event. Return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after a change event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a change event." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChildElement" Extends="BaseItem">
      <Summary><![CDATA[The child element of the Component. It is used as an item of the AbstractComponenn's ChildEls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="The child element of the Component. It is used as an item of the AbstractComponenn's ChildEls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The property name on the Component for the child element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;name&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The property name on the Component for the child element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id to combine with the Component's id that is the id of the child element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemId&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id to combine with the Component's id that is the id of the child element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the child element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the child element." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ChildElementCollection" Extends="BaseItemCollection&lt;ChildElement&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Chunking" Extends="GridFeature">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChunkSize" Type="int" DefaultValue="20">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowHeight" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeater" Extends="Observable">
      <Summary><![CDATA[A wrapper class which can be applied to any element. Fires a \"click\" event while the mouse is pressed. The interval between firings may be specified in the config but defaults to 20 milliseconds. Optionally, a CSS class may be applied to the element during the time it is pressed.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ClickRepeater), &quot;Build.ToolboxIcons.ClickRepeater.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ClickRepeater runat=\&quot;server\&quot;&gt;&lt;/{0}:ClickRepeater&gt;&quot;" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A wrapper class which can be applied to any element. Fires a \&quot;click\&quot; event while the mouse is pressed. The interval between firings may be specified in the config but defaults to 20 milliseconds. Optionally, a CSS class may be applied to the element during the time it is pressed." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Accelerate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if autorepeating should start slowly and accelerate. Interval and Delay are ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if autorepeating should start slowly and accelerate. Interval and Delay are ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="250">
          <Summary><![CDATA[The initial delay before the repeating event begins firing. Similar to an autorepeat key delay.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="The initial delay before the repeating event begins firing. Similar to an autorepeat key delay." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to act as a button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to act as a button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="20">
          <Summary><![CDATA[The interval between firings of the \"click\" event. Default 20 ms.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The interval between firings of the \&quot;click\&quot; event. Default 20 ms." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class name to be applied to the element while pressed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class name to be applied to the element while pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default click event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default click event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the default click event]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the default click event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the traget is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the traget is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreLeftButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the left button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the left button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreRightButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the right button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the right button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreMiddleButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the middle button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the middle button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoredButtons" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ClickRepeaterListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ClickRepeaterDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeaterDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeftClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;leftclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MiddleClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;middleclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rightclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse button is depressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse button is depressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse key is released.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse key is released." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeaterListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeftClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;leftclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MiddleClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;middleclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rightclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse button is depressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse button is depressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse key is released.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse key is released." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenu" Extends="MenuBase">
      <Summary><![CDATA[A menu containing a Ext.picker.Color Component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A menu containing a Ext.picker.Color Component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Picker" Type="ColorPicker">
          <Summary><![CDATA[The ColorPalette object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;pickerConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The ColorPalette object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ColorMenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColorMenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenuDirectEvents" Extends="MenuDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColorPicker), &quot;palette&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;, typeof(object), &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenuListeners" Extends="MenuListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColorPicker), &quot;palette&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;, typeof(object), &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorPicker" Extends="ComponentBase" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,INoneContentable">
      <Summary><![CDATA[Simple color palette class for choosing colors.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ColorPicker runat=\&quot;server\&quot;&gt;&lt;/{0}:ColorPicker&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ColorPicker), &quot;Build.ToolboxIcons.ColorPalette.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" RawValue="Simple color palette class for choosing colors." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowReselect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true then reselecting a color that is already selected fires the select event. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true then reselecting a color that is already selected fires the select event. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Summary><![CDATA[The DOM event that will cause a color to be selected. This can be any valid event name (dblclick, contextmenu). Defaults to: \"click\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" RawValue="The DOM event that will cause a color to be selected. This can be any valid event name (dblclick, contextmenu). Defaults to: \&quot;click\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the select event of this picker. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. ColorPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function that will handle the select event of this picker. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[The scope (this reference) in which the handler function will be called. Defaults to this Color picker instance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. ColorPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler function will be called. Defaults to this Color picker instance." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to apply to the selected element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ColorPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to the selected element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Colors" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of 6-digit color hex code strings (without the # symbol).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of 6-digit color hex code strings (without the # symbol)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[An existing XTemplate instance to be used in place of the default template for rendering the component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;renderTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An existing XTemplate instance to be used in place of the default template for rendering the component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The initial color to highlight (should be a valid 6-digit color hex code without the # symbol). Note that the hex codes are case-sensitive.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;Select&quot;" />
            <Attribute Type="Description" RawValue="The initial color to highlight (should be a valid 6-digit color hex code without the # symbol). Note that the hex codes are case-sensitive." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;select&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;select&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ColorPickerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColorPickerDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Select" ParamsRaw="string value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="string value, bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ColorPickerDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a color is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a color is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorPickerListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a color is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a color is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Column" Extends="CellCommandColumn">
      <Summary><![CDATA[An individual column's config object defines the header string, the Record field the column draws its data from, an optional rendering function to provide customized data formatting, and the ability to apply a CSS class to all cells in a column through its id config option.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="An individual column's config object defines the header string, the Record field the column draws its data from, an optional rendering function to provide customized data formatting, and the ability to apply a CSS class to all cells in a column through its id config option." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="CellCommandColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CellCommandColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnBase" Abstract="true" Extends="ComponentBase" Inherits="INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HeaderItems" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerItems&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTitleEl" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Locked" Type="bool?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[Sets the alignment of the header and rendered columns. Defaults to 'left'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="Description" RawValue="Sets the alignment of the header and rendered columns. Defaults to 'left'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="ColumnCollection">
          <Summary><![CDATA[An optional array of sub-column definitions. This column becomes a group, and houses the columns defined in the columns config.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional array of sub-column definitions. This column becomes a group, and houses the columns defined in the columns config." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="null">
          <Summary><![CDATA[Required. The name of the field in the grid's Ext.data.Store's Ext.data.Model definition from which to draw the column's value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Required. The name of the field in the grid's Ext.data.Store's Ext.data.Model definition from which to draw the column's value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorRenderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[A renderer to be used in conjunction with RowEditing. This renderer is used to display a custom value for non-editable fields.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A renderer to be used in conjunction with RowEditing. This renderer is used to display a custom value for non-editable fields." />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetEditorRenderer&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editor" Type="EditorCollection">
          <Summary><![CDATA[An optional xtype or config object for a Field to use for editing. Only applicable if the grid is using an Editing plugin.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional xtype or config object for a Field to use for editing. Only applicable if the grid is using an Editing plugin." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editor&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editors&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorStrategy" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorOptions" Type="CellEditorOptions">
          <Summary><![CDATA[Editor options]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Editor options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyCellText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to diplay in empty cells (cells with a value of undefined, null, or ''). Defaults to &#160; aka &nbsp;.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to diplay in empty cells (cells with a value of undefined, null, or ''). Defaults to &amp;#160; aka &amp;nbsp;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groupable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If the grid uses a Ext.grid.feature.Grouping, this option may be used to disable the header menu item to group by the column selected. By default, the header menu group option is enabled. Set to false to disable (but still show) the group option in the header menu for the column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If the grid uses a Ext.grid.feature.Grouping, this option may be used to disable the header menu item to group by the column selected. By default, the header menu group option is enabled. Set to false to disable (but still show) the group option in the header menu for the column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hideable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Optional. Specify as false to prevent the user from hiding this column (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional. Specify as false to prevent the user from hiding this column (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuDisabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disabled the column header menu containing sort/hide options. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disabled the column header menu containing sort/hide options. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to render in the column visibility selection menu for this column. If not specified, will default to the text value. Defaults to: null]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to render in the column visibility selection menu for this column. If not specified, will default to the text value. Defaults to: null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[A renderer is an 'interceptor' method which can be used transform data (value, appearance, etc.) before it is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A renderer is an 'interceptor' method which can be used transform data (value, appearance, etc.) before it is rendered." />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetRenderer&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope (this reference) in which to execute the renderer. Defaults to the Column configuration object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which to execute the renderer. Defaults to the Column configuration object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to prevent the column from being resizable. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to prevent the column from being resizable. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sealed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to constrain column dragging so that a column cannot be dragged into or out of this column. Note that this config is only valid for column headers which contain child column headers.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to constrain column dragging so that a column cannot be dragged into or out of this column. Note that this config is only valid for column headers which contain child column headers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sortable" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[False to disable sorting of this column. Whether local/remote sorting is used is specified in Ext.data.Store.remoteSort. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="False to disable sorting of this column. Whether local/remote sorting is used is specified in Ext.data.Store.remoteSort. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TdCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional. A CSS class names to apply to the table cells for this column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Optional. A CSS class names to apply to the table cells for this column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopSelectionSelectors" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[TThe list of selectors to stop the selection]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="TThe list of selectors to stop the selection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The header text to be used as innerHTML (html tags are accepted) to display in the Grid. Note: to have a clickable header with no text displayed you can use the default of &#160; aka &nbsp;. Defaults to: \"&#160;\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The header text to be used as innerHTML (html tags are accepted) to display in the Grid. Note: to have a clickable header with no text displayed you can use the default of &amp;#160; aka &amp;nbsp;. Defaults to: \&quot;&amp;#160;\&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.WithSet" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnCollection" Extends="ItemsCollection&lt;ColumnBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ColumnDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnMoved" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a column is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldIndex&quot;, typeof(int), &quot;Old index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newIndex&quot;, typeof(int), &quot;New index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmoved&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigChanged" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the configuration is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;configchanged&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the configuration is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the text of a header changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newText&quot;, typeof(string), &quot;The new header text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text of a header changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a column is hidden or 'unhidden'.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;hidden&quot;, typeof(bool), &quot;true if hidden, false otherwise&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hiddenchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is hidden or 'unhidden'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. ]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newWidth&quot;, typeof(int), &quot;The new width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;widthchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. " />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnMoved" Type="ComponentListener">
          <Summary><![CDATA[Fires when a column is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigChanged" Type="ComponentListener">
          <Summary><![CDATA[Fires when the configuration is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;configchanged&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the configuration is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the text of a header changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newText&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text of a header changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a column is hidden or 'unhidden'.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;hidden&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hiddenchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is hidden or 'unhidden'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. ]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newWidth&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;widthchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. " />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnSeries" Extends="BarSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XPadding" Modifier="Override" Type="int" DefaultValue="10">
          <Summary><![CDATA[Padding between the left/right axes and the bars. Defaults to: 10]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="Padding between the left/right axes and the bars. Defaults to: 10" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YPadding" Modifier="Override" Type="int" DefaultValue="0">
          <Summary><![CDATA[Padding between the top/bottom axes and the bars. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Padding between the top/bottom axes and the bars. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBox" Extends="ComboBoxBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A combobox control with support for autocomplete, remote-loading, paging and many other features.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ComboBox runat=\&quot;server\&quot;&gt;&lt;/{0}:ComboBox&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedItem&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ComboBox), &quot;Build.ToolboxIcons.ComboBox.bmp&quot;" />
        <Attribute Type="Description" RawValue="A combobox control with support for autocomplete, remote-loading, paging and many other features." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ComboBoxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ComboBoxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxBase" Abstract="true" Extends="PickerField" Inherits="IStore&lt;Store&gt;">
      <Summary><![CDATA[A combobox control with support for autocomplete, remote-loading, paging and many other features.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A combobox control with support for autocomplete, remote-loading, paging and many other features." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectedItems" Type="ListItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueHiddenName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSubmit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to submit value only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to submit value only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllQuery" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text query to send to the server to return all records for the list with no filtering (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text query to send to the server to return all records for the list with no filtering (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSelect" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to automatically highlight the first result gathered by the data store in the dropdown list when it is opened. (Defaults to true). A false value would cause nothing in the list to be highlighted automatically, so the user would have to manually highlight an item before pressing the enter or tab key to select it (unless the value of (typeAhead) were true), or use the mouse to select a value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to automatically highlight the first result gathered by the data store in the dropdown list when it is opened. (Defaults to true). A false value would cause nothing in the list to be highlighted automatically, so the user would have to manually highlight an item before pressing the enter or tab key to select it (unless the value of (typeAhead) were true), or use the mouse to select a value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delimiter" Type="string" DefaultValue="&quot;, &quot;">
          <Summary><![CDATA[The character(s) used to separate the display values of multiple selected items when multiSelect = true. Defaults to ', '.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;, &quot;" />
            <Attribute Type="Description" RawValue="The character(s) used to separate the display values of multiple selected items when multiSelect = true. Defaults to ', '." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Type="string" DefaultValue="&quot;text&quot;">
          <Summary><![CDATA[The underlying data field name to bind to this ComboBox (defaults to 'text').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
            <Attribute Type="Description" RawValue="The underlying data field name to bind to this ComboBox (defaults to 'text')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceSelection" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowToLongestValue" Type="bool" DefaultValue="true">
          <Summary><![CDATA[false to not allow the component to resize itself when its data changes (and its grow property is true). Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="false to not allow the component to resize itself when its data changes (and its grow property is true). Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListConfig" Type="BoundList" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireSelectOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to fire select event after setValue on page load]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to fire select event after setValue on page load" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinChars" Type="int" DefaultValue="0">
          <Summary><![CDATA[The minimum number of characters the user must type before autocomplete and typeAhead activate (defaults to 4 if queryMode = 'remote' or 0 if queryMode = 'local', does not apply if editable = false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The minimum number of characters the user must type before autocomplete and typeAhead activate (defaults to 4 if queryMode = 'remote' or 0 if queryMode = 'local', does not apply if editable = false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, allows the combo field to hold more than one value at a time, and allows selecting multiple items from the dropdown list. The combo's text field will show all selected values separated by the delimiter. (Defaults to false.)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true, allows the combo field to hold more than one value at a time, and allows selecting multiple items from the dropdown list. The combo's text field will show all selected values separated by the delimiter. (Defaults to false.)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="0">
          <Summary><![CDATA[If greater than 0, a Ext.toolbar.Paging is displayed in the footer of the dropdown list and the filter queries will execute with page start and limit parameters. Only applies when queryMode = 'remote' (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="If greater than 0, a Ext.toolbar.Paging is displayed in the footer of the dropdown list and the filter queries will execute with page start and limit parameters. Only applies when queryMode = 'remote' (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryCaching" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When true, this prevents the combo from re-querying (either locally or remotely) when the current query is the same as the previous query. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="When true, this prevents the combo from re-querying (either locally or remotely) when the current query is the same as the previous query. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryDelay" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The length of time in milliseconds to delay between the start of typing and sending the query to filter the dropdown list (defaults to 500 if queryMode = 'remote' or 10 if queryMode = 'local')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds to delay between the start of typing and sending the query to filter the dropdown list (defaults to 500 if queryMode = 'remote' or 10 if queryMode = 'local')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryMode" Type="DataLoadMode" DefaultValue="DataLoadMode.Remote">
          <Summary><![CDATA[Set to 'local' if the ComboBox loads local data (defaults to 'remote' which loads from the server).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;queryMode&quot;, JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="DataLoadMode.Remote" />
            <Attribute Type="Description" RawValue="Set to 'local' if the ComboBox loads local data (defaults to 'remote' which loads from the server)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryParam" Type="string" DefaultValue="&quot;query&quot;">
          <Summary><![CDATA[Name of the parameter used by the Store to pass the typed string when the ComboBox is configured with queryMode: 'remote' (defaults to 'query'). If explicitly set to a falsy value it will not be sent.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;query&quot;" />
            <Attribute Type="Description" RawValue="Name of the parameter used by the Store to pass the typed string when the ComboBox is configured with queryMode: 'remote' (defaults to 'query'). If explicitly set to a falsy value it will not be sent." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnTab" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the Tab key should select the currently highlighted item. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the Tab key should select the currently highlighted item. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Transform" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id, DOM node or Ext.Element of an existing HTML <select> element to convert into a ComboBox. The target select's options will be used to build the options in the ComboBox dropdown; a configured store will take precedence over this.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id, DOM node or Ext.Element of an existing HTML &lt;select&gt; element to convert into a ComboBox. The target select's options will be used to build the options in the ComboBox dropdown; a configured store will take precedence over this." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAction" Type="TriggerAction" DefaultValue="TriggerAction.Query">
          <Summary><![CDATA[The action to execute when the trigger is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerAction.Query" />
            <Attribute Type="Description" RawValue="The action to execute when the trigger is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TypeAhead" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to populate and autoselect the remainder of the text being typed after a configurable delay (typeAheadDelay) if it matches a known value (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to populate and autoselect the remainder of the text being typed after a configurable delay (typeAheadDelay) if it matches a known value (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TypeAheadDelay" Type="int" DefaultValue="250">
          <Summary><![CDATA[The length of time in milliseconds to wait until the typeahead text is displayed if TypeAhead = true (defaults to 250).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds to wait until the typeahead text is displayed if TypeAhead = true (defaults to 250)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying data value name to bind to this ComboBox (defaults to match the value of the displayField config).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The underlying data value name to bind to this ComboBox (defaults to match the value of the displayField config)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueNotFoundText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[When using a name/value combo, if the value passed to setValue is not found in the store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined). If this default text is used, it means there is no value set and no validation will occur on this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="When using a name/value combo, if the value passed to setValue is not found in the store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined). If this default text is used, it means there is no value set and no validation will occur on this field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection&lt;Store&gt;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. ComboBox&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ListItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlwaysMergeItems" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MergeItems" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;mergeItems&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearValue">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoQuery" ParamsRaw="string query, bool forceAll, bool rawQuery">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoQuery" ParamsRaw="string query, bool forceAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoQuery" ParamsRaw="string query">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="object value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, IDictionary&lt;string,object&gt; values">
          <Summary><![CDATA[Insert record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="IDictionary&lt;string, object&gt; values">
          <Summary><![CDATA[Add record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertItem" ParamsRaw="int index, string text, object value">
          <Summary><![CDATA[Insert item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert item" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddItem" ParamsRaw="string text, object value">
          <Summary><![CDATA[Add item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add item" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByField" ParamsRaw="string field, object value">
          <Summary><![CDATA[Remove by field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByIndex" ParamsRaw="int index">
          <Summary><![CDATA[Remove by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByValue" ParamsRaw="string value">
          <Summary><![CDATA[Remove by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by value" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByText" ParamsRaw="string text">
          <Summary><![CDATA[Remove by text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by text" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValueAndFireSelect" ParamsRaw="object value">
          <Summary><![CDATA[Sets a data value into the field and validates it. To set the value directly without validation see setRawValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets a data value into the field and validates it. To set the value directly without validation see setRawValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateSelectedItems">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ComboBoxDirectEvents" Extends="PickerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeQuery" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;queryEvent&quot;, typeof(object), &quot;An object that includes combo (This combo box), query (The query), forceAll (True to force 'all' query) and cancel (Set to true to cancel the query).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforequery&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the selected item is added to the collection]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected item is added to the collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the deselected item is removed from the collection]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The deselected record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the deselected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the deselected item is removed from the collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when at least one list item is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when at least one list item is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxListeners" Extends="PickerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeQuery" Type="ComponentListener">
          <Summary><![CDATA[Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;queryEvent&quot;, typeof(object), &quot;An object that includes combo (This combo box), query (The query), forceAll (True to force 'all' query) and cancel (Set to true to cancel the query).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforequery&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before the selected item is added to the collection]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected item is added to the collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeselect" Type="ComponentListener">
          <Summary><![CDATA[Fires before the deselected item is removed from the collection]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The deselected record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the deselected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the deselected item is removed from the collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when at least one list item is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when at least one list item is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandColumn" Extends="ColumnBase" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Hideable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) Specify as false to prevent the user from hiding this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) Specify as false to prevent the user from hiding this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuDisabled" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to disabled the column header menu containing sort/hide options. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disabled the column header menu containing sort/hide options. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show toolbar for over row only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show toolbar for over row only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDelay" Type="int" DefaultValue="250">
          <Summary><![CDATA[Delay before showing over toolbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="Delay before showing over toolbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[Delay before hide over toolbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="Delay before hide over toolbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Commands" Type="GridCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;commands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommands" Type="GridCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupCommands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareToolbar" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupToolbar" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pack" Type="BoxPack" DefaultValue="BoxPack.Start">
          <Summary><![CDATA[Valid values are \"start\", \"center\" and \"end\" (defaults to \"start\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="BoxPack.Start" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Valid values are \&quot;start\&quot;, \&quot;center\&quot; and \&quot;end\&quot; (defaults to \&quot;start\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ImageCommandColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ImageCommandColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandFill" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandMenu" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="MenuCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shared" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableScrolling" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="int" DefaultValue="120">
          <Summary><![CDATA[The minimum width of the menu in pixels (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="120" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width of the menu in pixels (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int" DefaultValue="0">
          <Summary><![CDATA[The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollIncrement" Type="int" DefaultValue="24">
          <Summary><![CDATA[The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="24" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowSeparator" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the icon separator. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the icon separator. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA[True or \"sides\" for the default effect, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"sides\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True or \&quot;sides\&quot; for the default effect, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;sides\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubMenuAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \"tl-tr?\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \&quot;tl-tr?\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreParentClicks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandSeparator" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandSpacer" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandText" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Component" Extends="ComponentBase">
      <Summary><![CDATA[Base Class for all Ext.Net Web Controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for all Ext.Net Web Controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="AbstractComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="AbstractComponentDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentAddedEventArgs" Extends="EventArgs">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentBase" Abstract="true" Extends="AbstractComponent">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAutoScroll&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allows the component to be dragged via the touch event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Allows the component to be dragged via the touch event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableConfig" Type="ComponentDragger" DefaultValue="null">
          <Summary><![CDATA[Specify as true to make a floating AbstractComponent draggable using the AbstractComponent's encapsulating element as the drag handle.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specify as true to make a floating AbstractComponent draggable using the AbstractComponent's encapsulating element as the drag handle." />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaintainFlex" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specifies that if an immediate sibling Splitter is moved, the AbstractComponent on the other side is resized, and this AbstractComponent maintains its configured flex value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies that if an immediate sibling Splitter is moved, the AbstractComponent on the other side is resized, and this AbstractComponent maintains its configured flex value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverflowX" Type="Overflow" DefaultValue="Overflow.Hidden">
          <Summary><![CDATA[Possible values are: * 'auto' to enable automatic horizontal scrollbar (overflow-x: 'auto'). * 'scroll' to always enable horizontal scrollbar (overflow-x: 'scroll'). The default is overflow-x: 'hidden'. This should not be combined with autoScroll.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="Overflow.Hidden" />
            <Attribute Type="Description" RawValue="Possible values are: * 'auto' to enable automatic horizontal scrollbar (overflow-x: 'auto'). * 'scroll' to always enable horizontal scrollbar (overflow-x: 'scroll'). The default is overflow-x: 'hidden'. This should not be combined with autoScroll." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverflowY" Type="Overflow" DefaultValue="Overflow.Hidden">
          <Summary><![CDATA[Possible values are: * 'auto' to enable automatic vertical scrollbar (overflow-y: 'auto'). * 'scroll' to always enable vertical scrollbar (overflow-y: 'scroll'). The default is overflow-y: 'hidden'. This should not be combined with autoScroll.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="Overflow.Hidden" />
            <Attribute Type="Description" RawValue="Possible values are: * 'auto' to enable automatic vertical scrollbar (overflow-y: 'auto'). * 'scroll' to always enable vertical scrollbar (overflow-y: 'scroll'). The default is overflow-y: 'hidden'. This should not be combined with autoScroll." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to apply a Resizer to this AbstractComponent after rendering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to apply a Resizer to this AbstractComponent after rendering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizableProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizableConfig" Type="Resizer" DefaultValue="null">
          <Summary><![CDATA[Specify as a config object to apply a Resizer to this AbstractComponent after rendering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Specify as a config object to apply a Resizer to this AbstractComponent after rendering." />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizableConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizable&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeHandles" Type="ResizeHandle" DefaultValue="ResizeHandle.All">
          <Summary><![CDATA[A valid Ext.resizer.Resizer handles config string (defaults to 'all'). Only applies when resizable = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="ResizeHandle.All" />
            <Attribute Type="Description" RawValue="A valid Ext.resizer.Resizer handles config string (defaults to 'all'). Only applies when resizable = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToFrontOnShow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically call toFront when the show method is called on an already visible, floating component (default is true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically call toFront when the show method is called on an already visible, floating component (default is true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Bubble" ParamsRaw="string function">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Bubble" ParamsRaw="string function, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Bubble" ParamsRaw="string function, string scope, object[] args">
          <Summary><![CDATA[Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus" ParamsRaw="bool selectText">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus" ParamsRaw="bool selectText, int delay">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="string animateTarget">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="ComponentBase animateTarget">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="ComponentBase animateTarget, string callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="ComponentBase animateTarget, JFunction callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAutoScroll" ParamsRaw="bool scroll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPagePosition" ParamsRaw="int x, int y">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPagePosition" ParamsRaw="int x, int y, AnimConfig animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPagePosition" ParamsRaw="int x, int y, int animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPosition" ParamsRaw="int x, int y">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPosition" ParamsRaw="int x, int y, AnimConfig animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPosition" ParamsRaw="int x, int y, bool animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animTarget">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animTarget, string callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animTarget, JFunction callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animTarget, string callback, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateBox" ParamsRaw="Unit x, Unit y, Unit width, Unit height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateBox" ParamsRaw="int x, int y, int width, int height">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLoading" ParamsRaw="LoadMask load, bool targetEl">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLoading" ParamsRaw="LoadMask load">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ComponentColumn" Extends="ColumnBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show toolbar for over row only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show toolbar for over row only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDelay" Type="int" DefaultValue="250">
          <Summary><![CDATA[Delay before showing over toolbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="Delay before showing over toolbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[Delay before hide over toolbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="Delay before hide over toolbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editor" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use component as cell editor]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to use component as cell editor" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidthComponent" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to fit component's width]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to fit component's width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to stop selection after click on the column]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop selection after click on the column" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PinIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Index of initial pinned row (component will be shown at this row)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;pin&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="Index of initial pinned row (component will be shown at this row)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pin" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to pin the component initially (you can show it manually)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;pin&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to pin the component initially (you can show it manually)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PinAllColumns" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to pin all column if this column is pinned]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to pin all column if this column is pinned" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveEditorOnEnter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Use Enter key for vertical navigation (can be used with shift key for up moving)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Use Enter key for vertical navigation (can be used with shift key for up moving)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveEditorOnTab" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Use Tab key for horizontal navigation (can be used with shift key for left moving)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Use Tab key for horizontal navigation (can be used with shift key for left moving)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnUnpin" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide component immediately after unpin]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide component immediately after unpin" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableKeyNavigation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable key navigation of selection model]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable key navigation of selection model" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowKeyEvents" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to bubble key events from the component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to bubble key events from the component" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PinEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of events to pin the component in a row (uses with OverOnly=true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of events to pin the component in a row (uses with OverOnly=true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnpinEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of events to unpin the component in a row (uses with OverOnly=true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of events to unpin the component in a row (uses with OverOnly=true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ComponentColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ComponentColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentColumnDirectEvents" Extends="ColumnDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Pin" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a over component is pinned]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pin&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a over component is pinned" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unpin" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a over component is unpinned]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unpin&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a over component is unpinned" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Bind" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a component is bound to a record. Return false to cancel component showing for this record]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;grid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bind&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is bound to a record. Return false to cancel component showing for this record" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unbind" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a component is unbound from a record.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;grid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unbind&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is unbound from a record." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentColumnListeners" Extends="ColumnListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Pin" Type="ComponentListener">
          <Summary><![CDATA[Fires when a over component is pinned]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pin&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a over component is pinned" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unpin" Type="ComponentListener">
          <Summary><![CDATA[Fires when a over component is unpinned]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unpin&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a over component is unpinned" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Bind" Type="ComponentListener">
          <Summary><![CDATA[Fires when a component is bound to a record. Return false to cancel component showing for this record]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;grid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bind&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is bound to a record. Return false to cancel component showing for this record" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unbind" Type="ComponentListener">
          <Summary><![CDATA[Fires when a component is unbound from a record.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cmp&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;grid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unbind&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is unbound from a record." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentDirectEvent" Extends="ObservableDirectEvent">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof (DirectEventConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DisableControl" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable control during direct request]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disable control during direct request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Modifier="Override" Type="DirectEventType" DefaultValue="DirectEventType.Submit">
          <Summary><![CDATA[The type of DirectEvent to perform. The 'Submit' type will submit the &lt;form> and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="DirectEventType.Submit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of DirectEvent to perform. The 'Submit' type will submit the &amp;lt;form&gt; and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Confirmation" Type="DirectEventConfirmation">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentDirectEvents" Extends="BaseItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentDragger" Extends="DragTracker" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to constrain the AbstractComponent to within the bounds of the constrainTo region.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;4. ComponentDragger&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to constrain the AbstractComponent to within the bounds of the constrainTo region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainDelegate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to constrain the drag handles within the constrainTo region.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;4. ComponentDragger&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to constrain the drag handles within the constrainTo region." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentListener" Extends="BaseListener" Inherits="IAutoPostBack">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenerConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initiate a postback.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to initiate a postback." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnInternal" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BroadcastOnBus" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArgumentsListProxy" Access="Protected" Type="List&lt;string&gt;" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;argumentsList&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentListeners" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentLoader" Extends="Observable">
      <Attributes>
        <Attribute Type="Browsable" RawValue="false" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DisableCaching" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to add a unique cache-buster param to GET requests. (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a unique cache-buster param to GET requests. (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCachingParam" Type="string" DefaultValue="&quot;_dc&quot;">
          <Summary><![CDATA[Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;_dc&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AjaxOptions" Type="AjaxOptions">
          <Summary><![CDATA[Any additional options to be passed to the request, for example timeout or headers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Any additional options to be passed to the request, for example timeout or headers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PassParentSize" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerEvent" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Event which triggers loading process. Default value is render]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Event which triggers loading process. Default value is render" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerControl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[TriggerEvent's control]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="TriggerEvent's control" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReloadOnEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Reload content on each show event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Reload content on each show event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorComplete" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to monitor complete state of the iframe instead load event using.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to monitor complete state of the iframe instead load event using." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Callback" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CallbackProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;callback&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to have the loader make a request as soon as it is created. Defaults to true. This argument can also be a set of options that will be passed to load is called.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to have the loader make a request as soon as it is created. Defaults to true. This argument can also be a set of options that will be passed to load is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParams" Type="ParameterCollection">
          <Summary><![CDATA[Params that will be attached to every request. These parameters will not be overridden by any params in the load options. Defaults to null.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Params that will be attached to every request. These parameters will not be overridden by any params in the load options. Defaults to null." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Failure" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function to be called when a load request fails.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="A function to be called when a load request fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FailureProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;failure&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Type="LoadMask">
          <Summary><![CDATA[True or a Ext.LoadMask configuration to enable masking during loading. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadMask&quot;, typeof(LoadMaskJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="True or a Ext.LoadMask configuration to enable masking during loading. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Summary><![CDATA[Any params to be attached to the Ajax request. These parameters will be overridden by any params in the load options. Defaults to null.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Any params to be attached to the Ajax request. These parameters will be overridden by any params in the load options. Defaults to null." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;paramsFn&quot;,JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scripts" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to parse any inline script tags in the response.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to parse any inline script tags in the response." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoveAll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to remove all existing components when a load completes. This option is only takes effect when the renderer option is set to component. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to remove all existing components when a load completes. This option is only takes effect when the renderer option is set to component. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="LoadMode" DefaultValue="LoadMode.Html">
          <Summary><![CDATA[The type of content that is to be loaded into, which can be one of 4 types. Html|Data|Component|Frame]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="LoadMode.Html" />
            <Attribute Type="Description" RawValue="The type of content that is to be loaded into, which can be one of 4 types. Html|Data|Component|Frame" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The function which handles the response]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="The function which handles the response" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RendererProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderer&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope to execute the success and failure functions in.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="The scope to execute the success and failure functions in." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function to be called when a load request is successful.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="A function to be called when a load request is successful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SuccessProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;success&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target Ext.AbstractComponent for the loader. Defaults to null. If a string is passed it will be looked up via the id.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="The target Ext.AbstractComponent for the loader. Defaults to null. If a string is passed it will be looked up via the id." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The url to retrieve the content from. Defaults to null.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Url" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="The url to retrieve the content from. Defaults to null." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectMethod" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The direct method name provides a content for the component]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. ComponentLoader&quot;" />
            <Attribute Type="Description" RawValue="The direct method name provides a content for the component" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ComponentLoaderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentLoaderDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a load request is made to the server. Returning false from an event listener can prevent the load from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a load request is made to the server. Returning false from an event listener can prevent the load from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an unsuccessful load.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;The response from the server&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an unsuccessful load." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a successful load.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;The response from the server&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a successful load." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentLoaderListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a load request is made to the server. Returning false from an event listener can prevent the load from occurring.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a load request is made to the server. Returning false from an event listener can prevent the load from occurring." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentListener">
          <Summary><![CDATA[Fires after an unsuccessful load.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;The response from the server&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an unsuccessful load." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires after a successful load.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ComponentLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;The response from the server&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The options passed to the request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a successful load." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfigBagJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfigOptionAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property | AttributeTargets.Enum | AttributeTargets.Class, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfigScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Container" Extends="AbstractContainer">
      <Summary><![CDATA[Base class for any Ext.AbstractComponent that may contain other Components. Containers handle the basic behavior of containing items, namely adding, inserting and removing items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Container runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Container&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Container), &quot;Build.ToolboxIcons.Container.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Base class for any Ext.AbstractComponent that may contain other Components. Containers handle the basic behavior of containing items, namely adding, inserting and removing items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContainerDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after any AbstractComponent is added or inserted into the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any AbstractComponent is added or inserted into the content Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLayout" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the components in this container are arranged by the associated layout manager.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;layout&quot;, typeof(object), &quot;The ContainerLayout implementation for this container&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterlayout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the components in this container are arranged by the associated layout manager." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any AbstractComponent is added or inserted into the content Container. A handler can return false to cancel the add.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any AbstractComponent is added or inserted into the content Container. A handler can return false to cancel the add." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any AbstractComponent is removed from the content Container. A handler can return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component being removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any AbstractComponent is removed from the content Container. A handler can return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after any AbstractComponent is removed from the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any AbstractComponent is removed from the content Container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContainerListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentListener">
          <Summary><![CDATA[Fires after any AbstractComponent is added or inserted into the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any AbstractComponent is added or inserted into the content Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLayout" Type="ComponentListener">
          <Summary><![CDATA[Fires when the components in this container are arranged by the associated layout manager.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;layout&quot;, typeof(object), &quot;The ContainerLayout implementation for this container&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterlayout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the components in this container are arranged by the associated layout manager." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires before any AbstractComponent is added or inserted into the content Container. A handler can return false to cancel the add.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any AbstractComponent is added or inserted into the content Container. A handler can return false to cancel the add." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before any AbstractComponent is removed from the content Container. A handler can return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component being removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any AbstractComponent is removed from the content Container. A handler can return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fires after any AbstractComponent is removed from the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(AbstractComponent), &quot;The component that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any AbstractComponent is removed from the content Container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContentContainer" Extends="HtmlGenericControl">
      <Attributes>
        <Attribute Type="Browsable" RawValue="false" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ContentScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ControlConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Controller" Extends="ControllerBase" Inherits="ICustomConfigSerialization,IVirtual">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ControllerBase" Abstract="true" Extends="Observable">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Models" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[Array of models to require from AppName.model namespace.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. Controller&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of models to require from AppName.model namespace." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stores" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[Array of stores to require from AppName.store namespacee.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. Controller&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of stores to require from AppName.store namespacee." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Views" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[Array of stores to require from AppName.store namespacee.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. Controller&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of stores to require from AppName.store namespacee." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="null">
          <Summary><![CDATA[The controller name. Required]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The controller name. Required" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ControllerExtensions">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ControlState" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Cookies" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CRUDDirect" Extends="CRUDUrls">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CRUDMethods" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Create" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Read" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CRUDUrls" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Sync" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;sync&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Create" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CreateProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;create&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Read" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;read&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DestroyProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CSS" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CtorDateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CustomConfigJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CustomIdGenerator" Extends="ModelIdGenerator">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsGenerator" Access="Protected" Type="bool">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;isGenerator&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Generate" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CycleButton" Extends="SplitButtonBase">
      <Summary><![CDATA[A specialized SplitButton that contains a menu of Ext.menu.CheckItem elements. The button automatically cycles through each menu items on click, raising the button's change event (or calling the button's changeHandler function, if supplied) for the active menu items. Clicking on the arrow section of the button displays the dropdown menu just like a normal SplitButton.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CycleButton runat=\&quot;server\&quot; Text=\&quot;Cycle Button\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CycleButton), &quot;Build.ToolboxIcons.CycleButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A specialized SplitButton that contains a menu of Ext.menu.CheckItem elements. The button automatically cycles through each menu items on click, raising the button's change event (or calling the button's changeHandler function, if supplied) for the active menu items. Clicking on the arrow section of the button displays the dropdown menu just like a normal SplitButton." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ChangeHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A callback function that will be invoked each time the active menu items in the button's menu has changed. If this callback is not supplied, the SplitButton will instead fire the change event on active items change. The changeHandler function will be called with the following argument list: (SplitButton this, Ext.menu.CheckItem items).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A callback function that will be invoked each time the active menu items in the button's menu has changed. If this callback is not supplied, the SplitButton will instead fire the change event on active items change. The changeHandler function will be called with the following argument list: (SplitButton this, Ext.menu.CheckItem items)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceIcon" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets an image to be used as the static icon for this button. This icon will always be displayed regardless of which item is selected in the dropdown list. This overrides the default behavior of changing the button's icon to match the selected item's icon on change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A css class which sets an image to be used as the static icon for this button. This icon will always be displayed regardless of which item is selected in the dropdown list. This overrides the default behavior of changing the button's icon to match the selected item's icon on change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrependText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A static string to prepend before the active items's text when displayed as the button's text (only applies when showText = true, defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A static string to prepend before the active items's text when displayed as the button's text (only applies when showText = true, defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowText" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the active item's text as the button text. The Button will show its configured text if this config is omitted (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the active item's text as the button text. The Button will show its configured text if this config is omitted (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to prevent change active item after button click (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to prevent change active item after button click (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleOnClickProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;toggleSelected&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CycleButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CycleButtonDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ToggleSelected">
          <Summary><![CDATA[This is normally called internally on button click, but can be called externally to advance the button's active item programmatically to the next one in the menu. If the current item is the last one in the menu the active item will be set to the first item in the menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="This is normally called internally on button click, but can be called externally to advance the button's active item programmatically to the next one in the menu. If the current item is the last one in the menu the active item will be set to the first item in the menu." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CycleButtonDirectEvents" Extends="SplitButtonDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CycleButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CycleButtonListeners" Extends="SplitButtonListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CycleButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checkitem&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataFilter" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AnyMatch" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow any match - no regex start/end line anchors will be added. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to allow any match - no regex start/end line anchors will be added. Defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CaseSensitive" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the regex case sensitive (adds 'i' switch to regex). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the regex case sensitive (adds 'i' switch to regex). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExactMatch" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to force exact match (^ and $ characters added to the regex). Defaults to false. Ignored if anyMatch is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to force exact match (^ and $ characters added to the regex). Defaults to false. Ignored if anyMatch is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterFn" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A custom filter function which is passed each item in the Ext.util.MixedCollection in turn. Should return true to accept each item or false to reject it]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A custom filter function which is passed each item in the Ext.util.MixedCollection in turn. Should return true to accept each item or false to reject it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Property" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The property to filter on. Required unless a filter is passed]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The property to filter on. Required unless a filter is passed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional root property. This is mostly useful when filtering a Store, in which case we set the root to 'data' to make the filter pull the property out of the data object of each item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Optional root property. This is mostly useful when filtering a Store, in which case we set the root to 'data' to make the filter pull the property out of the data object of each item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="null">
          <Summary><![CDATA[Filter value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Filter value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataFilterCollection" Extends="BaseItemCollection&lt;DataFilter&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DataProxyDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires before a network request is made to retrieve a data object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires before a network request is made to retrieve a data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires before the load method's callback is called.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;load&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires before the load method's callback is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoawdException" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during data loading]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;loadexception&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during data loading" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataSorter" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Direction" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[The direction to sort by. Defaults to ASC]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The direction to sort by. Defaults to ASC" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Property" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The property to sort by. Required unless sorterFn is provided]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The property to sort by. Required unless sorterFn is provided" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional root property. This is mostly useful when sorting a Store, in which case we set the root to 'data' to make the filter pull the property out of the data object of each item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Optional root property. This is mostly useful when sorting a Store, in which case we set the root to 'data' to make the filter pull the property out of the data object of each item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SorterFn" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A specific sorter function to execute. Can be passed instead of property]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A specific sorter function to execute. Can be passed instead of property" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Transform" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[ function that will be run on each value before it is compared in the sorter. The function will receive a single argument, the value.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue=" function that will be run on each value before it is compared in the sorter. The function will receive a single argument, the value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataSorterCollection" Extends="BaseItemCollection&lt;DataSorter&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DataView" Extends="AbstractDataView" Inherits="IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataView runat=\&quot;server\&quot;&gt;&lt;/{0}:DataView&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataView), &quot;Build.ToolboxIcons.DataView.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeselectOnContainerClick" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableKeyNav" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turns on/off keyboard navigation within the DataView. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractDataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Turns on/off keyboard navigation within the DataView. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelModelProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selModel&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DataViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DataViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRows" Type="SelectedRowCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewAnimated" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataViewAnimated), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataViewAnimated runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Duration" Type="int" DefaultValue="750">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="750" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDProperty" Type="string" DefaultValue="&quot;id&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idProperty&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;id&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the view is refreshed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the view is refreshed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the nodes associated with an recordset have been added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the nodes associated with an recordset have been added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the node associated with an individual record is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the node associated with an individual record is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the node associated with an individual record is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the node associated with an individual record is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the view is refreshed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the view is refreshed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the View's item elements representing Store items has been rendered. If the deferInitialRefresh flag was set (and it is true by default), this will be after initial render, and no items will be available for selection until this event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the View's item elements representing Store items has been rendered. If the deferInitialRefresh flag was set (and it is true by default), this will be after initial render, and no items will be available for selection until this event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the click event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the contextmenu event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the dblclick event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerKeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the keydown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the keydown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mousedown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseout event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseout event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseover event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseover event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseup event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the click event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the contextmenu event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the dblclick event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemKeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the keydown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the keydown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mousedown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseenter event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseenter event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseleave event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseleave event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseup event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a selection is made. If any handlers return false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a selection is made. If any handlers return false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerKeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a key is pressed while the container is focused, and no item is currently selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a key is pressed while the container is focused, and no item is currently selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when you move the mouse out of the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse out of the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when you move the mouse over the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse over the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse up on the container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on the container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightItem" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is highlighted using keyboard navigation, or mouseover.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;highlightitem&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is highlighted using keyboard navigation, or mouseover." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemKeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a key is pressed while an item is currently selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a key is pressed while an item is currently selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse down on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse down on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse enters an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse leaves an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse up on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected nodes change. Relayed event from the underlying selection model.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change. Relayed event from the underlying selection model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnhighlightItem" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the item updating]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unhighlightitem&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item updating" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before droping an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overRecord&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;currentPosition&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;processDrop&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before droping an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after droping an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overRecord&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;currentPosition&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after droping an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the item removing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item removing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the item updating]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item updating" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewDraggable" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataViewDraggable), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataViewDraggable runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GhostCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class added to the outermost element of the created ghost proxy]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class added to the outermost element of the created ghost proxy" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GhostTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The template used in the ghost DataView]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="&quot;ghostTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template used in the ghost DataView" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDConfig" Type="DragZone" DefaultValue="null">
          <Summary><![CDATA[Config object that is applied to the internally created DragZone]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Config object that is applied to the internally created DragZone" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddConfig&quot;, JsonMode.Raw" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewDragSelector" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataViewDragSelector), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataViewDragSelector runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DataViewLabelEditor" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataViewLabelEditor), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataViewLabelEditor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[x-editable]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="x-editable" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentListener">
          <Summary><![CDATA[Fires before the view is refreshed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the view is refreshed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires when the nodes associated with an recordset have been added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the nodes associated with an recordset have been added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires when the node associated with an individual record is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the node associated with an individual record is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires when the node associated with an individual record is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the node associated with an individual record is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentListener">
          <Summary><![CDATA[Fires when the view is refreshed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the view is refreshed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentListener">
          <Summary><![CDATA[Fires when the View's item elements representing Store items has been rendered. If the deferInitialRefresh flag was set (and it is true by default), this will be after initial render, and no items will be available for selection until this event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the View's item elements representing Store items has been rendered. If the deferInitialRefresh flag was set (and it is true by default), this will be after initial render, and no items will be available for selection until this event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the click event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires before the contextmenu event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the dblclick event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerKeyDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the keydown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the keydown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mousedown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseout event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseout event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseover event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseover event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseup event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the click event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires before the contextmenu event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the dblclick event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemKeyDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the keydown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the keydown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mousedown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseenter event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseenter event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseleave event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseleave event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseup event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before a selection is made. If any handlers return false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a selection is made. If any handlers return false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerKeyDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when a key is pressed while the container is focused, and no item is currently selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a key is pressed while the container is focused, and no item is currently selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when you move the mouse out of the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse out of the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when you move the mouse over the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse over the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse up on the container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on the container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightItem" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is highlighted using keyboard navigation, or mouseover.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;highlightitem&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is highlighted using keyboard navigation, or mouseover." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemKeyDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when a key is pressed while an item is currently selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a key is pressed while an item is currently selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse down on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse down on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse enters an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse leaves an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse up on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected nodes change. Relayed event from the underlying selection model.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change. Relayed event from the underlying selection model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnhighlightItem" Type="ComponentListener">
          <Summary><![CDATA[Fires before the item updating]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unhighlightitem&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item updating" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentListener">
          <Summary><![CDATA[Fires before droping an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overRecord&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;currentPosition&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;processDrop&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before droping an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentListener">
          <Summary><![CDATA[Fires after droping an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overRecord&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;currentPosition&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after droping an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before the item removing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item removing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires before the item updating]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the item updating" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateColumn" Extends="CellCommandColumn">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A formatting string as used by Date.format to format a Date for this Column. This defaults to the default date from Ext.Date.defaultFormat which itself my be overridden in a locale file.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DateColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Date.format to format a Date for this Column. This defaults to the default date from Ext.Date.defaultFormat which itself my be overridden in a locale file." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateField" Extends="DateFieldBase">
      <Summary><![CDATA[Provides a date input field with a DatePicker dropdown and automatic date validation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DateField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DateField), &quot;Build.ToolboxIcons.DateField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a date input field with a DatePicker dropdown and automatic date validation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DateFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DateFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateFieldBase" Abstract="true" Extends="PickerField" Inherits="IDate">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectedDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Modifier="Override" Access="ProtectedInternal" Type="object">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, typeof(CtorDateTimeJsonConverter)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormats" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Multiple date formats separated by \" | \" to try when parsing a user input value and it does not match the defined format (defaults to 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Multiple date formats separated by \&quot; | \&quot; to try when parsing a user input value and it does not match the defined format (defaults to 'm/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormatsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;altFormats&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDates" Type="DisabledDateCollection">
          <Summary><![CDATA[An array of \"dates\" to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Description" RawValue="An array of \&quot;dates\&quot; to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledDates&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip text to display when the date falls on a disabled date (defaults to 'Disabled').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The tooltip text to display when the date falls on a disabled date (defaults to 'Disabled')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDays" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An array of days to disable, 0 based. For example, [0, 6] disables Sunday and Saturday (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of days to disable, 0 based. For example, [0, 6] disables Sunday and Saturday (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDaysText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip to display when the date falls on a disabled day (defaults to 'Disabled').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The tooltip to display when the date falls on a disabled day (defaults to 'Disabled')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidText" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the field is invalid (defaults to '{0} is not a valid date - it must be in the format {1}').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the field is invalid (defaults to '{0} is not a valid date - it must be in the format {1}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is after MaxValue (defaults to 'TThe date in this field must be equal to or before {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is after MaxValue (defaults to 'TThe date in this field must be equal to or before {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[The maximum allowed date. Can be either a Javascript date object or a string date in a valid format (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxDate&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;maxValue&quot;, typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowed date. Can be either a Javascript date object or a string date in a valid format (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be equal to or after {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be equal to or after {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[The minimum allowed date. Can be either a Javascript date object or a string date in a valid format (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinDate&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;minValue&quot;, typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowed date. Can be either a Javascript date object or a string date in a valid format (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowToday" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the footer area of the DatePicker containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the footer area of the DatePicker containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Day index at which the week should begin, 0-based (defaults to 0, which is Sunday)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="Day index at which the week should begin, 0-based (defaults to 0, which is Sunday)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitFormat" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The date format string which will be submitted to the server. The format must be valid according to Ext.Date.parse (defaults to format).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The date format string which will be submitted to the server. The format must be valid according to Ext.Date.parse (defaults to format)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;submitFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseStrict" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enforce strict date parsing to prevent the default Javascript \"date rollover\". Defaults to the useStrict parameter set on Ext.Date See Ext.Date.parse.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enforce strict date parsing to prevent the default Javascript \&quot;date rollover\&quot;. Defaults to the useStrict parameter set on Ext.Date See Ext.Date.parse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the ok button. Defaults 'OK']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the ok button. Defaults 'OK'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the cancel button. Defaults to 'Cancel']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="UrlProperty" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the cancel button. Defaults to 'Cancel'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="DatePickerType" DefaultValue="DatePickerType.Date">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="DatePickerType.Date" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateFieldDirectEvents" Extends="PickerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DateFieldListeners" Extends="PickerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DateFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeText" Type="string" DefaultValue="&quot;Before&quot;">
          <Summary><![CDATA[The text displayed for the 'Before' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Before&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Before' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterText" Type="string" DefaultValue="&quot;After&quot;">
          <Summary><![CDATA[The text displayed for the 'After' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;After&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'After' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnText" Type="string" DefaultValue="&quot;On&quot;">
          <Summary><![CDATA[The text displayed for the 'On' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;On&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'On' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dateFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DatePickerOptions" Type="DatePickerOptions">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pickerOpts&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[Allowable date as passed to the Ext.DatePicker]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="Allowable date as passed to the Ext.DatePicker" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[Allowable date as passed to the Ext.DatePicker]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="Allowable date as passed to the Ext.DatePicker" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenu" Extends="MenuBase">
      <Summary><![CDATA[A menu containing a Ext.picker.Date component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A menu containing a Ext.picker.Date component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to continue showing the menu after a date is selected, defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to continue showing the menu after a date is selected, defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Picker" Type="DatePicker">
          <Summary><![CDATA[The Ext.DatePicker object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;pickerConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The Ext.DatePicker object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DateMenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DateMenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenuDirectEvents" Extends="MenuDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;picker&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(object), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenuListeners" Extends="MenuListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;picker&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(object), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePicker" Extends="ComponentBase" Inherits="IDate,IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,INoneContentable">
      <Summary><![CDATA[Simple DatePicker class.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DatePicker runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DatePicker), &quot;Build.ToolboxIcons.DatePicker.bmp&quot;" />
        <Attribute Type="Description" RawValue="Simple DatePicker class." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AriaTitle" Type="string" DefaultValue="&quot;Date Picker: {0}&quot;">
          <Summary><![CDATA[The text to display for the aria title. Defaults to: \"Date Picker: {0}\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Date Picker: {0}&quot;" />
            <Attribute Type="Description" RawValue="The text to display for the aria title. Defaults to: \&quot;Date Picker: {0}\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AriaTitleDateFormat" Type="string" DefaultValue="&quot;MMMM dd, yyyy&quot;">
          <Summary><![CDATA[The date format to display for the current value in the ariaTitle. Defaults to: \"MMMM dd, yyyy\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;MMMM dd, yyyy&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The date format to display for the current value in the ariaTitle. Defaults to: \&quot;MMMM dd, yyyy\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AriaTitleDateFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;F d, Y&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ariaTitleDateFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;F d, Y&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual day names which can be overriden for localization support (defaults to Ext.Date.dayNames)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual day names which can be overriden for localization support (defaults to Ext.Date.dayNames)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableAnim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable animations when showing the month picker. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable animations when showing the month picker. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledCellCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The class to apply to disabled cells. Defaults to: \"x-datepicker-disabled\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The class to apply to disabled cells. Defaults to: \&quot;x-datepicker-disabled\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDates" Type="DisabledDateCollection">
          <Summary><![CDATA[An array of \"dates\" to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Description" RawValue="An array of \&quot;dates\&quot; to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledDates&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesRE" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[JavaScript regular expression used to disable a pattern of dates. The disabledDates config will generate this regex internally, but if you specify disabledDatesRE it will take precedence over the disabledDates value. Defaults to: null]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="JavaScript regular expression used to disable a pattern of dates. The disabledDates config will generate this regex internally, but if you specify disabledDatesRE it will take precedence over the disabledDates value. Defaults to: null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesText" Type="string" DefaultValue="&quot;Disabled&quot;">
          <Summary><![CDATA[The tooltip text to display when the date falls on a disabled date. Defaults to: \"Disabled\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Disabled&quot;" />
            <Attribute Type="Description" RawValue="The tooltip text to display when the date falls on a disabled date. Defaults to: \&quot;Disabled\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDays" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An array of days to disable, 0-based. For example, [0, 6] disables Sunday and Saturday (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of days to disable, 0-based. For example, [0, 6] disables Sunday and Saturday (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDaysText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip to display when the date falls on a disabled day. Defaults to: \"Disabled\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display when the date falls on a disabled day. Defaults to: \&quot;Disabled\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusOnShow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically focus the picker on show. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically focus the picker on show. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'm/d/y').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'm/d/y')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the select event of this picker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function that will handle the select event of this picker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyNavConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;keyNavConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LongDayFormat" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The format for displaying a date in a longer format.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The format for displaying a date in a longer format." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LongDayFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;longDayFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[The maximum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxDate&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display if the maxDate validation fails. (defaults to 'This date is after the maximum date').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display if the maxDate validation fails. (defaults to 'This date is after the maximum date')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[The minimum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinDate&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display if the minDate validation fails. (defaults to 'This date is before the minimum date').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display if the minDate validation fails. (defaults to 'This date is before the minimum date')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual month names which can be overriden for localization support (defaults to Date.monthNames).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual month names which can be overriden for localization support (defaults to Date.monthNames)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthYearFormat" Type="string" DefaultValue="&quot;MMMM yyyy&quot;">
          <Summary><![CDATA[The date format for the header month. Defaults to: \"MMMM yyyy\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;MMMM yyyy&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The date format for the header month. Defaults to: \&quot;MMMM yyyy\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthYearFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;F Y&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;monthYearFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;F Y&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthYearText" Type="string" DefaultValue="&quot;Choose a month (Control+Up/Down to move years)&quot;">
          <Summary><![CDATA[The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Choose a month (Control+Up/Down to move years)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NextText" Type="string" DefaultValue="&quot;Next Month (Control+Right)&quot;">
          <Summary><![CDATA[The next month navigation button tooltip (defaults to 'Next Month (Control+Right)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Next Month (Control+Right)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The next month navigation button tooltip (defaults to 'Next Month (Control+Right)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrevText" Type="string" DefaultValue="&quot;Previous Month (Control+Left)&quot;">
          <Summary><![CDATA[The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Previous Month (Control+Left)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[The scope (this reference) in which the handler function will be called. Defaults to this DatePicker instance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler function will be called. Defaults to this DatePicker instance." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCls" Type="string" DefaultValue="null">
          <Summary><![CDATA[The class to apply to the selected cell. Defaults to: \"x-datepicker-selected\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The class to apply to the selected cell. Defaults to: \&quot;x-datepicker-selected\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowToday" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the footer area containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the footer area containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="0">
          <Summary><![CDATA[Day index at which the week should begin, 0-based (defaults to 0, which is Sunday).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Day index at which the week should begin, 0-based (defaults to 0, which is Sunday)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display on the button that selects the current date (defaults to 'Today').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the button that selects the current date (defaults to 'Today')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayTip" Type="string" DefaultValue="&quot;{0} (Spacebar)&quot;">
          <Summary><![CDATA[A string used to format the message for displaying in a tooltip over the button that selects the current date. The {0} token in string is replaced by today's date. Defaults to: \"{0} (Spacebar)\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} (Spacebar)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="A string used to format the message for displaying in a tooltip over the button that selects the current date. The {0} token in string is replaced by today's date. Defaults to: \&quot;{0} (Spacebar)\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DatePickerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DatePickerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;select&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;select&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Type="object">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Summary><![CDATA[Clear the value of this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear the value of this field." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="DatePickerDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a date is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The selected date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePickerListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a date is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The selected date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePickerOptions" Extends="DatePicker">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ApplyTo" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderTo" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateRangeField" Extends="Ext">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ToText" Type="string" DefaultValue="&quot;to&quot;">
          <Summary><![CDATA[The text to display in between the date/time fields (defaults to 'to')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;to&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display in between the date/time fields (defaults to 'to')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllDayText" Type="string" DefaultValue="&quot;All day&quot;">
          <Summary><![CDATA[The text to display as the label for the all day checkbox (defaults to 'All day')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;All day&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display as the label for the all day checkbox (defaults to 'All day')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleLine" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[This value can be set explicitly to true or false to force the field to render on one line or two lines respectively.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This value can be set explicitly to true or false to force the field to render on one line or two lines respectively." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleLineMinWidth" Type="int" DefaultValue="490">
          <Summary><![CDATA[This value is the approximate minimum width required to render the field on a single line]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="490" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This value is the approximate minimum width required to render the field on a single line" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormat" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The date display format used by the date fields]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The date display format used by the date fields" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dateFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TimeFormat" Type="string" DefaultValue="&quot;t&quot;">
          <Summary><![CDATA[The time display format used by the time fields. By default the DateRange uses the Extensible.Date.use24HourTime setting and sets the format to 'g:i A' for 12-hour time (e.g., 1:30 PM) or 'G:i' for 24-hour time (e.g., 13:30). This can also be overridden by a static format string if desired.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. DateRangeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" RawValue="The time display format used by the time fields. By default the DateRange uses the Extensible.Date.use24HourTime setting and sets the format to 'g:i A' for 12-hour time (e.g., 1:30 PM) or 'G:i' for 24-hour time (e.g., 13:30). This can also be overridden by a static format string if desired." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TimeFormattProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;timeFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DayView" Extends="Container">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DayCount" Type="int" DefaultValue="1">
          <Summary><![CDATA[The number of days to display in the view (defaults to 1). Only values from 1 to 7 are allowed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of days to display in the view (defaults to 1). Only values from 1 to 7 are allowed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDCreateEventText" Type="string" DefaultValue="&quot;Create event for {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddCreateEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Create event for {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDMoveEventText" Type="string" DefaultValue="&quot;Move event to {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddMoveEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Move event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DD" Extends="DragDrop">
      <Summary><![CDATA[A DragDrop implementation where the linked element follows the mouse cursor during a drag.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DD runat=\&quot;server\&quot;&gt;&lt;/{0}:DD&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DD), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A DragDrop implementation where the linked element follows the mouse cursor during a drag." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scroll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When set to true, the utility automatically tries to scroll the browser window when a drag and drop element is dragged near the viewport boundary. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DD&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When set to true, the utility automatically tries to scroll the browser window when a drag and drop element is dragged near the viewport boundary. Defaults to true." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DDProxy" Extends="DD">
      <Summary><![CDATA[A DragDrop implementation that inserts an empty, bordered div into the document that follows the cursor during drag operations. At the time of the click, the frame div is resized to the dimensions of the linked html element, and moved to the exact location of the linked element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DDProxy runat=\&quot;server\&quot;&gt;&lt;/{0}:DDProxy&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DDProxy), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A DragDrop implementation that inserts an empty, bordered div into the document that follows the cursor during drag operations. At the time of the click, the frame div is resized to the dimensions of the linked html element, and moved to the exact location of the linked element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CenterFrame" Type="bool" DefaultValue="false">
          <Summary><![CDATA[By default the frame is positioned exactly where the drag element is, so we use the cursor offset provided by Ext.dd.DD. Another option that works only if you do not have constraints on the obj is to have the drag frame centered around the cursor. Set centerFrame to true for this effect. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default the frame is positioned exactly where the drag element is, so we use the cursor offset provided by Ext.dd.DD. Another option that works only if you do not have constraints on the obj is to have the drag frame centered around the cursor. Set centerFrame to true for this effect. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeFrame" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default we resize the drag frame to be the same size as the element we want to drag (this is to get the frame effect). We can turn it off if we want a different behavior.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default we resize the drag frame to be the same size as the element we want to drag (this is to get the frame effect). We can turn it off if we want a different behavior." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrag" Type="JFunction">
          <Summary><![CDATA[Abstract method runs on drag end]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method runs on drag end" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DDTarget" Extends="DragDrop">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DefaultScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DefaultSelectionModelDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the selected node changes, return false to cancel the change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected node changes, return false to cancel the change" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected node changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DefaultSelectionModelListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before the selected node changes, return false to cancel the change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected node changes, return false to cancel the change" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected node changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DeferredRenderAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Desktop" Extends="Observable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Desktop), &quot;Build.ToolboxIcons.Desktop.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Desktop runat=\&quot;server\&quot;&gt;&lt;/{0}:Desktop&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Modules" Type="DesktopModulesCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ModulesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getModules&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DesktopConfig" Type="DesktopConfig" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;desktopConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartMenu" Type="DesktopStartMenu" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;startConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TaskBar" Type="DesktopTaskBar" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;taskbarConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DesktopListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DesktopDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopConfig" Extends="Panel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ContextMenu" Type="MenuCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutContextMenu" Type="MenuCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowMenu" Type="MenuCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutDefaults" Type="ShortcutDefaults">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortShortcuts" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultWindowMenu" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultWindowMenuItemsFirst" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RestoreText" Type="string" DefaultValue="&quot;Restore&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Restore&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinimizeText" Type="string" DefaultValue="&quot;Minimize&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Minimize&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaximizeText" Type="string" DefaultValue="&quot;Maximize&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Maximize&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseText" Type="string" DefaultValue="&quot;Close&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveWindowCls" Type="string" DefaultValue="&quot;ux-desktop-active-win&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ux-desktop-active-win&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InactiveWindowCls" Type="string" DefaultValue="&quot;ux-desktop-inactive-win&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ux-desktop-inactive-win&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTickSize" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YTickSize" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutItemSelector" Type="string" DefaultValue="&quot;div.ux-desktop-shortcut&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;div.ux-desktop-shortcut&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutTpl" Type="XTemplate" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDShortcut" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddShortcut&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutDragSelector" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutNameEditing" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlignToGrid" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode=AutoGeneratingScript.Simple" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wallpaper" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetWallpaper&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WallpaperStretch" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShortcutMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;module&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xy&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutNameEdit" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;module&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutnameedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ready" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUnload" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShortcutMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;module&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xy&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutNameEdit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;module&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutnameedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ready" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUnload" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopModule" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ModuleID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Window" Type="WindowCollection">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;window&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Launcher" Type="MenuItem" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;launcher&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shortcut" Type="DesktopShortcut" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRun" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRunHandler" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopModuleProxy" Extends="BaseControl">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Module" Type="DesktopModule" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopModulesCollection" Extends="BaseItemCollection&lt;DesktopModule&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DesktopShortcut" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Module" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTitle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;qTitle&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTip" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;qTip&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopShortcuts" Extends="BaseItemCollection&lt;DesktopShortcut&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DesktopStartMenu" Extends="Panel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultAlign" Type="string" DefaultValue="&quot;bl-tl&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopStartMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;bl-tl&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTools" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopStartMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuItems" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopStartMenu&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolConfig" Type="ToolbarCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;toolConfig&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. DesktopStartMenu&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopTaskBar" Extends="Toolbar">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="QuickStart" Type="ToolbarCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;quickStartConfig&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tray" Type="ToolbarCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;trayConfig&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideQuickStart" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTray" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QuickStartWidth" Type="int" DefaultValue="60">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="60" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrayWidth" Type="int" DefaultValue="80">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="80" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrayClock" Type="TrayClock">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;trayClock&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DirectEvent" Extends="ComponentDirectEvent">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventCollection" Extends="BaseItemCollection&lt;DirectEvent&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventConfirmation" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfirmRequest" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true show confirmation dialog]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true show confirmation dialog" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;Confirmation&quot;">
          <Summary><![CDATA[Confirmation dialog title]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;Confirmation&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Confirmation dialog title" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="&quot;Are you sure?&quot;">
          <Summary><![CDATA[Confirmation dialog message]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;Are you sure?&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Confirmation dialog message" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeConfirmProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeConfirm&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;cancel&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DirectEventHandlerJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventsConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventTriplet">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventUpdateAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectMethodProxyIDAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Class, AllowMultiple = false, Inherited = true" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectProxy" Extends="ServerProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="API" Modifier="Override" Type="CRUDUrls">
          <Summary><![CDATA[Specific direct functions to call on CRUD action methods \"read\", \"create\", \"update\" and \"destroy\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;api&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Specific direct functions to call on CRUD action methods \&quot;read\&quot;, \&quot;create\&quot;, \&quot;update\&quot; and \&quot;destroy\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectFn" Type="JFunction">
          <Summary><![CDATA[Function to call when executing a request. directFn is a simple alternative to defining the api configuration-parameter for Store's which will not implement a full CRUD api.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Function to call when executing a request. directFn is a simple alternative to defining the api configuration-parameter for Store's which will not implement a full CRUD api." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamOrder" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Defaults to undefined. A list of params to be executed server side. Specify the params in the order in which they must be executed on the server-side as a String of params delimited by either whitespace, comma, or pipe.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to undefined. A list of params to be executed server side. Specify the params in the order in which they must be executed on the server-side as a String of params delimited by either whitespace, comma, or pipe." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamsAsHash" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Send parameters as a collection of named arguments (defaults to true). Providing a paramOrder nullifies this configuration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Send parameters as a collection of named arguments (defaults to true). Providing a paramOrder nullifies this configuration." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DirectResponse" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Success" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMessage" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Script" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewState" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewStateEncrypted" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventValidation" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ServiceResponse" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParamsResponse" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResultProxy" Access="Protected" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;result&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DisabledDate" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DisabledDateCollection" Extends="BaseItemCollection&lt;DisabledDate&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DisplayField" Extends="Field">
      <Summary><![CDATA[A display-only text field which is not validated and not submitted.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DisplayField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DisplayField), &quot;Build.ToolboxIcons.DisplayField.bmp&quot;" />
        <Attribute Type="Description" RawValue="A display-only text field which is not validated and not submitted." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FieldCls" Modifier="Override" Type="string" DefaultValue="&quot;x-form-display-field&quot;">
          <Summary><![CDATA[The default CSS class for the field (defaults to 'x-form-display-field')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-display-field&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class for the field (defaults to 'x-form-display-field')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to escape HTML in text when rendering it.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHtmlEncode&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to escape HTML in text when rendering it." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="JFunction">
          <Summary><![CDATA[A function to transform the raw value for display in the field. The function will receive 2 arguments, the raw value and the Ext.form.field.Display object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A function to transform the raw value for display in the field. The function will receive 2 arguments, the raw value and the Ext.form.field.Display object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Dom" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DomHelper">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DomObject" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Tag" Type="HtmlTextWriterTag" DefaultValue="HtmlTextWriterTag.Div">
          <Summary><![CDATA[The tag name of the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="HtmlTextWriterTag.Div" />
            <Attribute Type="Description" RawValue="The tag name of the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The class attribute of the element. This will end up being either the \"class\" attribute on a HTML fragment or className for a DOM node, depending on whether DomHelper is using fragments or DOM.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The class attribute of the element. This will end up being either the \&quot;class\&quot; attribute on a HTML fragment or className for a DOM node, depending on whether DomHelper is using fragments or DOM." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The innerHTML for the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The innerHTML for the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Children" Type="DomObjectCollection">
          <Summary><![CDATA[An array of the same kind of element definition objects to be created and appended. These can be nested as deep as you want.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;cn&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of the same kind of element definition objects to be created and appended. These can be nested as deep as you want." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DomObjectCollection" Extends="BaseItemCollection&lt;DomObject&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DragDrop" Abstract="true" Extends="Observable" Inherits="ICustomConfigSerialization">
      <Summary><![CDATA[Defines the interface and base operation of items that that can be dragged or can be drop targets.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Defines the interface and base operation of items that that can be dragged or can be drop targets." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultPadding" Type="Paddings">
          <Summary><![CDATA[Provides default constraint padding to \"constrainTo\" elements (defaults to {left: 0, right:0, top:0, bottom:0}).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;defaultPadding&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="Description" RawValue="Provides default constraint padding to \&quot;constrainTo\&quot; elements (defaults to {left: 0, right:0, top:0, bottom:0})." />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groups" Type="DragDropGroups">
          <Summary><![CDATA[The group defines a logical collection of DragDrop objects that are related. Instances only get events when interacting with other DragDrop object in the same group. This lets us define multiple groups using a single DragDrop subclass if we want.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groups&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Description" RawValue="The group defines a logical collection of DragDrop objects that are related. Instances only get events when interacting with other DragDrop object in the same group. This lets us define multiple groups using a single DragDrop subclass if we want." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HasOuterHandles" Type="bool" DefaultValue="false">
          <Summary><![CDATA[By default, drags can only be initiated if the mousedown occurs in the region the linked element is. This is done in part to work around a bug in some browsers that mis-report the mousedown if the previous mouseup happened outside of the window. This property is set to true if outer handles are defined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, drags can only be initiated if the mousedown occurs in the region the linked element is. This is done in part to work around a bug in some browsers that mis-report the mousedown if the previous mouseup happened outside of the window. This property is set to true if outer handles are defined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the element associated with this object. This is what we refer to as the \"linked element\" because the size and position of this element is used to determine when the drag and drop objects have interacted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the element associated with this object. This is what we refer to as the \&quot;linked element\&quot; because the size and position of this element is used to determine when the drag and drop objects have interacted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Group" Type="string" DefaultValue="&quot;default&quot;">
          <Summary><![CDATA[The group of related DragDrop objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;default&quot;" />
            <Attribute Type="Description" RawValue="The group of related DragDrop objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreSelf" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to enable a DragDrop object to fire drag events while dragging over its own Element. Defaults to true - DragDrop objects do not by default fire drag events to themselves.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to enable a DragDrop object to fire drag events while dragging over its own Element. Defaults to true - DragDrop objects do not by default fire drag events to themselves." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleClasses" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An Array of CSS class names for elements to be considered in valid as drag handles.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An Array of CSS class names for elements to be considered in valid as drag handles." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleTypes" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array who's items identify HTML tags to be considered invalid as drag handles.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array who's items identify HTML tags to be considered invalid as drag handles." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleTypesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;invalidHandleTypes&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleIds" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array who's items identify the IDs of elements to be considered invalid as drag handles]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array who's items identify the IDs of elements to be considered invalid as drag handles" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleIdsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;invalidHandleIds&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsTarget" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default, all instances can be a drop target. This can be disabled by setting isTarget to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, all instances can be a drop target. This can be disabled by setting isTarget to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaintainOffset" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Maintain offsets when we resetconstraints. Set to true when you want the position of the element relative to its parent to stay the same when the page changes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Maintain offsets when we resetconstraints. Set to true when you want the position of the element relative to its parent to stay the same when the page changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[When set to true, other DD objects in cooperating DDGroups do not receive notification events when this DD object is dragged over them. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When set to true, other DD objects in cooperating DDGroups do not receive notification events when this DD object is dragged over them. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[The padding configured for this drag and drop object for calculating the drop zone intersection with this object. An array containing the 4 padding values: [top, right, bottom, left]]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The padding configured for this drag and drop object for calculating the drop zone intersection with this object. An array containing the 4 padding values: [top, right, bottom, left]" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrimaryButtonOnly" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default the drag and drop instance will only respond to the primary button click (left button for a right-handed mouse). Set to true to allow drag and drop to start with any mouse click that is propogated by the browser]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default the drag and drop instance will only respond to the primary button click (left button for a right-handed mouse). Set to true to allow drag and drop to start with any mouse click that is propogated by the browser" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTicks" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[Array of pixel locations the element will snap to if we specified a horizontal graduation/interval. This array is generated automatically when you define a tick interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of pixel locations the element will snap to if we specified a horizontal graduation/interval. This array is generated automatically when you define a tick interval." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YTicks" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[Array of pixel locations the element will snap to if we specified a vertical graduation/interval. This array is generated automatically when you define a tick interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of pixel locations the element will snap to if we specified a vertical graduation/interval. This array is generated automatically when you define a tick interval." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetDragEl" Type="JFunction">
          <Summary><![CDATA[Returns a reference to the actual element to drag. By default this is the same as the html element, but it can be assigned to another element. An example of this can be found in Ext.dd.DDProxy]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns a reference to the actual element to drag. By default this is the same as the html element, but it can be assigned to another element. An example of this can be found in Ext.dd.DDProxy" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndDrag" Type="JFunction">
          <Summary><![CDATA[Fired when we are done dragging the object]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Fired when we are done dragging the object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnAvailable" Type="JFunction">
          <Summary><![CDATA[Override the onAvailable method to do what is needed after the initial position was determined.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override the onAvailable method to do what is needed after the initial position was determined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDrag" Type="JFunction">
          <Summary><![CDATA[Abstract method called during the onMouseMove event while dragging an object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called during the onMouseMove event while dragging an object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragDrop" Type="JFunction">
          <Summary><![CDATA[Abstract method called when this item is dropped on another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this item is dropped on another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragEnter" Type="JFunction">
          <Summary><![CDATA[Abstract method called when this element fist begins hovering over another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this element fist begins hovering over another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragOut" Type="JFunction">
          <Summary><![CDATA[Abstract method called when we are no longer hovering over an element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when we are no longer hovering over an element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragOver" Type="JFunction">
          <Summary><![CDATA[Abstract method called when this element is hovering over another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this element is hovering over another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnInvalidDrop" Type="JFunction">
          <Summary><![CDATA[Abstract method called when this item is dropped on an area with no drop target]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this item is dropped on an area with no drop target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnMouseDown" Type="JFunction">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mousedown]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mousedown" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnMouseUp" Type="JFunction">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mouseup]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mouseup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDrag" Type="JFunction">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mouseup]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mouseup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4Drag" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the onDrag event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the onDrag event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4DragDrop" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the onDragDrop event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the onDragDrop event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4DragOut" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the onDragOut event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the onDragOut event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4DragOver" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the onDragOver event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the onDragOver event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4EndDrag" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the endDrag event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the endDrag event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4MouseDown" Type="JFunction">
          <Summary><![CDATA[Code executed immediately before the onMouseDown event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code executed immediately before the onMouseDown event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="B4StartDrag" Type="JFunction">
          <Summary><![CDATA[Code that executes immediately before the startDrag event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Code that executes immediately before the startDrag event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragDropGroup" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Allow" Type="bool">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragDropGroups" Extends="BaseItemCollection&lt;DragDropGroup&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DragSource" Extends="DDProxy">
      <Summary><![CDATA[A simple class that provides the basic implementation needed to make any element draggable.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DragSource runat=\&quot;server\&quot;&gt;&lt;/{0}:DragSource&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragSource), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A simple class that provides the basic implementation needed to make any element draggable." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Group" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragData" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragDataProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dragData&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimRepair" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, animates the proxy element back to the position of the handle element used to trigger the drag. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, animates the proxy element back to the position of the handle element used to trigger the drag. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropAllowed" Type="string" DefaultValue="&quot;x-dd-drop-ok&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is allowed (defaults to \"x-dd-drop-ok\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-ok&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is allowed (defaults to \&quot;x-dd-drop-ok\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropNotAllowed" Type="string" DefaultValue="&quot;x-dd-drop-nodrop&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is not allowed (defaults to \"x-dd-drop-nodrop\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-nodrop&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is not allowed (defaults to \&quot;x-dd-drop-nodrop\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RepairHighlightColor" Type="string" DefaultValue="&quot;c3daf9&quot;">
          <Summary><![CDATA[The color to use when visually highlighting the drag source in the afterRepair method after a failed drop (defaults to light blue). The color must be a 6 digit hex value, without a preceding '#'. Defaults to: \"c3daf9\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;c3daf9&quot;" />
            <Attribute Type="Description" RawValue="The color to use when visually highlighting the drag source in the afterRepair method after a failed drop (defaults to light blue). The color must be a 6 digit hex value, without a preceding '#'. Defaults to: \&quot;c3daf9\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragDrop" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after a valid drag drop has occurred by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after a valid drag drop has occurred by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragEnter" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action when the dragged item enters the drop target by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action when the dragged item enters the drop target by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragOut" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after the dragged item is dragged out of the target without dropping.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after the dragged item is dragged out of the target without dropping." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragOver" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterInvalidDrop" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterValidDrop" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragDrop" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item is dropped onto the target and optionally cancel the onDragDrop.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item is dropped onto the target and optionally cancel the onDragDrop." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragEnter" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item enters the drop target and optionally cancel the onDragEnter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item enters the drop target and optionally cancel the onDragEnter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOut" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item is dragged out of the target without dropping, and optionally cancel the onDragOut.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item is dragged out of the target without dropping, and optionally cancel the onDragOut." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target and optionally cancel the onDragOver.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target and optionally cancel the onDragOver." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInvalidDrop" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnBeforeDrag" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the initial drag event begins and optionally cancel it.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the initial drag event begins and optionally cancel it." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStartDrag" Type="JFunction">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action once the initial drag event has begun. The drag cannot be canceled from this function.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action once the initial drag event has begun. The drag cannot be canceled from this function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetDragData" Type="JFunction">
          <Summary><![CDATA[Returns the data object associated with this drag source.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the data object associated with this drag source." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTracker" Extends="Observable">
      <Attributes>
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragSource), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TrackOver" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to fire mouseover and mouseout events when the mouse enters or leaves the target element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Set to true to fire mouseover and mouseout events when the mouse enters or leaves the target element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tolerance" Type="int" DefaultValue="5">
          <Summary><![CDATA[Number of pixels the drag target must be moved before dragging is considered to have started. Defaults to 5.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Number of pixels the drag target must be moved before dragging is considered to have started. Defaults to 5." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoStart" Type="int" DefaultValue="0">
          <Summary><![CDATA[Defaults to 0. Specify a Number for the number of milliseconds to defer trigger start.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Defaults to 0. Specify a Number for the number of milliseconds to defer trigger start." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProxyCls" Type="string" DefaultValue="&quot;x-view-selector&quot;">
          <Summary><![CDATA[Proxy class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-view-selector&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Proxy class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to add to the DragTracker's target element when the element (or, if the delegate option is used, when a delegate element) is mouseovered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="A CSS class to add to the DragTracker's target element when the element (or, if the delegate option is used, when a delegate element) is mouseovered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A Region (Or an element from which a Region measurement will be read) which is used to constrain the result of the getOffset call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="A Region (Or an element from which a Region measurement will be read) which is used to constrain the result of the getOffset call." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A DomQuery selector which identifies child elements within the DragTracker's encapsulating Element which are the tracked elements. This limits tracking to only begin when the matching elements are mousedowned.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="A DomQuery selector which identifies child elements within the DragTracker's encapsulating Element which are the tracked elements. This limits tracking to only begin when the matching elements are mousedowned." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specify false to enable default actions on onMouseDown events. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify false to enable default actions on onMouseDown events. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify true to stop the mousedown event from bubbling to outer listeners from the target element (or its delegates). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify true to stop the mousedown event from bubbling to outer listeners from the target element (or its delegates). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Selection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true. If false then no selection tracker]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true. If false then no selection tracker" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[ID of the element that is linked to this instance]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;" />
            <Attribute Type="Description" RawValue="ID of the element that is linked to this instance" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnBeforeStart" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStart" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDrag" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnEnd" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DragTrackerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DragTrackerDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTrackerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeStart" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;, typeof(object), &quot;The element mouseovered.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTrackerListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeStart" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;, typeof(object), &quot;The element mouseovered.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragZone" Extends="DragSource">
      <Summary><![CDATA[This class provides a container DD instance that allows dragging of multiple child source nodes.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DragZone runat=\&quot;server\&quot;&gt;&lt;/{0}:DragZone&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragZone), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class provides a container DD instance that allows dragging of multiple child source nodes." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ContainerScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to register this container with the Scrollmanager for auto scrolling during drag operations.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. DragZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to register this container with the Scrollmanager for auto scrolling during drag operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRepair" Type="JFunction">
          <Summary><![CDATA[Called after a repair of an invalid drop. By default, highlights this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called after a repair of an invalid drop. By default, highlights this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetRepairXY" Type="JFunction">
          <Summary><![CDATA[Called before a repair of an invalid drop to get the XY to animate to. By default returns the XY of this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called before a repair of an invalid drop to get the XY to animate to. By default returns the XY of this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnInitDrag" Type="JFunction">
          <Summary><![CDATA[Called once drag threshold has been reached to initialize the proxy element. By default, it clones the this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called once drag threshold has been reached to initialize the proxy element. By default, it clones the this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DrawBackground" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Fill" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The fill color]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The fill color" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Image" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The background image]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The background image" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Gradient" Type="Gradient" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DrawComponent" Extends="AbstractDrawComponent">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DrawComponent runat=\&quot;server\&quot;&gt;&lt;/{0}:DrawComponent&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DrawComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DrawComponentDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DrawComponentDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DrawComponentListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DrawText" Extends="DrawComponent">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DrawText runat=\&quot;server\&quot;&gt;&lt;/{0}:DrawText&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turn on autoSize support which will set the bounding div's size to the natural size of the contents. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DrawText&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Turn on autoSize support which will set the bounding div's size to the natural size of the contents. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Degrees" Type="int" DefaultValue="0">
          <Summary><![CDATA[The angle by which to initially rotate the text clockwise. Defaults to zero.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAngle&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. DrawText&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The angle by which to initially rotate the text clockwise. Defaults to zero." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StyleSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS selector string which matches a style rule in the document stylesheet from which the text's font properties are read.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DrawText&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS selector string which matches a style rule in the document stylesheet from which the text's font properties are read." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display (html tags are not accepted)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. DrawText&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to display (html tags are not accepted)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextStyle" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownField" Extends="DropDownFieldBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TriggerField), &quot;Build.ToolboxIcons.TriggerField.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PickerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PickerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownFieldBase" Abstract="true" Extends="PickerField">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ValueHiddenName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnderlyingValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying value which mapping on the Text, similar the Value property but can be set declarative]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The underlying value which mapping on the Text, similar the Value property but can be set declarative" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="DropDownMode" DefaultValue="DropDownMode.Text">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="DropDownMode.Text" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to hide the component when the field is blurred. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the component when the field is blurred. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;AbstractPanel&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentRenderTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the node, a DOM node or an existing Element that will be the content Container to render this component into.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the node, a DOM node or an existing Element that will be the content Container to render this component into." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncValue" Type="JFunction">
          <Summary><![CDATA[Function to syncronize value of the field and dropdown control]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Function to syncronize value of the field and dropdown control" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropTarget" Extends="DDTarget">
      <Summary><![CDATA[A simple class that provides the basic implementation needed to make any element a drop target that can have draggable items dropped onto it. The drop has no effect until an implementation of notifyDrop is provided.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DropTarget runat=\&quot;server\&quot;&gt;&lt;/{0}:DropTarget&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DropTarget), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A simple class that provides the basic implementation needed to make any element a drop target that can have draggable items dropped onto it. The drop has no effect until an implementation of notifyDrop is provided." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Group" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropAllowed" Type="string" DefaultValue="&quot;x-dd-drop-ok&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is allowed (defaults to \"x-dd-drop-ok\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-ok&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is allowed (defaults to \&quot;x-dd-drop-ok\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropNotAllowed" Type="string" DefaultValue="&quot;x-dd-drop-nodrop&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is not allowed (defaults to \"x-dd-drop-nodrop\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-nodrop&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is not allowed (defaults to \&quot;x-dd-drop-nodrop\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class applied to the drop target element while the drag source is over it (defaults to \"\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to the drop target element while the drag source is over it (defaults to \&quot;\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to register this container with the Scrollmanager for auto scrolling during drag operations.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to register this container with the Scrollmanager for auto scrolling during drag operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyDrop" Type="JFunction">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the dragged item has been dropped on it. This method has no default implementation and returns false, so you must provide an implementation that does something to process the drop event and returns true so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the dragged item has been dropped on it. This method has no default implementation and returns false, so you must provide an implementation that does something to process the drop event and returns true so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyEnter" Type="JFunction">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the source is now over the target. This default implementation adds the CSS class specified by overClass (if any) to the drop element and returns the dropAllowed config value. This method should be overridden if drop validation is required.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the source is now over the target. This default implementation adds the CSS class specified by overClass (if any) to the drop element and returns the dropAllowed config value. This method should be overridden if drop validation is required." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyOut" Type="JFunction">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the source has been dragged out of the target without dropping. This default implementation simply removes the CSS class specified by overClass (if any) from the drop element.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the source has been dragged out of the target without dropping. This default implementation simply removes the CSS class specified by overClass (if any) from the drop element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyOver" Type="JFunction">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls continuously while it is being dragged over the target. This method will be called on every mouse movement while the drag source is over the drop target. This default implementation simply returns the dropAllowed config value.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls continuously while it is being dragged over the target. This method will be called on every mouse movement while the drag source is over the drop target. This default implementation simply returns the dropAllowed config value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropZone" Extends="DropTarget">
      <Summary><![CDATA[This class provides a container DD instance that allows dropping on multiple child target nodes.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DropZone runat=\&quot;server\&quot;&gt;&lt;/{0}:DropZone&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DropZone), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class provides a container DD instance that allows dropping on multiple child target nodes." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetTargetFromEvent" Type="JFunction">
          <Summary><![CDATA[Returns a custom data object associated with the DOM node that is the target of the event. By default this looks up the event target in the Ext.dd.Registry, although you can override this method to provide your own custom lookup.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns a custom data object associated with the DOM node that is the target of the event. By default this looks up the event target in the Ext.dd.Registry, although you can override this method to provide your own custom lookup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnContainerDrop" Type="JFunction">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dropped on it, but not on any of its registered drop nodes. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event if you need the drop zone itself to be able to accept drops. It should return true when valid so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dropped on it, but not on any of its registered drop nodes. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event if you need the drop zone itself to be able to accept drops. It should return true when valid so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnContainerOver" Type="JFunction">
          <Summary><![CDATA[Called while the DropZone determines that a Ext.dd.DragSource is being dragged over it, but not over any of its registered drop nodes. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called while the DropZone determines that a Ext.dd.DragSource is being dragged over it, but not over any of its registered drop nodes. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeDrop" Type="JFunction">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dropped onto the drop node. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event and return true so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dropped onto the drop node. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event and return true so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeEnter" Type="JFunction">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has entered a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. This method has no default implementation and should be overridden to provide node-specific processing if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has entered a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. This method has no default implementation and should be overridden to provide node-specific processing if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeOut" Type="JFunction">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dragged out of the drop node without dropping. This method has no default implementation and should be overridden to provide node-specific processing if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dragged out of the drop node without dropping. This method has no default implementation and should be overridden to provide node-specific processing if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeOver" Type="JFunction">
          <Summary><![CDATA[Called while the DropZone determines that a Ext.dd.DragSource is over a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called while the DropZone determines that a Ext.dd.DragSource is over a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DynamicConfigDictionary" Extends="DynamicObject">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Editor" Extends="AbstractContainer">
      <Summary><![CDATA[The Editor class is used to provide inline editing for elements on the page. The editor is backed by a Ext.form.field.Field that will be displayed to edit the underlying content. The editor is a floating Component, when the editor is shown it is automatically aligned to display over the top of the bound element it is editing.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Editor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Editor), &quot;Build.ToolboxIcons.Editor.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="The Editor class is used to provide inline editing for elements on the page. The editor is backed by a Ext.form.field.Field that will be displayed to edit the underlying content. The editor is a floating Component, when the editor is shown it is automatically aligned to display over the top of the bound element it is editing." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActivateEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Summary><![CDATA[Event name for activate the editor]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Event name for activate the editor" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alignment" Type="string" DefaultValue="&quot;c-c?&quot;">
          <Summary><![CDATA[The position to align to (see Ext.Element.alignTo for more details, defaults to \"c-c?\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;c-c?&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The position to align to (see Ext.Element.alignTo for more details, defaults to \&quot;c-c?\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlignmentConfig" Type="EditorAlignmentConfig" DefaultValue="null">
          <Summary><![CDATA[The position to align to (see Ext.Element.alignTo for more details, defaults to \"c-c?\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;alignment&quot;, JsonMode.ToString" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The position to align to (see Ext.Element.alignTo for more details, defaults to \&quot;c-c?\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSize" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSizeConfig" Type="EditorAutoSize" DefaultValue="null">
          <Summary><![CDATA[True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;autoSize&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="True for the editor to automatically adopt the size of the underlying field. Otherwise, an object can be passed to indicate where to get each dimension. The available properties are 'boundEl' and 'field'. If a dimension is not specified, it will use the underlying height/width specified on the editor object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete the editing process if in edit mode when the field is blurred. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete the editing process if in edit mode when the field is blurred. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to cancel the edit when the blur event is fired (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the blur event is fired (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnEsc" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to cancel the edit when the escape key is pressed. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the escape key is pressed. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CompleteOnEnter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete the edit when the enter key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete the edit when the enter key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain the editor to the viewport. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to constrain the editor to the viewport. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEl" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to keep the bound element visible while the editor is displayed. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to keep the bound element visible while the editor is displayed. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Field" Type="ItemsCollection&lt;Field&gt;">
          <Summary><![CDATA[The Field object (or descendant)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;field&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Field object (or descendant)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldDefault" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;field&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreNoChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed. Applies only to string values - edits for other data types will never be ignored. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed. Applies only to string values - edits for other data types will never be ignored. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Offsets" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[The offsets to use when aligning. Defaults to [0, 0].]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The offsets to use when aligning. Defaults to [0, 0]." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParentElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An element to render to. Defaults to the document.body.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;parentEl&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An element to render to. Defaults to the document.body." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RevertInvalid" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShadowMode" Modifier="Override" Type="ShadowMode" DefaultValue="ShadowMode.Frame">
          <Summary><![CDATA[\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"frame\")]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;shadow&quot;, typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Frame" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="\&quot;sides\&quot; for sides/bottom only, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;frame\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowKeys" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Handle the keydown/keypress events so they don't propagate (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown/keypress events so they don't propagate (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateEl" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to update the innerHTML of the bound element when the update completes (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to update the innerHTML of the bound element when the update completes (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data value of the underlying field (defaults to \"\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The data value of the underlying field (defaults to \&quot;\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsSeparate" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetControl" Type="Control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target id to associate with this tooltip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target id to associate with this tooltip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseHtml" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to use innerHTML of bound element, otherwise innerText will be used]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to use innerHTML of bound element, otherwise innerText will be used" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode value before start editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to encode value before start editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlDecode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to decode value after editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to decode value after editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="InlineEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="InlineEditorDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CancelEdit" ParamsRaw="bool remainVisible">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CancelEdit">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CompleteEdit" ParamsRaw="bool remainVisible">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CompleteEdit">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Realign">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Realign" ParamsRaw="bool autoSize">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartEdit" ParamsRaw="string el, string value">
          <Summary><![CDATA[Starts the editing process and shows the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Starts the editing process and shows the editor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartEdit" ParamsRaw="string el">
          <Summary><![CDATA[Starts the editing process and shows the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Starts the editing process and shows the editor." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="EditorAlignmentConfig" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EditorAutoSize" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Width" Type="EditorAutoSizeDimension" DefaultValue="EditorAutoSizeDimension.None">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="DefaultValue" RawValue="EditorAutoSizeDimension.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="EditorAutoSizeDimension" DefaultValue="EditorAutoSizeDimension.None">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="DefaultValue" RawValue="EditorAutoSizeDimension.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EditorCollection" Extends="ItemsCollection&lt;Field&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="Field">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EditorDirectEvents" Extends="HtmlEditorDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EditorListeners" Extends="HtmlEditorListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Element" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ElementFxConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Callback" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A function called when the effect is finished. Note that effects are queued internally by the Fx class, so do not need to use the callback parameter to specify another effect -- effects can simply be chained together and called in sequence (e.g., el.slideIn().highlight();). The callback is intended for any additional code that should run once a particular effect has completed. The Element being operated upon is passed as the first parameter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A function called when the effect is finished. Note that effects are queued internally by the Fx class, so do not need to use the callback parameter to specify another effect -- effects can simply be chained together and called in sequence (e.g., el.slideIn().highlight();). The callback is intended for any additional code that should run once a particular effect has completed. The Element being operated upon is passed as the first parameter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[The length of time (in seconds) that the effect should last]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="The length of time (in seconds) that the effect should last" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.EaseOut">
          <Summary><![CDATA[A valid Easing value for the effect]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="DefaultValue" RawValue="Easing.EaseOut" />
            <Attribute Type="Description" RawValue="A valid Easing value for the effect" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope of the effect function]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="Description" RawValue="The scope of the effect function" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ElementListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DOMActivate" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMActivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMAttrModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMAttrModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMCharacterDataModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMCharacterDataModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMFocusIn" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMFocusIn&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMFocusOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMFocusOut&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeInserted" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeInserted&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeInsertedIntoDocument" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeInsertedIntoDocument&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeRemoved" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeRemoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeRemovedFromDocument" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeRemovedFromDocument&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMSubtreeModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMSubtreeModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Abort" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;abort&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Blur" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Error" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;error&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reset" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reset&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scroll" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unload" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EnumJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventDetails" Extends="EventDetailsBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="EventDetailsListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="EventDetailsDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventDetailsBase" Abstract="true" Extends="FormPanelBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Modifier="Override" Type="string" DefaultValue="&quot;Event Form&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTitle&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Event Form&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleTextAdd" Type="string" DefaultValue="&quot;Add Event&quot;">
          <Summary><![CDATA[The title during event adding]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Add Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event adding" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleTextEdit" Type="string" DefaultValue="&quot;Edit Event&quot;">
          <Summary><![CDATA[The title during event editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Edit Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonAlign" Modifier="Override" Type="Alignment" DefaultValue="Alignment.Center">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Center" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHeight" Modifier="Override" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalendarStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The calendar store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. EventDetails&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The calendar store ID to use." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventDetailsDirectEvents" Extends="FormPanelDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventDetailsListeners" Extends="FormPanelListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventMappingsContractResolver" Extends="DefaultContractResolver">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventMask" Extends="LoadMask">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Msg" Modifier="Override" Type="string" DefaultValue="&quot;Working...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Working...&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="MaskTarget" DefaultValue="MaskTarget.Page">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="MaskTarget.Page" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomTarget" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDelay" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventModel">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventModelCollection" Extends="List&lt;EventModel&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventStore" Extends="Store">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MemoryProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Events" Type="EventModelCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoMappings" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mappings" Type="ModelFieldCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventWindow" Extends="EventWindowBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="EventWindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="EventWindowDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventWindowBase" Abstract="true" Extends="AbstractWindow">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TitleTextAdd" Type="string" DefaultValue="&quot;Add Event&quot;">
          <Summary><![CDATA[The title during event adding]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Add Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event adding" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleTextEdit" Type="string" DefaultValue="&quot;Edit Event&quot;">
          <Summary><![CDATA[The title during event editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Edit Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;600&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;600&quot;" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeletingMessage" Type="string" DefaultValue="&quot;Deleting event...&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Deleting event...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SavingMessage" Type="string" DefaultValue="&quot;Saving changes...&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Saving changes...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow user resizing at each edge and corner of the window, false to disable resizing (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to allow user resizing at each edge and corner of the window, false to disable resizing (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonAlign" Modifier="Override" Type="Alignment" DefaultValue="Alignment.Left">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. EventEditForm&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalendarStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The calendar store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;8. EventWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The calendar store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventWindowDirectEvents" Extends="WindowDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditDetails" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The record that is currently being edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editdetails&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventWindowListeners" Extends="WindowListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditDetails" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The record that is currently being edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The target element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editdetails&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ExcessItemsException" Extends="Exception">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ExclusionValidation" Extends="AbstractValidation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="List" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of options]]></Summary>
          <Attributes>
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Array" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of options" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ExtJsonConverter" Abstract="true" Extends="JsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FadeIn" Extends="Fx">
      <Summary><![CDATA[Fade an element in (from transparent to opaque). The ending opacity can be specified using the 'endOpacity' config option. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fade an element in (from transparent to opaque). The ending opacity can be specified using the 'endOpacity' config option. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeInConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EndOpacity" Type="float" DefaultValue="1">
          <Summary><![CDATA[The ending opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="The ending opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeOut" Extends="Fx">
      <Summary><![CDATA[Fade an element out (from opaque to transparent). The ending opacity can be specified using the 'endOpacit' config option. Note that IE may require useDisplay:true in order to redisplay correctly. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fade an element out (from opaque to transparent). The ending opacity can be specified using the 'endOpacit' config option. Note that IE may require useDisplay:true in order to redisplay correctly. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeOutConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EndOpacity" Type="float" DefaultValue="0">
          <Summary><![CDATA[The ending opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The ending opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Field" Abstract="true" Extends="ComponentBase" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,IToolbarItem,IField,IIcon,IAjaxPostBackEventHandler,INoneContentable">
      <Summary><![CDATA[Base Class for Form Fields that provides default event handling, sizing, value handling and other functionality.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for Form Fields that provides default event handling, sizing, value handling and other functionality." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[TextBox_AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="TextBox_AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;change&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;change&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveError" Type="string" DefaultValue="null">
          <Summary><![CDATA[If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveError&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveErrorsTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeErrorsTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFitErrors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseBodyCls" Type="string" DefaultValue="&quot;x-form-item-body&quot;">
          <Summary><![CDATA[The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item-body&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChangeBuffer" Type="int" DefaultValue="50">
          <Summary><![CDATA[Defines a timeout in milliseconds for buffering checkChangeEvents that fire in rapid succession. Defaults to 50 milliseconds.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="Description" RawValue="Defines a timeout in milliseconds for buffering checkChangeEvents that fire in rapid succession. Defaults to 50 milliseconds." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChangeEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[A list of event names that will be listened for on the field's input element, which will cause the field's value to be checked for changes. If a change is detected, the change event will be fired, followed by validation if the validateOnChange option is enabled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A list of event names that will be listened for on the field's input element, which will cause the field's value to be checked for changes. If a change is detected, the change event will be fired, followed by validation if the validateOnChange option is enabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearCls" Type="string" DefaultValue="&quot;x-clear&quot;">
          <Summary><![CDATA[The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-clear').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-clear&quot;" />
            <Attribute Type="Description" RawValue="The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-clear')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyCls" Type="string" DefaultValue="&quot;x-form-dirty&quot;">
          <Summary><![CDATA[The CSS class to use when the field value is dirty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-dirty&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the field value is dirty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMsgCls" Type="string" DefaultValue="&quot;x-form-error-msg&quot;">
          <Summary><![CDATA[The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-error-msg&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldBodyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An extra CSS class to be applied to the body content element in addition to baseBodyCls. Defaults to empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An extra CSS class to be applied to the body content element in addition to baseBodyCls. Defaults to empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class for the field input (defaults to 'x-form-field').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The default CSS class for the field input (defaults to 'x-form-field')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional CSS style(s) to be applied to the field input element. Should be a valid argument to Ext.Element.applyStyles. Defaults to undefined. See also the setFieldStyle method for changing the style after initialization.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldStyle&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional CSS style(s) to be applied to the field input element. Should be a valid argument to Ext.Element.applyStyles. Defaults to undefined. See also the setFieldStyle method for changing the style after initialization." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldSubTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[The content of the field body is defined by this config option.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldSubTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The content of the field body is defined by this config option." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusCls" Type="string" DefaultValue="&quot;x-form-focus&quot;">
          <Summary><![CDATA[The CSS class to use when the field receives focus (defaults to 'x-form-focus')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-focus&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the field receives focus (defaults to 'x-form-focus')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormItemCls" Type="string" DefaultValue="&quot;x-form-item&quot;">
          <Summary><![CDATA[A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEmptyLabel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[ When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue=" When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabel" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id that will be given to the generated input DOM element. Defaults to an automatically generated id. If you configure this manually, you must make sure it is unique in the document.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;inputId&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id that will be given to the generated input DOM element. Defaults to an automatically generated id. If you configure this manually, you must make sure it is unique in the document." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputType" Type="InputType" DefaultValue="InputType.Text">
          <Summary><![CDATA[The type attribute for input fields.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="InputType.Text" />
            <Attribute Type="Description" RawValue="The type attribute for input fields." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidCls" Type="string" DefaultValue="&quot;x-form-invalid&quot;">
          <Summary><![CDATA[The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-invalid&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelAlign" Type="LabelAlign" DefaultValue="LabelAlign.Left">
          <Summary><![CDATA[Controls the position and alignment of the fieldLabel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="LabelAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Controls the position and alignment of the fieldLabel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to be applied to the label element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;labelClsExtra&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the label element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelPad" Type="int" DefaultValue="5">
          <Summary><![CDATA[The amount of space in pixels between the fieldLabel and the input field. Defaults to 5.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount of space in pixels between the fieldLabel and the input field. Defaults to 5." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSeparator" Type="string" DefaultValue="&quot;:&quot;">
          <Summary><![CDATA[Character(s) to be inserted at the end of the label text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;:&quot;" />
            <Attribute Type="Description" RawValue="Character(s) to be inserted at the end of the label text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS style specification string to apply directly to this field's label. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS style specification string to apply directly to this field's label. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \"left\" or \"right\". Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \&quot;left\&quot; or \&quot;right\&quot;. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTarget" Type="MessageTarget" DefaultValue="MessageTarget.Qtip">
          <Summary><![CDATA[The location where the error message text should display.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(MessageTarget)" />
            <Attribute Type="DefaultValue" RawValue="MessageTarget.Qtip" />
            <Attribute Type="Description" RawValue="The location where the error message text should display." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTargetElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Add the error message directly to the innerHTML of the specified element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;msgTarget&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Add the error message directly to the innerHTML of the specified element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field's HTML name attribute (defaults to ''). Note: this property must be set if this field is to be automatically included with form submit().]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field's HTML name attribute (defaults to ''). Note: this property must be set if this field is to be automatically included with form submit()." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventMark" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to disable displaying any error message set on this object. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to disable displaying any error message set on this object. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to mark the field as readOnly in HTML (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetReadOnly&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to mark the field as readOnly in HTML (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnlyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class applied to the component's main element when it is readOnly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to the component's main element when it is readOnly." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitValue" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Setting this to false will prevent the field from being submitted even when it is not disabled. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Setting this to false will prevent the field from being submitted even when it is not disabled. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabIndex" Modifier="Override" Type="short" DefaultValue="(short)0">
          <Summary><![CDATA[The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="(short)0" />
            <Attribute Type="Description" RawValue="The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateOnBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the field should validate when it loses focus (defaults to true). This will cause fields to be validated as the user steps through the fields in the form regardless of whether they are making changes to those fields along the way. See also validateOnChange.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the field should validate when it loses focus (defaults to true). This will cause fields to be validated as the user steps through the fields in the form regardless of whether they are making changes to those fields along the way. See also validateOnChange." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateOnChange" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether this field should be validated immediately whenever a change in its value is detected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether this field should be validated immediately whenever a change in its value is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputAttrTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[ An optional string to insert in the field markup inside the input element (as attributes).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;inputAttrTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue=" An optional string to insert in the field markup inside the input element (as attributes)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLabelTextTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the label text. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterLabelTextTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the label text. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLabelTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the label text. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterLabelTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the label text. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterSubTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the subTpl markup. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterSubTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the subTpl markup. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLabelTextTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the label text. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeLabelTextTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the label text. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLabelTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the label element. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeLabelTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the label element. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSubTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the subTpl markup. If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeSubTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the subTpl markup. If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelAttrTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup inside the label element (as attributes). If an XTemplate is used, the component's render data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;labelAttrTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup inside the label element (as attributes). If an XTemplate is used, the component's render data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelClsExtra" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional string of one or more additional CSS classes to add to the label element. Defaults to empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional string of one or more additional CSS classes to add to the label element. Defaults to empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveIndicatorIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Preserve indicator icon place. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Preserve indicator icon place. Defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorText&quot;" />
            <Attribute Type="Description" RawValue="The indicator text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator icon class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator icon class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIcon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;indicatorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator tip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorTip&quot;" />
            <Attribute Type="Description" RawValue="The indicator tip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Note" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNote&quot;" />
            <Attribute Type="Description" RawValue="The note." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNoteCls&quot;" />
            <Attribute Type="Description" RawValue="The note css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteAlign" Type="NoteAlign" DefaultValue="NoteAlign.Down">
          <Summary><![CDATA[Note align]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="NoteAlign.Down" />
            <Attribute Type="Description" RawValue="Note align" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode note text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to encode note text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetFieldLabel" Type="JFunction">
          <Summary><![CDATA[Returns the label for the field. Defaults to simply returning the fieldLabel config. Can be overridden to provide]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the label for the field. Defaults to simply returning the fieldLabel config. Can be overridden to provide" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetModelData" Type="JFunction">
          <Summary><![CDATA[Returns the value(s) that should be saved to the Ext.data.Model instance for this field, when Ext.form.Basic.updateRecord is called.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the value(s) that should be saved to the Ext.data.Model instance for this field, when Ext.form.Basic.updateRecord is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetSubmitData" Type="JFunction">
          <Summary><![CDATA[Returns the parameter(s) that would be included in a standard form submit for this field.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the parameter(s) that would be included in a standard form submit for this field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetErrors" Type="JFunction">
          <Summary><![CDATA[Runs this field's validators and returns an array of error messages for any validation failures.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Runs this field's validators and returns an array of error messages for any validation failures." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="object" DefaultValue="null">
          <Summary><![CDATA[A value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RawValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[The raw data value which may or may not be a valid, defined value. To return a normalized value see Value property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetRawValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The raw data value which may or may not be a valid, defined value. To return a normalized value see Value property." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsRemoteValidation" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidation" Type="RemoteValidationDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteValidationOptions&quot;, JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Summary><![CDATA[Clears the Field value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the Field value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CheckChange">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CheckDirty">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearInvalid">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid" ParamsRaw="string error">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid" ParamsRaw="string[] errors">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ResetOriginalValue">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetFieldStyle" ParamsRaw="string style">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveError" ParamsRaw="string msg">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UnsetActiveError">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveErrors" ParamsRaw="string[] errors">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetRawValue" ParamsRaw="object value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetNote" ParamsRaw="string note, bool encode">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkAsValid">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkAsValid" ParamsRaw="bool abortRequest">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetFieldLabel" ParamsRaw="string label">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="FieldContainer" Extends="FieldContainerBase">
      <Summary><![CDATA[FieldContainer is a derivation of Container that implements the Labelable mixin.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FieldContainer runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:FieldContainer&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FieldContainer), &quot;Build.ToolboxIcons.Container.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="FieldContainer is a derivation of Container that implements the Labelable mixin." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="FieldContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldContainerBase" Abstract="true" Extends="AbstractContainer" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CombineErrors" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, the field container will automatically combine and display the validation errors from all the fields it contains as a single error on the container, according to the configured msgTarget. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FieldContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, the field container will automatically combine and display the validation errors from all the fields it contains as a single error on the container, according to the configured msgTarget. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CombineLabels" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, and there is no defined fieldLabel, the field container will automatically generate its label by combining the labels of all the fields it contains. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FieldContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, and there is no defined fieldLabel, the field container will automatically generate its label by combining the labels of all the fields it contains. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelConnector" Type="string" DefaultValue="&quot;, &quot;">
          <Summary><![CDATA[The string to use when joining the labels of individual sub-fields, when combineLabels is set to true. Defaults to ', '.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FieldContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;, &quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string to use when joining the labels of individual sub-fields, when combineLabels is set to true. Defaults to ', '." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldDefaults" Type="Labelable">
          <Summary><![CDATA[If specified, the properties in this object are used as default config values for each Ext.form.Labelable instance (e.g. Ext.form.field.Base or Ext.form.FieldContainer) that is added as a descendant of this container. Corresponding values specified in an individual field's own configuration, or from the defaults config of its parent container, will take precedence. See the documentation for Ext.form.Labelable to see what config options may be specified in the fieldDefaults.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;6. FieldContainer&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="If specified, the properties in this object are used as default config values for each Ext.form.Labelable instance (e.g. Ext.form.field.Base or Ext.form.FieldContainer) that is added as a descendant of this container. Corresponding values specified in an individual field's own configuration, or from the defaults config of its parent container, will take precedence. See the documentation for Ext.form.Labelable to see what config options may be specified in the fieldDefaults." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveError" Type="string" DefaultValue="null">
          <Summary><![CDATA[If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveError&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveErrorsTpl" Type="XTemplate">
          <Summary><![CDATA[The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeErrorsTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFitErrors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseBodyCls" Type="string" DefaultValue="&quot;x-form-item-body&quot;">
          <Summary><![CDATA[The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item-body&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearCls" Type="string" DefaultValue="&quot;x-clear&quot;">
          <Summary><![CDATA[The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-clear&quot;" />
            <Attribute Type="Description" RawValue="The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMsgCls" Type="string" DefaultValue="&quot;x-form-error-msg&quot;">
          <Summary><![CDATA[The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-error-msg&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldBodyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An extra CSS class to be applied to the body content element in addition to fieldBodyCls. Defaults to empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An extra CSS class to be applied to the body content element in addition to fieldBodyCls. Defaults to empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormItemCls" Type="string" DefaultValue="&quot;x-form-item&quot;">
          <Summary><![CDATA[A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEmptyLabel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[ When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue=" When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabel" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidCls" Type="string" DefaultValue="&quot;x-form-invalid&quot;">
          <Summary><![CDATA[The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-invalid&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelAlign" Type="LabelAlign" DefaultValue="LabelAlign.Left">
          <Summary><![CDATA[Controls the position and alignment of the fieldLabel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="LabelAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Controls the position and alignment of the fieldLabel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to be applied to the label element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;labelClsExtra&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the label element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelPad" Type="int" DefaultValue="5">
          <Summary><![CDATA[The amount of space in pixels between the fieldLabel and the input field. Defaults to 5.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount of space in pixels between the fieldLabel and the input field. Defaults to 5." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSeparator" Type="string" DefaultValue="&quot;:&quot;">
          <Summary><![CDATA[Character(s) to be inserted at the end of the label text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;:&quot;" />
            <Attribute Type="Description" RawValue="Character(s) to be inserted at the end of the label text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS style specification string to apply directly to this field's label. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS style specification string to apply directly to this field's label. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \"left\" or \"right\". Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \&quot;left\&quot; or \&quot;right\&quot;. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTarget" Type="MessageTarget" DefaultValue="MessageTarget.Qtip">
          <Summary><![CDATA[The location where the error message text should display.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(MessageTarget)" />
            <Attribute Type="DefaultValue" RawValue="MessageTarget.Qtip" />
            <Attribute Type="Description" RawValue="The location where the error message text should display." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTargetElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Add the error message directly to the innerHTML of the specified element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;msgTarget&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Add the error message directly to the innerHTML of the specified element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventMark" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to disable displaying any error message set on this object. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to disable displaying any error message set on this object. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveIndicatorIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Preserve indicator icon place. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Preserve indicator icon place. Defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorText&quot;" />
            <Attribute Type="Description" RawValue="The indicator text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator icon class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator icon class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIcon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;indicatorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator tip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorTip&quot;" />
            <Attribute Type="Description" RawValue="The indicator tip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Note" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNote&quot;" />
            <Attribute Type="Description" RawValue="The note." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNoteCls&quot;" />
            <Attribute Type="Description" RawValue="The note css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteAlign" Type="NoteAlign" DefaultValue="NoteAlign.Down">
          <Summary><![CDATA[Note align]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="NoteAlign.Down" />
            <Attribute Type="Description" RawValue="Note align" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode note text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to encode note text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetFieldLabel" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns the label for the field. Defaults to simply returning the fieldLabel config. Can be overridden to provide]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the label for the field. Defaults to simply returning the fieldLabel config. Can be overridden to provide" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetNote" ParamsRaw="string note, bool encode">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetFieldLabel" ParamsRaw="string label">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="FieldContainerDirectEvents" Extends="ContainerDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="FieldErrorChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;error&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fielderrorchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldValidityChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isValid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldvaliditychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldContainerListeners" Extends="ContainerListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="FieldErrorChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;error&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fielderrorchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldValidityChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isValid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldvaliditychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Blur" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this field loses input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field loses input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the value of a field is changed via the setValue method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the value of a field is changed via the setValue method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a change in the field's isDirty state is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isDirty &quot;, typeof(bool), &quot; Whether or not the field is now dirty&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's isDirty state is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a change in the field's validity is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isValid&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's validity is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the active error message is changed via setActiveError.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;error&quot;, typeof(object), &quot;The active error message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;errorchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed via setActiveError." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this field receives input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field receives input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. To handle other keys see Ext.util.KeyMap. You can check Ext.EventObject.getKey to determine which key was pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. To handle other keys see Ext.util.KeyMap. You can check Ext.EventObject.getKey to determine which key was pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationFailure" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationfailure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationValid" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationvalid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationInvalid" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationinvalid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteValidation" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotevalidation&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;indicatorEl&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;indicatoriconclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WriteableChange" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;read&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;writeablechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldError" Extends="IXObject">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="FieldID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMessage" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;msg&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldErrors" Extends="Collection&lt;FieldError&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Blur" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when this field loses input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field loses input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires when the value of a field is changed via the setValue method.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the value of a field is changed via the setValue method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a change in the field's isDirty state is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isDirty &quot;, typeof(bool), &quot; Whether or not the field is now dirty&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's isDirty state is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a change in the field's validity is detected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;isValid&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a change in the field's validity is detected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the active error message is changed via setActiveError.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;error&quot;, typeof(object), &quot;The active error message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;errorchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed via setActiveError." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when this field receives input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field receives input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentListener">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. To handle other keys see Ext.util.KeyMap. You can check Ext.EventObject.getKey to determine which key was pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. To handle other keys see Ext.util.KeyMap. You can check Ext.EventObject.getKey to determine which key was pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationFailure" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationfailure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationValid" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationvalid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationInvalid" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationinvalid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteValidation" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotevalidation&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;indicatorEl&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;indicatoriconclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WriteableChange" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;read&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;writeablechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldReplicator" Extends="Plugin" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FieldReplicator), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FieldReplicator runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldSet" Extends="AbstractContainer">
      <Summary><![CDATA[Standard content Container used for grouping form fields.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FieldSet runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:FieldSet&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Width&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FieldSet), &quot;Build.ToolboxIcons.FieldSet.bmp&quot;" />
        <Attribute Type="Description" RawValue="Standard content Container used for grouping form fields." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CheckboxName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name to assign to the fieldset's checkbox if checkboxToggle = true (defaults to '[fieldset id]-checkbox').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The name to assign to the fieldset's checkbox if checkboxToggle = true (defaults to '[fieldset id]-checkbox')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckboxToggle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to render a checkbox into the fieldset frame just in front of the legend to expand/collapse the fieldset when the checkbox is toggled. (defaults to false). This checkbox will be included in form submits using the checkboxName.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to render a checkbox into the fieldset frame just in front of the legend to expand/collapse the fieldset when the checkbox is toggled. (defaults to false). This checkbox will be included in form submits using the checkboxName." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to render the fieldset as collapsed by default. If checkboxToggle is specified, the checkbox will also be unchecked by default.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetCollapsed&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to render the fieldset as collapsed by default. If checkboxToggle is specified, the checkbox will also be unchecked by default." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to make the fieldset collapsible and have the expand/collapse toggle button automatically rendered into the legend element, false to keep the fieldset statically sized with no collapse button (defaults to false). Another option is to configure checkboxToggle. Use the collapsed config to collapse the fieldset by default.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to make the fieldset collapsible and have the expand/collapse toggle button automatically rendered into the legend element, false to keep the fieldset statically sized with no collapse button (defaults to false). Another option is to configure checkboxToggle. Use the collapsed config to collapse the fieldset by default." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A title to be displayed in the fieldset's legend. May contain HTML markup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetTitle&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A title to be displayed in the fieldset's legend. May contain HTML markup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleOnTitleClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to true will add a listener to the titleCmp property for the click event which will execute the toggle method. This option is only used when the collapsible property is set to true. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true will add a listener to the titleCmp property for the click event which will execute the toggle method. This option is only used when the collapsible property is set to true. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FieldSetListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldSetDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldSetDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this FieldSet is collapsed. Return false to prevent the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;the FieldSet being collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this FieldSet is collapsed. Return false to prevent the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this FieldSet is expanded. Return false to prevent the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet being expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this FieldSet is expanded. Return false to prevent the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after this FieldSet has collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after this FieldSet has collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after this FieldSet has expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after this FieldSet has expanded." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldSetListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this FieldSet is collapsed. Return false to prevent the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;the FieldSet being collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this FieldSet is collapsed. Return false to prevent the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this FieldSet is expanded. Return false to prevent the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet being expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this FieldSet is expanded. Return false to prevent the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after this FieldSet has collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after this FieldSet has collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires after this FieldSet has expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FieldSet), &quot;The FieldSet that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after this FieldSet has expanded." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldTrigerCollection" Extends="BaseItemCollection&lt;FieldTrigger&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldTrigger" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Tag" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A trigger tag]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A trigger tag" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the trigger element and display only the base text field (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the trigger element and display only the base text field (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="TriggerIcon" DefaultValue="TriggerIcon.Combo">
          <Summary><![CDATA[The icon to use in the trigger. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerIcon.Combo" />
            <Attribute Type="Description" RawValue="The icon to use in the trigger. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Quick tip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Quick tip." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FileUploadField" Extends="TextFieldBase" Inherits="IIcon">
      <Summary><![CDATA[File upload field]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;FileBytes&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;FileName&quot;" />
        <Attribute Type="AspNetHostingPermission" RawValue="SecurityAction.LinkDemand, Level = AspNetHostingPermissionLevel.Minimal, Unrestricted = false" />
        <Attribute Type="AspNetHostingPermissionAttribute" RawValue="SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.Minimal, Unrestricted = false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FileUploadField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;FileSelected&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FileUploadField), &quot;Build.ToolboxIcons.FileUploadField.bmp&quot;" />
        <Attribute Type="Description" RawValue="File upload field" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Button" Type="Button">
          <Summary><![CDATA[A standard Ext.button.Button config object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;buttonConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A standard Ext.button.Button config object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonText" Type="string" DefaultValue="&quot;Browse...&quot;">
          <Summary><![CDATA[The button text to display on the upload button (defaults to 'Browse...'). Note that if you supply a value for buttonConfig, the buttonConfig.text value will be used instead if available.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetButtonText&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Browse...&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The button text to display on the upload button (defaults to 'Browse...'). Note that if you supply a value for buttonConfig, the buttonConfig.text value will be used instead if available." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the file upload field as a button with no visible text field (defaults to false). If true, all inherited Text members will still be available.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the file upload field as a button with no visible text field (defaults to false). If true, all inherited Text members will still be available." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonMargin" Type="int" DefaultValue="3">
          <Summary><![CDATA[The number of pixels of space reserved between the button and the text field (defaults to 3). Note that this only applies if buttonOnly = false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="3" />
            <Attribute Type="Description" RawValue="The number of pixels of space reserved between the button and the text field (defaults to 3). Note that this only applies if buttonOnly = false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Modifier="Override" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FileUploadFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FileUploadFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FileUploadFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FileUploadFieldListeners" Extends="TextFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FilterCondition">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FilterConditionCollection" Extends="List&lt;FilterCondition&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FilterConditions">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FitLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultMarginsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultMargins&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FlashComponent" Extends="ComponentBase">
      <Summary><![CDATA[A Flash AbstractComponent]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FlashComponent), &quot;Build.ToolboxIcons.FlashComponent.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FlashComponent runat=\&quot;server\&quot;&gt;&lt;/{0}:FlashComponent&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A Flash AbstractComponent" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BackgroundColor" Type="string" DefaultValue="&quot;#ffffff&quot;">
          <Summary><![CDATA[The background color. Defaults to '#ffffff' (white).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;#ffffff&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The background color. Defaults to '#ffffff' (white)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpressInstall" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to install flash if not installed. Note that this uses Ext.FlashComponent.EXPRESS_INSTALL_URL, which should be set to the local resource. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to install flash if not installed. Note that this uses Ext.FlashComponent.EXPRESS_INSTALL_URL, which should be set to the local resource. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashVersion" Type="string" DefaultValue="&quot;9.0.45&quot;">
          <Summary><![CDATA[Indicates the version the flash content was published for. Defaults to '9.0.45'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;9.0.45&quot;" />
            <Attribute Type="Description" RawValue="Indicates the version the flash content was published for. Defaults to '9.0.45'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL of the swf object to include. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The URL of the swf object to include. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashVars" Type="ParameterCollection">
          <Summary><![CDATA[A set of key value pairs to be passed to the flash object as flash variables.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A set of key value pairs to be passed to the flash object as flash variables." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashParams" Type="ParameterCollection">
          <Summary><![CDATA[A set of key value pairs to be passed to the flash object as parameters.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A set of key value pairs to be passed to the flash object as parameters." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwfHeight" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The height of the embedded SWF movie inside the component. Defaults to \"100%\" so that the movie matches the height of the component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of the embedded SWF movie inside the component. Defaults to \&quot;100%\&quot; so that the movie matches the height of the component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwfWidth" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The width of the embedded SWF movie inside the component. Defaults to \"100%\" so that the movie matches the width of the component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The width of the embedded SWF movie inside the component. Defaults to \&quot;100%\&quot; so that the movie matches the width of the component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WMode" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The wmode of the flash object. This can be used to control layering. Set to 'transparent' to ignore the backgroundColor and make the background of the Flash movie transparent.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;wmode&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The wmode of the flash object. This can be used to control layering. Set to 'transparent' to ignore the backgroundColor and make the background of the Flash movie transparent." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FlashComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FlashComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FlashComponentDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Failure" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when the Flash movie embedding fails]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FlashComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;failure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the Flash movie embedding fails" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when the Flash movie has been successfully embedded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FlashComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;success&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the Flash movie has been successfully embedded" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FlashComponentListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Failure" Type="ComponentListener">
          <Summary><![CDATA[Fired when the Flash movie embedding fails]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FlashComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;failure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the Flash movie embedding fails" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="ComponentListener">
          <Summary><![CDATA[Fired when the Flash movie has been successfully embedded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FlashComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;success&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the Flash movie has been successfully embedded" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormatValidation" Extends="AbstractValidation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Regex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A JavaScript RegExp object to be tested against the value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="A JavaScript RegExp object to be tested against the value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanel" Extends="FormPanelBase">
      <Summary><![CDATA[Standard form container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FormPanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Padding=\&quot;5\&quot; ButtonAlign=\&quot;Right\&quot; Height=\&quot;185\&quot; Width=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;{0}:TextField runat=\&quot;server\&quot; FieldLabel=\&quot;Label\&quot; AnchorHorizontal=\&quot;100%\&quot; /&gt;&lt;/Items&gt;&lt;Buttons&gt;&lt;{0}:Button runat=\&quot;server\&quot; Icon=\&quot;Disk\&quot; Text=\&quot;Submit\&quot; /&gt;&lt;/Buttons&gt;&lt;/ext:FormPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FormPanel), &quot;Build.ToolboxIcons.FormPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Standard form container." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="FormPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FormPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanelBase" Abstract="true" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PollInterval" Type="int" DefaultValue="500">
          <Summary><![CDATA[Interval in milliseconds at which the form's fields are checked for value changes. Only used if the pollForChanges option is set to true. Defaults to 500 milliseconds.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Interval in milliseconds at which the form's fields are checked for value changes. Only used if the pollForChanges option is set to true. Defaults to 500 milliseconds." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PollForChanges" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, sets up an interval task (using the pollInterval) in which the panel's fields are repeatedly checked for changes in their values. This is in addition to the normal detection each field does on its own input element, and is not needed in most cases. It does, however, provide a means to absolutely guarantee detection of all changes including some edge cases in some browsers which do not fire native events. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, sets up an interval task (using the pollInterval) in which the panel's fields are repeatedly checked for changes in their values. This is in addition to the normal detection each field does on its own input element, and is not needed in most cases. It does, however, provide a means to absolutely guarantee detection of all changes including some edge cases in some browsers which do not fire native events. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParams" Type="ParameterCollection">
          <Summary><![CDATA[Parameters to pass with all requests. e.g. baseParams: {id: '123', foo: 'bar'}.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Parameters to pass with all requests. e.g. baseParams: {id: '123', foo: 'bar'}." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorReader" Type="ReaderCollection">
          <Summary><![CDATA[An Ext.data.DataReader (e.g. Ext.data.reader.Xml) to be used to read field error messages returned from 'submit' actions. This is optional as there is built-in support for processing JSON responses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;errorReader&gt;PrimaryProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.data.DataReader (e.g. Ext.data.reader.Xml) to be used to read field error messages returned from 'submit' actions. This is optional as there is built-in support for processing JSON responses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The request method to use (GET or POST) for form actions if one isn't supplied in the action options.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The request method to use (GET or POST) for form actions if one isn't supplied in the action options." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[An Ext.data.DataReader (e.g. Ext.data.reader.Xml) to be used to read data when executing 'load' actions. This is optional as there is built-in support for processing JSON responses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;PrimaryProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.data.DataReader (e.g. Ext.data.reader.Xml) to be used to read data when executing 'load' actions. This is optional as there is built-in support for processing JSON responses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandardSubmit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, a standard HTML form submit is used instead of a XHR (Ajax) style form submission. All of the field values, plus any additional params configured via baseParams and/or the options to submit, will be included in the values submitted in the form.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, a standard HTML form submit is used instead of a XHR (Ajax) style form submission. All of the field values, plus any additional params configured via baseParams and/or the options to submit, will be included in the values submitted in the form." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30">
          <Summary><![CDATA[Timeout for form actions in seconds (default is 30 seconds).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30" />
            <Attribute Type="Description" RawValue="Timeout for form actions in seconds (default is 30 seconds)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackResetOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, reset() resets to the last loaded or setValues() data instead of when the form was first created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, reset() resets to the last loaded or setValues() data instead of when the form was first created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to use for form actions if one isn't supplied in the doAction options.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The URL to use for form actions if one isn't supplied in the doAction options." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WaitMsgTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[By default wait messages are displayed with Ext.MessageBox.wait. You can target a specific element by passing it or its id or mask the form itself by passing in true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default wait messages are displayed with Ext.MessageBox.wait. You can target a specific element by passing it or its id or mask the form itself by passing in true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WaitTitle" Type="string" DefaultValue="&quot;Please Wait...&quot;">
          <Summary><![CDATA[The default title to show for the waiting message box]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Please Wait...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default title to show for the waiting message box" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldDefaults" Type="Labelable">
          <Summary><![CDATA[If specified, the properties in this object are used as default config values for each Ext.form.Labelable instance (e.g. Ext.form.field.Base or Ext.form.FieldContainer) that is added as a descendant of this container. Corresponding values specified in an individual field's own configuration, or from the defaults config of its parent container, will take precedence. See the documentation for Ext.form.Labelable to see what config options may be specified in the fieldDefaults.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="If specified, the properties in this object are used as default config values for each Ext.form.Labelable instance (e.g. Ext.form.field.Base or Ext.form.FieldContainer) that is added as a descendant of this container. Corresponding values specified in an individual field's own configuration, or from the defaults config of its parent container, will take precedence. See the documentation for Ext.form.Labelable to see what config options may be specified in the fieldDefaults." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ApplyToFields" ParamsRaw="object values">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyIfToFields" ParamsRaw="object values">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearInvalid">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadForm" ParamsRaw="object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid" ParamsRaw="object errors">
          <Summary><![CDATA[Mark fields in this form invalid in bulk.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Mark fields in this form invalid in bulk." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset">
          <Summary><![CDATA[Resets this form.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resets this form." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValues" ParamsRaw="object values">
          <Summary><![CDATA[Set values for fields in this form in bulk.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Set values for fields in this form in bulk." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="FormPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActionComplete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an action is completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actioncomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action is completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionFailed" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an action fails.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actionfailed&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAction" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any action is performed. Return false to cancel the action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeaction&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any action is performed. Return false to cancel the action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the dirty state of the entire form changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dirty&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dirty state of the entire form changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the validity of the entire form changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;valid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity of the entire form changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldErrorChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;error&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fielderrorchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldValidityChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isValid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldvaliditychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the value of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the value of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActionComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires when an action is completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actioncomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action is completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionFailed" Type="ComponentListener">
          <Summary><![CDATA[Fires when an action fails.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actionfailed&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAction" Type="ComponentListener">
          <Summary><![CDATA[Fires before any action is performed. Return false to cancel the action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeaction&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any action is performed. Return false to cancel the action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the dirty state of the entire form changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dirty&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dirtychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dirty state of the entire form changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidityChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the validity of the entire form changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;valid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validitychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity of the entire form changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldErrorChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;error&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fielderrorchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active error message is changed for any one of the Ext.form.Labelable instances within this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldValidityChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isValid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldvaliditychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the validity state of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the value of any one of the Ext.form.field.Field instances within this container changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fieldchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the value of any one of the Ext.form.field.Field instances within this container changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanelResult" Extends="ActionResult" Inherits="IXObject">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Script" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="bool" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Errors" Type="List&lt;FieldError&gt;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;extraParams&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Frame" Extends="Fx">
      <Summary><![CDATA[Shows a ripple of exploding, attenuating borders to draw attention to an Element]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Shows a ripple of exploding, attenuating borders to draw attention to an Element" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FunctionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Fx" Abstract="true" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Abstract="true" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArgumentsArray" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;args&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FxConfig" Extends="ElementFxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to apply after the effect]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A css class to apply after the effect" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A style specification string, e.g. 'width:100px', that will be applied to the Element after the effect finishes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A style specification string, e.g. 'width:100px', that will be applied to the Element after the effect finishes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Block" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether the effect should block other effects from queueing while it runs]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether the effect should block other effects from queueing while it runs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Concurrent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to allow subsequently-queued effects to run at the same time as the current effect, or to ensure that they run in sequence]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to allow subsequently-queued effects to run at the same time as the current effect, or to ensure that they run in sequence" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopFx" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether subsequent effects should be stopped and removed after the current effect finishes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether subsequent effects should be stopped and removed after the current effect finishes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDisplay" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to use the display CSS property instead of visibility when hiding Elements (only applies to effects that end with the element being visually hidden, ignored otherwise)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to use the display CSS property instead of visibility when hiding Elements (only applies to effects that end with the element being visually hidden, ignored otherwise)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GaugeAxis" Extends="AbstractAxis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Position" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int" DefaultValue="10">
          <Summary><![CDATA[The offset positioning of the tick marks and labels in pixels. Defaults to: 10]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The offset positioning of the tick marks and labels in pixels. Defaults to: 10" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximum" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The maximum value of the interval to be displayed in the axis (REQUIRED).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The maximum value of the interval to be displayed in the axis (REQUIRED)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimum" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The minimum value of the interval to be displayed in the axis (REQUIRED).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The minimum value of the interval to be displayed in the axis (REQUIRED)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Steps" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The number of steps and tick marks to add to the interval. (REQUIRED).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The number of steps and tick marks to add to the interval. (REQUIRED)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="null">
          <Summary><![CDATA[The title for the Axis.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The title for the Axis." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GaugeSeries" Extends="AbstractSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AngleField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The store record field name to be used for the pie angles. The values bound to this field name must be positive real numbers. REQUIRED]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The store record field name to be used for the pie angles. The values bound to this field name must be positive real numbers. REQUIRED" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Donut" Type="int" DefaultValue="0">
          <Summary><![CDATA[Use the entire disk or just a fraction of it for the gauge.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Use the entire disk or just a fraction of it for the gauge." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightDuration" Type="int" DefaultValue="150">
          <Summary><![CDATA[The duration for the pie slice highlight effect. Defaults to: 150]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="150" />
            <Attribute Type="Description" RawValue="The duration for the pie slice highlight effect. Defaults to: 150" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Needle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Use the Gauge Series as an area series or add a needle to it. Default's false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Use the Gauge Series as an area series or add a needle to it. Default's false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowInLegend" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to add the pie chart elements as legend items. Default's false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to add the pie chart elements as legend items. Default's false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColorSet" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of color values which will be used, in order, as the gauge slice fill colors.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of color values which will be used, in order, as the gauge slice fill colors." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetValue" ParamsRaw="object value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="GeneralExtensions">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GenericComponent&lt;T&gt;" Extends="ComponentBase" Inherits="new()">
      <Summary><![CDATA[A generic AbstractComponent.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GenericComponent runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="A generic AbstractComponent." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Component" Type="T" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GenericConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GenericPlugin" Extends="Plugin">
      <Summary><![CDATA[A generic Plugin.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GenericPlugin runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="A generic Plugin." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="InstanceName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript class name. Used to create a 'new' instance of the object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GenericPlugin&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The JavaScript class name. Used to create a 'new' instance of the object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Path" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The file path to the required JavaScript file.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GenericPlugin&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The file path to the required JavaScript file." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Ghost" Extends="Fx">
      <Summary><![CDATA[Slides the element while fading it out of view. An anchor point can be optionally passed to set the ending point of the effect. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element while fading it out of view. An anchor point can be optionally passed to set the ending point of the effect. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GlobalConfig" Extends="ConfigurationSection">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Gradient" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GradientID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The unique name of the gradient.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The unique name of the gradient." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Angle" Type="int" DefaultValue="0">
          <Summary><![CDATA[The angle of the gradient in degrees.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The angle of the gradient in degrees." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stops" Type="GradientStops">
          <Summary><![CDATA[An object with numbers as keys (from 0 to 100) and style objects as values]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object with numbers as keys (from 0 to 100) and style objects as values" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;stops&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Gradients" Extends="BaseItemCollection&lt;Gradient&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GradientStop" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Offset" Type="int" DefaultValue="-1">
          <Summary><![CDATA[(from 0 to 100)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="(from 0 to 100)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Color" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="double" DefaultValue="1d">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1d" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GradientStops" Extends="BaseItemCollection&lt;GradientStop&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridCommand" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="SimpleToolTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandOut" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable stand out by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="True to enable stand out by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledClass" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="CommandMenu">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;16&quot;">
          <Summary><![CDATA[The minimum width for this button (used to give a set of buttons a common width).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;16&quot;" />
            <Attribute Type="Description" RawValue="The minimum width for this button (used to give a set of buttons a common width)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridCommandBase" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridCommandCollection" Extends="BaseItemCollection&lt;GridCommandBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridDragDrop" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDGroup" Type="string" DefaultValue="&quot;GridDD&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then both the DragZones and DropZone used by this plugin will only interact with other drag drop objects in the same group (defaults to 'GridDD').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;GridDD&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then both the DragZones and DropZone used by this plugin will only interact with other drag drop objects in the same group (defaults to 'GridDD')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragText" Type="string" DefaultValue="&quot;{0} selected row{1}&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} selected row{1}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddGroup to which the DragZone will belong. This defines which other DropZones the DragZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The ddGroup to which the DragZone will belong. This defines which other DropZones the DragZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddGroup to which the DropZone will belong. This defines which other DragZones the DropZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The ddGroup to which the DropZone will belong. This defines which other DragZones the DropZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrag" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true. Set to false to disallow dragging items from the View]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true. Set to false to disallow dragging items from the View" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true. Set to false to disallow the View from accepting drop gestures]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true. Set to false to disallow the View from accepting drop gestures" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridEditing" Abstract="true" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ClicksToEdit" Type="int" DefaultValue="2">
          <Summary><![CDATA[The number of clicks on a grid required to display the editor (defaults to 2).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The number of clicks on a grid required to display the editor (defaults to 2)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerEvent" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The event which triggers editing. Supercedes the clicksToEdit configuration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The event which triggers editing. Supercedes the clicksToEdit configuration." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFeature" Abstract="true" Extends="LazyObservable">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilter" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Active" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Indicates the initial status of the filter (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Indicates the initial status of the filter (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Store data index of the field this filter represents. The dataIndex does not actually have to exist in the store.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The Store data index of the field this filter represents. The dataIndex does not actually have to exist in the store." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuItems" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateBuffer" Type="int" DefaultValue="500">
          <Summary><![CDATA[Number of milliseconds to wait after user interaction to fire an update. Only supported by filters: 'list', 'numeric', and 'string'. Defaults to 500.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of milliseconds to wait after user interaction to fire an update. Only supported by filters: 'list', 'numeric', and 'string'. Defaults to 500." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetValue" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to get and return the value of the filter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to get and return the value of the filter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SetValueFunc" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to set the value of the filter and fire the 'update' event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;setValue&quot;, JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to set the value of the filter and fire the 'update' event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetSerialArgs" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to get and return serialized filter data for transmission to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to get and return serialized filter data for transmission to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateRecord" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to validates the provided Ext.data.Record against the filters configuration.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to validates the provided Ext.data.Record against the filters configuration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridFilterListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilterCollection" Extends="BaseItemCollection&lt;GridFilter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridFilterListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires when an inactive filter becomes active]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an inactive filter becomes active" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires when an active filter becomes inactive]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an active filter becomes inactive" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Serialize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the serialization process. Use this to attach additional parameters to serialization data before it is encoded and sent to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;data&quot;, typeof(object), &quot;A map or collection of maps representing the current filter configuration.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;serialize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the serialization process. Use this to attach additional parameters to serialization data before it is encoded and sent to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires when a filter configuration has changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a filter configuration has changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilters" Extends="GridFeature">
      <Summary><![CDATA[GridFilters plugin used for filter by columns]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridFilters), &quot;Build.ToolboxIcons.GridFilters.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GridFilters runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="GridFilters plugin used for filter by columns" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoReload" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true, reloading the datasource when a filter change happens.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true, reloading the datasource when a filter change happens." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateBuffer" Type="int" DefaultValue="500">
          <Summary><![CDATA[Number of milisecond to defer store updates since the last filter change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of milisecond to defer store updates since the last filter change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterCls" Type="string" DefaultValue="&quot;ux-filtered-column&quot;">
          <Summary><![CDATA[The css class to be applied to column headers that active filters. Defaults to 'ux-filterd-column'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ux-filtered-column&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The css class to be applied to column headers that active filters. Defaults to 'ux-filterd-column'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Local" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use Ext.data.Store filter functions (local filtering) instead of the default server side filtering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use Ext.data.Store filter functions (local filtering) instead of the default server side filtering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuFilterText" Type="string" DefaultValue="&quot;Filters&quot;">
          <Summary><![CDATA[The text displayed for the 'Filters' menu item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Filters&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Filters' menu item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamPrefix" Type="string" DefaultValue="&quot;filter&quot;">
          <Summary><![CDATA[The url parameter prefix for the filters.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;filter&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The url parameter prefix for the filters." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true, including a filter submenu in the default header menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true, including a filter submenu in the default header menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateId" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the value to be used to store state information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the value to be used to store state information." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Filters" Type="GridFilterCollection" DefaultValue="null">
          <Summary><![CDATA[An Array of filters config objects.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;filters&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Array of filters config objects." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridFiltersListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridFiltersDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFiltersDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FilterUpdate" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;plugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFiltersListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FilterUpdate" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;plugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridHeaderContainer" Extends="AbstractContainer" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Browsable" RawValue="false" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[Width of the header if no width or flex is specified. Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="Width of the header if no width or flex is specified. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Weight" Modifier="Override" Type="int" DefaultValue="100">
          <Summary><![CDATA[HeaderContainer overrides the default weight of 0 for all docked items to 100. This is so that it has more priority over things like toolbars. Defaults to: 100]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="HeaderContainer overrides the default weight of 0 for all docked items to 100. This is so that it has more priority over things like toolbars. Defaults to: 100" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sortable" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Provides the default sortable state for all Headers within this HeaderContainer. Also turns on or off the menus in the HeaderContainer. Note that the menu is shared across every header and therefore turning it off will remove the menu items for every header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Provides the default sortable state for all Headers within this HeaderContainer. Also turns on or off the menus in the HeaderContainer. Note that the menu is shared across every header and therefore turning it off will remove the menu items for every header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortAscText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Sort Ascending\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Sort Ascending\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortDescText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Sort Descending\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Sort Descending\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortClearText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Clear Sort\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Clear Sort\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Columns\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Columns\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="ItemsCollection&lt;ColumnBase&gt;">
          <Summary><![CDATA[An array of column definition objects which define all columns that appear in this grid. Each column definition provides the header text for the column, and a definition of where the data for that column comes from.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of column definition objects which define all columns that appear in this grid. Each column definition provides the header text for the column, and a definition of where the data for that column comes from." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Modifier="Override" Access="Protected" Type="ItemsCollection&lt;AbstractComponent&gt;" DefaultValue="null">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceFit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to force the columns to fit into the available width. Headers are first sized according to configuration, whether that be a specific width, or flex. Then they are all proportionally changed in width so that the entire content width is used.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to force the columns to fit into the available width. Headers are first sized according to configuration, whether that be a specific width, or flex. Then they are all proportionally changed in width so that the entire content width is used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnMove" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable drag and drop reorder of columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable drag and drop reorder of columns." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to turn off column resizing for the whole grid (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to turn off column resizing for the whole grid (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to turn off column resizing for the whole grid (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to turn off column resizing for the whole grid (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridHeaderContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridHeaderContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridHeaderContainerDirectEvents" Extends="ContainerDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ColumnHide" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;fromIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;toIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;width&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnShow" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnshow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;t&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderTriggerClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;t&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headertriggerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuCreate" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(Menu), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menucreate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;direction&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridHeaderContainerListeners" Extends="ContainerListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ColumnHide" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;fromIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;toIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;width&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnShow" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnshow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;t&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderTriggerClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;t&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headertriggerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuCreate" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(Menu), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menucreate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;direction&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPagingScroller" Extends="GridScroller">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ScrollToLoadBuffer" Type="int" DefaultValue="200">
          <Summary><![CDATA[This is the time in milliseconds to buffer load requests when scrolling the PagingScrollbar. Defaults to: 200]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. GridPagingScroller&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="Description" RawValue="This is the time in milliseconds to buffer load requests when scrolling the PagingScrollbar. Defaults to: 200" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NumberFromEdge" Type="int" DefaultValue="2">
          <Summary><![CDATA[The zone which causes a refresh of the rendered viewport. As soon as the edge of the rendered grid is this number of rows from the edge of the viewport, the view is moved.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;numFromEdge&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. GridPagingScroller&quot;" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The zone which causes a refresh of the rendered viewport. As soon as the edge of the rendered grid is this number of rows from the edge of the viewport, the view is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrailingBufferZone" Type="int" DefaultValue="5">
          <Summary><![CDATA[The number of extra rows to render on the trailing side of scrolling outside the NumberFromEdge buffer as scrolling proceeds.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. GridPagingScroller&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" RawValue="The number of extra rows to render on the trailing side of scrolling outside the NumberFromEdge buffer as scrolling proceeds." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeadingBufferZone" Type="int" DefaultValue="15">
          <Summary><![CDATA[The number of extra rows to render on the leading side of scrolling outside the NumberFromEdge buffer as scrolling proceeds.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. GridPagingScroller&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="Description" RawValue="The number of extra rows to render on the leading side of scrolling outside the NumberFromEdge buffer as scrolling proceeds." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VariableRowHeight" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. GridPagingScroller&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanel" Extends="GridPanelBase">
      <Summary><![CDATA[Grids are an excellent way of showing large amounts of tabular data on the client side.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GridPanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;/{0}:GridPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridPanel), &quot;Build.ToolboxIcons.GridPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Grids are an excellent way of showing large amounts of tabular data on the client side." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="GridPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelBase" Abstract="true" Extends="TablePanel" Inherits="IStore&lt;Store&gt;,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectionSubmit" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="View" Type="ViewCollection&lt;GridView&gt;">
          <Summary><![CDATA[The Ext.grid.View used by the grid. This can be set before a call to render().]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewConfig&gt;View&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.grid.View used by the grid. This can be set before a call to render()." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VerticalScroller" Type="GridScrollerCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;verticalScroller&gt;Scroller&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection&lt;Store&gt;">
          <Summary><![CDATA[The Ext.Net.Store the grid should use as its data source (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;, 1" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.Net.Store the grid should use as its data source (required)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Features" Type="ItemsCollection&lt;GridFeature&gt;">
          <Summary><![CDATA[An array of grid features]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of grid features" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelDirectEvents" Extends="TablePanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GroupClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is right clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is right clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is double clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is collapsed. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is collapsed. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is double expanded. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double expanded. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a reconfigure]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columns&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reconfigure" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelListeners" Extends="TablePanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GroupClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is right clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is right clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is double clicked. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double clicked. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is collapsed. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is collapsed. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is double expanded. Only applies for grids with a Grouping feature.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(TableView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double expanded. Only applies for grids with a Grouping feature." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires after a reconfigure]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columns&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reconfigure" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridScroller" Abstract="true" Extends="Component">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridScrollerCollection" Extends="SingleItemCollection&lt;GridScroller&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scroller" Type="GridScroller">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;verticalScroller&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridView" Extends="TableView">
      <Summary><![CDATA[The grid View class provides extra Ext.grid.Panel specific functionality to the Ext.view.Table.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="The grid View class provides extra Ext.grid.Panel specific functionality to the Ext.view.Table." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StripeRows" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to stripe the rows. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stripe the rows. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridViewDirectEvents" Extends="TableViewDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridViewListeners" Extends="TableViewListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GroupImageCommand" Extends="ImageCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RightAlign" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupImageCommandCollection" Extends="BaseItemCollection&lt;GroupImageCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Grouping" Extends="GridFeature">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DepthToIndent" Type="int" DefaultValue="17">
          <Summary><![CDATA[True to enable drag and drop reorder of columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="17" />
            <Attribute Type="Description" RawValue="True to enable drag and drop reorder of columns." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableGroupingMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable the grouping control in the header menu (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable the grouping control in the header menu (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableNoGroups" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow the user to turn off grouping (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the user to turn off grouping (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupByText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Text displayed in the grid header menu for grouping by header (defaults to 'Group By This Field').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text displayed in the grid header menu for grouping by header (defaults to 'Group By This Field')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupHeaderTplString" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string Template snippet, an array of strings (optionally followed by an object containing Template methods) to be used to construct a Template, or a Template instance. Defaults to: \"{columnName}: {name}\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupHeaderTpl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string Template snippet, an array of strings (optionally followed by an object containing Template methods) to be used to construct a Template, or a Template instance. Defaults to: \&quot;{columnName}: {name}\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupHeaderTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[A string Template snippet, an array of strings (optionally followed by an object containing Template methods) to be used to construct a Template, or a Template instance. Defaults to: \"{columnName}: {name}\"]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. TemplateColumn&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupHeaderTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A string Template snippet, an array of strings (optionally followed by an object containing Template methods) to be used to construct a Template, or a Template instance. Defaults to: \&quot;{columnName}: {name}\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideGroupedHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the header that is currently grouped (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the header that is currently grouped (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowGroupsText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Text displayed in the grid header for enabling/disabling grouping (defaults to 'Show in Groups').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text displayed in the grid header for enabling/disabling grouping (defaults to 'Show in Groups')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartCollapsed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start all groups collapsed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to start all groups collapsed (defaults to false)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupingSummary" Extends="Grouping">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowSummaryRow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to add css for column separation lines. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.toggleSummaryRow({1});&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to add css for column separation lines. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteRoot" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the property which contains the Array of summary objects. Defaults to undefined. It allows to use server-side calculated summaries.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the property which contains the Array of summary objects. Defaults to undefined. It allows to use server-side calculated summaries." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanel" Extends="AbstractContainer" Inherits="IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GroupTabPanel), &quot;Build.ToolboxIcons.GroupTabPanel.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GroupTabPanel runat=\&quot;server\&quot; Title=\&quot;GroupTabPanel\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:GroupTabPanel&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Deferred Render]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Deferred Render" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveGroupIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveGroup&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveGroupProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeGroup&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;120&quot;">
          <Summary><![CDATA[The initial width in pixels of each new tab (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;120&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The initial width in pixels of each new tab (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GroupTabPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GroupTabPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanelDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeGroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a group change (activated by setActiveGroup). Return false in any listener to cancel the groupchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldGroup&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforegroupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a group change (activated by setActiveGroup). Return false in any listener to cancel the groupchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new group has been activated (activated by setActiveGroup).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldGroup&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new group has been activated (activated by setActiveGroup)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCard&quot;, typeof(AbstractComponent), &quot;newCard&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCard&quot;, typeof(AbstractComponent), &quot;oldCard&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new tab has been activated (activated by setActiveTab).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCard&quot;, typeof(AbstractComponent), &quot;newCard&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCard&quot;, typeof(AbstractComponent), &quot;oldCard&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new tab has been activated (activated by setActiveTab)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanelListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeGroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a group change (activated by setActiveGroup). Return false in any listener to cancel the groupchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldGroup&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforegroupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a group change (activated by setActiveGroup). Return false in any listener to cancel the groupchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new group has been activated (activated by setActiveGroup).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldGroup&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new group has been activated (activated by setActiveGroup)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCard&quot;, typeof(AbstractComponent), &quot;newCard&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCard&quot;, typeof(AbstractComponent), &quot;oldCard&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new tab has been activated (activated by setActiveTab).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCard&quot;, typeof(AbstractComponent), &quot;newCard&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCard&quot;, typeof(AbstractComponent), &quot;oldCard&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new tab has been activated (activated by setActiveTab)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GuidJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HandlerConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scope" Type="string" DefaultValue="null">
          <Summary><![CDATA[The scope in which to execute the handler function. The handler function's 'this' context.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to execute the handler function. The handler function's 'this' context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="null">
          <Summary><![CDATA[A simple selector to filter the target or look for a descendant of the target.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A simple selector to filter the target or look for a descendant of the target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event. That is stop propagation, and prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event. That is stop propagation, and prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopPropagation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent event propagation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent event propagation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Normalized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to pass a browser event to the handler function instead of an Ext.EventObject.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to pass a browser event to the handler function instead of an Ext.EventObject." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of milliseconds to delay the invocation of the handler after the event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to delay the invocation of the handler after the event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a handler to handle just the next firing of the event, and then remove itself.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a handler to handle just the next firing of the event, and then remove itself." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buffer" Type="int" DefaultValue="0">
          <Summary><![CDATA[Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetID" Type="string" DefaultValue="null">
          <Summary><![CDATA[Only call the handler if the event was fired on the target Observable, not if the event was bubbled up from a child Observable.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Only call the handler if the event was fired on the target Observable, not if the event was bubbled up from a child Observable." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Element" Type="string" DefaultValue="null">
          <Summary><![CDATA[his option is only valid for listeners bound to Components. The name of a AbstractComponent property which references an element to add a listener to.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="his option is only valid for listeners bound to Components. The name of a AbstractComponent property which references an element to add a listener to." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;taget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HasManyAssociation" Extends="AbstractAssociation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically load the related store from a remote source when instantiated. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically load the related store from a remote source when instantiated. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterProperty" Type="string" DefaultValue="null">
          <Summary><![CDATA[Optionally overrides the default filter that is set up on the associated Store. If this is not set, a filter is automatically created which filters the association based on the configured foreignKey. See intro docs for more details. Defaults to undefined]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Optionally overrides the default filter that is set up on the associated Store. If this is not set, a filter is automatically created which filters the association based on the configured foreignKey. See intro docs for more details. Defaults to undefined" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForeignKey" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the foreign key on the associated model that links it to the owner model. Defaults to the lowercased name of the owner model plus \"_id\", e.g. an association with a where a model called Group hasMany Users would create 'group_id' as the foreign key.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the foreign key on the associated model that links it to the owner model. Defaults to the lowercased name of the owner model plus \&quot;_id\&quot;, e.g. an association with a where a model called Group hasMany Users would create 'group_id' as the foreign key." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the function to create on the owner model to retrieve the child store. If not specified, the pluralized name of the child model is used.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the function to create on the owner model to retrieve the child store. If not specified, the pluralized name of the child model is used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreConfig" Type="ParameterCollection">
          <Summary><![CDATA[Optional configuration object that will be passed to the generated Store. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Optional configuration object that will be passed to the generated Store. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HasOneAssociation" Extends="AbstractAssociation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForeignKey" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the foreign key on the owner model that links it to the associated model. Defaults to the lowercased name of the associated model plus \"_id\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the foreign key on the owner model that links it to the associated model. Defaults to the lowercased name of the associated model plus \&quot;_id\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetterName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the getter function that will be added to the local model's prototype. Defaults to 'get' + the name of the foreign model, e.g. getAddress]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the getter function that will be added to the local model's prototype. Defaults to 'get' + the name of the foreign model, e.g. getAddress" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SetterName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The name of the setter function that will be added to the local model's prototype. Defaults to 'set' + the name of the foreign model, e.g. setAddress]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The name of the setter function that will be added to the local model's prototype. Defaults to 'set' + the name of the foreign model, e.g. setAddress" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HBoxLayoutConfig" Extends="BoxLayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="HBoxAlign" DefaultValue="HBoxAlign.Top">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="HBoxAlign.Top" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Hidden" Extends="Field">
      <Summary><![CDATA[A basic hidden field for storing hidden values in forms that need to be passed in the form submit. Can be used as a direct replacement for the traditional &lt;asp:Hidden> Web Control.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Hidden runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;ValueChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="NonVisualControl" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Hidden), &quot;Build.ToolboxIcons.Hidden.bmp&quot;" />
        <Attribute Type="Description" RawValue="A basic hidden field for storing hidden values in forms that need to be passed in the form submit. Can be used as a direct replacement for the traditional &amp;lt;asp:Hidden&gt; Web Control." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Highlight" Extends="Fx">
      <Summary><![CDATA[Highlights the Element by setting a color (applies to the background-color by default, but can be changed using the 'attr' config option) and then fading back to the original color. If no original color is available, you should provide the 'endColor' config option which will be cleared after the animation. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Highlights the Element by setting a color (applies to the background-color by default, but can be changed using the 'attr' config option) and then fading back to the original color. If no original color is available, you should provide the 'endColor' config option which will be cleared after the animation. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HighlightConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Attr" Type="string" DefaultValue="&quot;background-color&quot;">
          <Summary><![CDATA[Can be any valid CSS property (attribute) that supports a color value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;background-color&quot;" />
            <Attribute Type="Description" RawValue="Can be any valid CSS property (attribute) that supports a color value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndColor" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[End fading color]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="End fading color" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="History" Extends="Observable" Inherits="ICustomConfigSerialization,IVirtual">
      <Summary><![CDATA[History management component that allows you to register arbitrary tokens that signify application history state on navigation actions.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:History runat=\&quot;server\&quot;&gt;&lt;/{0}:History&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(History), &quot;Build.ToolboxIcons.History.bmp&quot;" />
        <Attribute Type="Description" RawValue="History management component that allows you to register arbitrary tokens that signify application history state on navigation actions." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="HistoryListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="HistoryDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CallHistory" ParamsRaw="string name, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="string token, bool preventDuplicate">
          <Summary><![CDATA[Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="string token">
          <Summary><![CDATA[Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Back">
          <Summary><![CDATA[Programmatically steps back one step in browser history (equivalent to the user pressing the Back button).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically steps back one step in browser history (equivalent to the user pressing the Back button)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Forward">
          <Summary><![CDATA[Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button)." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="HistoryDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Handle this change event in order to restore the UI to the appropriate history state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;token&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle this change event in order to restore the UI to the appropriate history state" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HistoryListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Handle this change event in order to restore the UI to the appropriate history state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;token&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle this change event in order to restore the UI to the appropriate history state" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditor" Extends="Field" Inherits="IEditableTextControl,ITextControl,IPostBackEventHandler">
      <Summary><![CDATA[Provides a lightweight HTML Editor component. NOTE: HtmlEditor can not be hidden on initial page load. If placing within a TabPanel, please ensure the correct .ActiveTabIndex is set. If placing within a Window, please ensure InitHidden is 'false'.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HtmlEditor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(HtmlEditor), &quot;Build.ToolboxIcons.HtmlEditor.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a lightweight HTML Editor component. NOTE: HtmlEditor can not be hidden on initial page load. If placing within a TabPanel, please ensure the correct .ActiveTabIndex is set. If placing within a Window, please ensure InitHidden is 'false'." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="HtmlEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="HtmlEditorDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterIFrameTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the iframe element. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterIFrameTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the iframe element. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterTextAreaTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup after the textarea element. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterTextAreaTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup after the textarea element. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeIFrameTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the iframe element. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeIFrameTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the iframe element. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTextAreaTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup before the textarea element. If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeTextAreaTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup before the textarea element. If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CreateLinkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text for the create link prompt.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text for the create link prompt." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultFont" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default font family (defaults to 'tahoma').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The default font family (defaults to 'tahoma')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultLinkValue" Type="string" DefaultValue="&quot;http://&quot;">
          <Summary><![CDATA[The default value for the create link prompt (defaults to http://).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;http://&quot;" />
            <Attribute Type="Description" RawValue="The default value for the create link prompt (defaults to http://)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A default value to be put into the editor to resolve focus issues (defaults to   (Non-breaking space) in Opera and IE6, ​ (Zero-width space) in all other browsers).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A default value to be put into the editor to resolve focus issues (defaults to   (Non-breaking space) in Opera and IE6, ​ (Zero-width space) in all other browsers)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableAlignments" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the left, center, right alignment buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the left, center, right alignment buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the fore/highlight color buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the fore/highlight color buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFont" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable font selection. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable font selection. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFontSize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the increase/decrease font size buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the increase/decrease font size buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFormat" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the bold, italic and underline buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the bold, italic and underline buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableLinks" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the create link button. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the create link button. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableLists" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the bullet and numbered list buttons. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the bullet and numbered list buttons. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableSourceEdit" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the switch to source edit button. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the switch to source edit button. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EscapeValue" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontFamilies" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of available font families.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of available font families." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonTips" Type="HtmlEditorButtonTips">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IframeAttrTpl" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An optional string or XTemplate configuration to insert in the field markup inside the iframe element (as attributes). If an XTemplate is used, the component's subTpl data serves as the context.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;iframeAttrTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional string or XTemplate configuration to insert in the field markup inside the iframe element (as attributes). If an XTemplate is used, the component's subTpl data serves as the context." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ExecCmd" ParamsRaw="string cmd, string value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExecCmd" ParamsRaw="string cmd, bool value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAtCursor" ParamsRaw="string text">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PushValue">
          <Summary><![CDATA[Protected method that will not generally be called directly. Pushes the value of the textarea into the iframe editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. Pushes the value of the textarea into the iframe editor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RelayCmd" ParamsRaw="string cmd, string value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RelayCmd" ParamsRaw="string cmd, bool value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncValue">
          <Summary><![CDATA[Protected method that will not generally be called directly. Syncs the contents of the editor iframe with the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. Syncs the contents of the editor iframe with the textarea." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleSourceEdit">
          <Summary><![CDATA[Toggles the editor between standard and source edit mode.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles the editor between standard and source edit mode." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleSourceEdit" ParamsRaw="bool sourceEdit">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateToolbar">
          <Summary><![CDATA[Protected method that will not generally be called directly. It triggers a toolbar update by reading the markup state of the current selection in the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. It triggers a toolbar update by reading the markup state of the current selection in the editor." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="HtmlEditorButtonTip" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditorButtonTips" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Bold" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Italic" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Underline" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IncreaseFontSize" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;increasefontsize&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecreaseFontSize" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;decreasefontsize&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BackColor" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;backcolor&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForeColor" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;forecolor&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="JustifyLeft" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;justifyleft&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="JustifyCenter" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;justifycenter&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="JustifyRight" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;justifyright&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InsertUnorderedList" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;insertunorderedlist&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InsertOrderedList" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;insertorderedlist&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CreateLink" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;createlink&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SourceEdit" Type="HtmlEditorButtonTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;sourceedit&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditorDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor is first receives the focus. Any insertion must wait until after this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is first receives the focus. Any insertion must wait until after this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePush" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepush&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditModeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor switches edit modes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sourceEdit&quot;, typeof(bool), &quot;True if source edit, false if standard editing.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editmodechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor switches edit modes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Initialize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor is fully initialized (including the iframe).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is fully initialized (including the iframe)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Push" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the iframe editor is updated with content from the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;push&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the iframe editor is updated with content from the textarea." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sync" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the textarea is updated with content from the editor iframe.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sync&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the textarea is updated with content from the editor iframe." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditorListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor is first receives the focus. Any insertion must wait until after this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is first receives the focus. Any insertion must wait until after this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePush" Type="ComponentListener">
          <Summary><![CDATA[Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepush&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentListener">
          <Summary><![CDATA[Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditModeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor switches edit modes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sourceEdit&quot;, typeof(bool), &quot;True if source edit, false if standard editing.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editmodechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor switches edit modes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Initialize" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor is fully initialized (including the iframe).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is fully initialized (including the iframe)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Push" Type="ComponentListener">
          <Summary><![CDATA[Fires when the iframe editor is updated with content from the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;push&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the iframe editor is updated with content from the textarea." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sync" Type="ComponentListener">
          <Summary><![CDATA[Fires when the textarea is updated with content from the editor iframe.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sync&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the textarea is updated with content from the editor iframe." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HyperLink" Extends="LabelBase">
      <Summary><![CDATA[Basic hyperlink field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HyperLink runat=\&quot;server\&quot; Text=\&quot;HyperLink\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(HyperLink), &quot;Build.ToolboxIcons.HyperLink.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Html&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Html&quot;" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Basic hyperlink field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="AbstractComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="AbstractComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNavigateUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="TypeConverter" RawValue="typeof(TargetConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTarget&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Image" Extends="ImageBase">
      <Summary><![CDATA[Basic image field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Image runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Image), &quot;Build.ToolboxIcons.Image.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic image field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ImageListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ImageDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageBase" Abstract="true" Extends="ComponentBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateText" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;altText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAltText&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="ImageAlign" DefaultValue="ImageAlign.NotSet">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="ImageAlign.NotSet" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAlign&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to load image after rendering only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to load image after rendering only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorComplete" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to monitor complete state and fire Complete event]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to monitor complete state and fire Complete event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowPan" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow scroll the image by mouse dragging]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow scroll the image by mouse dragging" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorPoll" Type="int" DefaultValue="200">
          <Summary><![CDATA[The milliseconds to poll complete state, ignored if MonitorComplete is not true (defaults to 200)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The milliseconds to poll complete state, ignored if MonitorComplete is not true (defaults to 200)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XDelta" Type="int" DefaultValue="0">
          <Summary><![CDATA[X offset]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetXDelta&quot;" />
            <Attribute Type="Description" RawValue="X offset" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YDelta" Type="int" DefaultValue="0">
          <Summary><![CDATA[Y offset]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetYDelta&quot;" />
            <Attribute Type="Description" RawValue="Y offset" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Type="LoadMask">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadMask&quot;, typeof(LoadMaskJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageButton" Extends="Button">
      <Summary><![CDATA[Simple ImageButton class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ImageButton runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;ImageUrl&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ImageButton), &quot;Build.ToolboxIcons.ImageButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Simple ImageButton class" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetOverImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;overImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDisabledImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetPressedImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pressedImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateText" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;altText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAltText&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="ImageAlign" DefaultValue="ImageAlign.NotSet">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="ImageAlign.NotSet" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAlign&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommand" Extends="ImageCommandBase">
      <Attributes>
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ImageCommandBase" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="SimpleToolTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommandCollection" Extends="BaseItemCollection&lt;ImageCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ImageCommandColumn" Extends="CellCommandColumn">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Hideable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) Specify as false to prevent the user from hiding this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) Specify as false to prevent the user from hiding this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuDisabled" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to disabled the column header menu containing sort/hide options. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disabled the column header menu containing sort/hide options. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightCommandAlign" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommands" Type="GroupImageCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupCommands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsCellCommand" Modifier="Override" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupCommand" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupCommands" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommand" Modifier="Override" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommands" Modifier="Override" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ImageCommandColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ImageCommandColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommandColumnDirectEvents" Extends="CellCommandColumnDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="GroupCommand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a group command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;command&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcommand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a group command is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommandColumnListeners" Extends="CellCommandColumnListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="GroupCommand" Type="ComponentListener">
          <Summary><![CDATA[Fires when a group command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;command&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;group&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcommand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a group command is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Complete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a resizer resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resizer resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerBeforeResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before resize is allowed. Set resizer.enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerbeforeresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set resizer.enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pan" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a pan]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;x&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;yDeylta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xDelta&quot;, typeof(int), &quot;xDelta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;yDelta&quot;, typeof(int), &quot;yDelta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pan&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a pan" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a double click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a double click" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Complete" Type="ComponentListener">
          <Summary><![CDATA[Fires after the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerResize" Type="ComponentListener">
          <Summary><![CDATA[Fired after a resizer resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resizer resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerBeforeResize" Type="ComponentListener">
          <Summary><![CDATA[Fired before resize is allowed. Set resizer.enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerbeforeresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set resizer.enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pan" Type="ComponentListener">
          <Summary><![CDATA[Fired after a pan]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;x&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;yDeylta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xDelta&quot;, typeof(int), &quot;xDelta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;yDelta&quot;, typeof(int), &quot;yDelta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pan&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a pan" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fired after a click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fired after a double click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a double click" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InclusionValidation" Extends="AbstractValidation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="List" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of options]]></Summary>
          <Attributes>
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Array" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of options" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InlineEditorDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeStartEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when editing is initiated, but before the value changes. Editing can be canceled by returning false from the handler of this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestartedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when editing is initiated, but before the value changes. Editing can be canceled by returning false from the handler of this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeComplete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a change has been made to the field, but before the change is reflected in the underlying field. Saving the change to the field can be canceled by returning false from the handler of this event. Note that if the value has not changed and ignoreNoChange = true, the editing will still end but this event will not fire since no edit actually occurred.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a change has been made to the field, but before the change is reflected in the underlying field. Saving the change to the field can be canceled by returning false from the handler of this event. Note that if the value has not changed and ignoreNoChange = true, the editing will still end but this event will not fire since no edit actually occurred." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after editing has been canceled and the editor's value has been reset.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after editing has been canceled and the editor's value has been reset." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after editing is complete and any changed value has been written to the underlying field.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after editing is complete and any changed value has been written to the underlying field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can check Ext.EventObject.getKey to determine which key was pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can check Ext.EventObject.getKey to determine which key was pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this editor is displayed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this editor is displayed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InlineEditorListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeStartEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires when editing is initiated, but before the value changes. Editing can be canceled by returning false from the handler of this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestartedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when editing is initiated, but before the value changes. Editing can be canceled by returning false from the handler of this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires after a change has been made to the field, but before the change is reflected in the underlying field. Saving the change to the field can be canceled by returning false from the handler of this event. Note that if the value has not changed and ignoreNoChange = true, the editing will still end but this event will not fire since no edit actually occurred.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a change has been made to the field, but before the change is reflected in the underlying field. Saving the change to the field can be canceled by returning false from the handler of this event. Note that if the value has not changed and ignoreNoChange = true, the editing will still end but this event will not fire since no edit actually occurred." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires after editing has been canceled and the editor's value has been reset.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after editing has been canceled and the editor's value has been reset." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="ComponentListener">
          <Summary><![CDATA[Fires after editing is complete and any changed value has been written to the underlying field.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after editing is complete and any changed value has been written to the underlying field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentListener">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can check Ext.EventObject.getKey to determine which key was pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can check Ext.EventObject.getKey to determine which key was pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires when this editor is displayed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this editor is displayed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InsertOrderedDictionary" Inherits="TValue&gt;:Dictionary&lt;TKey,TValue&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="IntArrayJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ISODateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollection" Extends="Collection&lt;AbstractComponent&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollectionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemsCollection&lt;T&gt;" Extends="List&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JFunction" Extends="BaseItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JFunctionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JRawValue">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JRawValueJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JSON">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JSONDateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JsonObject" Extends="Dictionary" Inherits="object&gt;">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JsonPProxy" Extends="ServerProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoAppendParams" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically append the request's params to the generated url. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically append the request's params to the generated url. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CallbackKey" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specifies the GET parameter that will be sent to the server containing the function name to be executed when the request completes. Defaults to callback. Thus, a common request will be in the form of url?callback=Ext.data.JsonP.callback1]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies the GET parameter that will be sent to the server containing the function name to be executed when the request completes. Defaults to callback. Thus, a common request will be in the form of url?callback=Ext.data.JsonP.callback1" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RecordParam" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The param name to use when passing records to the server (e.g. 'records=someEncodedRecordString'). Defaults to 'records']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The param name to use when passing records to the server (e.g. 'records=someEncodedRecordString'). Defaults to 'records'" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="JsonReader" Extends="AbstractReader">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Record" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The optional location within the JSON response that the record data itself can be found at. See the JsonReader intro docs for more details. This is not often needed and defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The optional location within the JSON response that the record data itself can be found at. See the JsonReader intro docs for more details. This is not often needed and defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseSimpleAccessors" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ensure that field names/mappings are treated as literals when reading values. Defalts to false. For example, by default, using the mapping \"foo.bar.baz\" will try and read a property foo from the root, then a property bar from foo, then a property baz from bar. Setting the simple accessors to true will read the property with the name \"foo.bar.baz\" direct from the root object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ensure that field names/mappings are treated as literals when reading values. Defalts to false. For example, by default, using the mapping \&quot;foo.bar.baz\&quot; will try and read a property foo from the root, then a property bar from foo, then a property baz from bar. Setting the simple accessors to true will read the property with the name \&quot;foo.bar.baz\&quot; direct from the root object." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="JsonWriter" Extends="AbstractWriter">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The key under which the records in this Writer will be placed. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The key under which the records in this Writer will be placed. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Encode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use Ext.encode() on the data before sending. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to use Ext.encode() on the data before sending. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowSingle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to ensure that records are always wrapped in an array, even if there is only one record being sent. When there is more than one record, they will always be encoded into an array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="False to ensure that records are always wrapped in an array, even if there is only one record being sent. When there is more than one record, they will always be encoded into an array." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Key" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyBinding" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Shift" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when shift is pressed, False to handle the key only when shift is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when shift is pressed, False to handle the key only when shift is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ctrl" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when ctrl is pressed, False to handle the key only when ctrl is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when ctrl is pressed, False to handle the key only when ctrl is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alt" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when alt is pressed, False to handle the key only when alt is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when alt is pressed, False to handle the key only when alt is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event from bubbling and prevent the default browser action if the key was handled by the KeyMap (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event from bubbling and prevent the default browser action if the key was handled by the KeyMap (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="KeyListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListenerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeysProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;key&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="KeyBindingCollection" Extends="BaseItemCollection&lt;KeyBinding&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyCollection" Extends="BaseItemCollection&lt;Key&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyListeners" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Event" Type="SimpleListener">
          <Summary><![CDATA[The function to call when KeyMap finds the expected key combination.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The function to call when KeyMap finds the expected key combination." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="KeyMap" Extends="Observable">
      <Summary><![CDATA[Handles mapping keys to actions for an element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Keys&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Keys&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:KeyMap runat=\&quot;server\&quot;&gt;&lt;/{0}:KeyMap&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(KeyMap), &quot;Build.ToolboxIcons.KeyMap.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Handles mapping keys to actions for an element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Keys" Type="KeyBindingCollection">
          <Summary><![CDATA[A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;keys&quot;, JsonMode.Array" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Description" RawValue="A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to bind to]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to bind to" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The event to bind to (defaults to 'keydown')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) The event to bind to (defaults to 'keydown')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Enable">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Disable">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddKeyBinding" ParamsRaw="KeyBinding keyBinding">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="KeyNav" Extends="Observable">
      <Summary><![CDATA[Provides a convenient wrapper for normalized keyboard navigation. KeyNav allows you to bind navigation keys to function calls that will get called when the keys are pressed, providing an easy way to implement custom navigation schemes for any UI component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:KeyNav runat=\&quot;server\&quot;&gt;&lt;/{0}:KeyNav&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(KeyNav), &quot;Build.ToolboxIcons.KeyMap.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for normalized keyboard navigation. KeyNav allows you to bind navigation keys to function calls that will get called when the keys are pressed, providing an easy way to implement custom navigation schemes for any UI component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to bind to]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to bind to" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Left" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Right" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Up" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Down" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageUp" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageDown" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Del" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Home" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="End" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enter" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Esc" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tab" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultEventAction" Type="KeyEventAction" DefaultValue="KeyEventAction.StopEvent">
          <Summary><![CDATA[The method to call on the Ext.EventObject after this KeyNav intercepts a key. Valid values are Ext.EventObject.stopEvent, Ext.EventObject.preventDefault and Ext.EventObject.stopPropagation (defaults to 'stopEvent')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="KeyEventAction.StopEvent" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The method to call on the Ext.EventObject after this KeyNav intercepts a key. Valid values are Ext.EventObject.stopEvent, Ext.EventObject.preventDefault and Ext.EventObject.stopPropagation (defaults to 'stopEvent')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable this KeyNav instance (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetDisabled&quot;" />
            <Attribute Type="Description" RawValue="True to disable this KeyNav instance (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceKeyDown" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Handle the keydown event instead of keypress (defaults to false). KeyNav automatically does this for IE since IE does not propagate special keys on keypress, but setting this to true will force other browsers to also handle keydown instead of keypress.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown event instead of keypress (defaults to false). KeyNav automatically does this for IE since IE does not propagate special keys on keypress, but setting this to true will force other browsers to also handle keydown instead of keypress." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Label" Extends="LabelBase">
      <Summary><![CDATA[Produces a standalone <label /> element which can be inserted into a form and be associated with a field in that form using the forId property.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Label runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Html&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Html&quot;" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Label), &quot;Build.ToolboxIcons.Label.bmp&quot;" />
        <Attribute Type="Description" RawValue="Produces a standalone &lt;label /&gt; element which can be inserted into a form and be associated with a field in that form using the forId property." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="AbstractComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="AbstractComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Labelable" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveError" Type="string" DefaultValue="null">
          <Summary><![CDATA[If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="If specified, then the component will be displayed with this value as its active error when first rendered. Defaults to undefined. Use setActiveError or unsetActiveError to change it after component creation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveErrorsTpl" Type="string" DefaultValue="null">
          <Summary><![CDATA[The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeErrorsTpl&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template used to format the Array of error messages passed to setActiveErrors into a single HTML string. By default this renders each message as an item in an unordered list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFitErrors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to adjust the component's body area to make room for 'side' or 'under' error messages. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseBodyCls" Type="string" DefaultValue="&quot;x-form-item-body&quot;">
          <Summary><![CDATA[The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item-body&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the body content element. Defaults to 'x-form-item-body'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearCls" Type="string" DefaultValue="&quot;x-clear&quot;">
          <Summary><![CDATA[The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-clear&quot;" />
            <Attribute Type="Description" RawValue="The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyCls" Type="string" DefaultValue="&quot;x-form-dirty&quot;">
          <Summary><![CDATA[The CSS class to use when the field value is dirty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-dirty&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the field value is dirty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMsgCls" Type="string" DefaultValue="&quot;x-form-error-msg&quot;">
          <Summary><![CDATA[The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-error-msg&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the error message element. Defaults to 'x-form-error-msg'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldBodyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An extra CSS class to be applied to the body content element in addition to fieldBodyCls. Defaults to empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An extra CSS class to be applied to the body content element in addition to fieldBodyCls. Defaults to empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label for the field. It gets appended with the labelSeparator, and its position and sizing is determined by the labelAlign, labelWidth, and labelPad configs. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusCls" Type="string" DefaultValue="&quot;x-form-focus&quot;">
          <Summary><![CDATA[The CSS class to use when the field receives focus (defaults to 'x-form-focus')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-focus&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the field receives focus (defaults to 'x-form-focus')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormItemCls" Type="string" DefaultValue="&quot;x-form-item&quot;">
          <Summary><![CDATA[A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-item&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to be applied to the outermost element to denote that it is participating in the form field layout. Defaults to 'x-form-item'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEmptyLabel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[ When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue=" When set to true, the label element (fieldLabel and labelSeparator) will be automatically hidden if the fieldLabel is empty." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabel" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true to completely hide the label element (fieldLabel and labelSeparator). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidCls" Type="string" DefaultValue="&quot;x-form-invalid&quot;">
          <Summary><![CDATA[The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-invalid&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when marking the component invalid (defaults to 'x-form-invalid')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelAlign" Type="LabelAlign" DefaultValue="LabelAlign.Left">
          <Summary><![CDATA[Controls the position and alignment of the fieldLabel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="LabelAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Controls the position and alignment of the fieldLabel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to be applied to the label element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;labelClsExtra&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to be applied to the label element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelPad" Type="int" DefaultValue="5">
          <Summary><![CDATA[The amount of space in pixels between the fieldLabel and the input field. Defaults to 5.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount of space in pixels between the fieldLabel and the input field. Defaults to 5." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSeparator" Type="string" DefaultValue="&quot;:&quot;">
          <Summary><![CDATA[Character(s) to be inserted at the end of the label text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;:&quot;" />
            <Attribute Type="Description" RawValue="Character(s) to be inserted at the end of the label text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS style specification string to apply directly to this field's label. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS style specification string to apply directly to this field's label. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \"left\" or \"right\". Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of the fieldLabel in pixels. Only applicable if the labelAlign is set to \&quot;left\&quot; or \&quot;right\&quot;. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTarget" Type="MessageTarget" DefaultValue="MessageTarget.Qtip">
          <Summary><![CDATA[The location where the error message text should display.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="TypeConverter" RawValue="typeof(MessageTarget)" />
            <Attribute Type="DefaultValue" RawValue="MessageTarget.Qtip" />
            <Attribute Type="Description" RawValue="The location where the error message text should display." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTargetElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Add the error message directly to the innerHTML of the specified element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;msgTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Add the error message directly to the innerHTML of the specified element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventMark" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to disable displaying any error message set on this object. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to disable displaying any error message set on this object. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to mark the field as readOnly in HTML (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to mark the field as readOnly in HTML (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnlyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class applied to the component's main element when it is readOnly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to the component's main element when it is readOnly." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitValue" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Setting this to false will prevent the field from being submitted even when it is not disabled. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Setting this to false will prevent the field from being submitted even when it is not disabled. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveIndicatorIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Preserve indicator icon place. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Preserve indicator icon place. Defaults to false" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LabelBase" Abstract="true" Extends="ComponentBase" Inherits="ITextControl,IIcon">
      <Summary><![CDATA[Produces a standalone <label /> element which can be inserted into a form and be associated with a field in that form using the forId property.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Produces a standalone &lt;label /&gt; element which can be inserted into a form and be associated with a field in that form using the forId property." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The format of the string to render using the .Text property. Example 'Hello {0}'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The format of the string to render using the .Text property. Example 'Hello {0}'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text to display if the Text property is empty (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text to display if the Text property is empty (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the input element to which this label will be bound via the standard HTML 'for' attribute. If not specified, the attribute will not be added to the label. In most cases you will be associating the label with a Ext.form.field.Base component, so you should make sure this matches the inputId of that field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;forId&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the input element to which this label will be bound via the standard HTML 'for' attribute. If not specified, the attribute will not be added to the label. In most cases you will be associating the label with a Ext.form.field.Base component, so you should make sure this matches the inputId of that field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment that will be used as the label's innerHTML (defaults to ''). Note that if text is specified it will take precedence and this value will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHtml&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An HTML fragment that will be used as the label's innerHTML (defaults to ''). Note that if text is specified it will take precedence and this value will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;text&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the label. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The icon to use in the label. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this label.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this label." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconAlign" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[(optional) Set the CSS text-align property of the icon. The center is not supported. Defaults to \"Left\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="Description" RawValue="(optional) Set the CSS text-align property of the icon. The center is not supported. Defaults to \&quot;Left\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editor" Type="ItemsCollection&lt;Editor&gt;">
          <Summary><![CDATA[Inline editor]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;editor&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Inline editor" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Layer" Extends="Element">
      <Summary><![CDATA[An extended Ext.Element object that supports a shadow and shim, constrain to viewport and automatic maintaining of shadow/shim positions.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="An extended Ext.Element object that supports a shadow and shim, constrain to viewport and automatic maintaining of shadow/shim positions." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LayerConfig" Extends="BaseItem">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DH" Type="DomObject">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;dh&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode?" DefaultValue="null">
          <Summary><![CDATA[A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A String which specifies how this AbstractComponent's encapsulating DOM element will be hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.None" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShadowOffset" Type="int" DefaultValue="4">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="4" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shim" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDisplay" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VisibilityCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZIndex" Type="int" DefaultValue="11000">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;zindex&quot;" />
            <Attribute Type="DefaultValue" RawValue="11000" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParentElement" Type="Element" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParentElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;parentEl&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExistingElement" Type="Element" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutConfig" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to the container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules. See Ext.Component.ctCls also.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to the container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules. See Ext.Component.ctCls also." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ManageOverflow" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReserveScrollbar" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutConfigCollection" Extends="BaseItemCollection&lt;LayoutConfig&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LazyControlJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LazyObservable" Abstract="true" Extends="Observable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LengthValidation" Extends="AbstractValidation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Max" Type="int" DefaultValue="int.MaxValue">
          <Summary><![CDATA[Maximum value length allowed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MaxValue" />
            <Attribute Type="Description" RawValue="Maximum value length allowed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Min" Type="int" DefaultValue="int.MinValue">
          <Summary><![CDATA[Minimum value length allowed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" RawValue="Minimum value length allowed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LineSeries" Extends="CartesianSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fill" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true, the area below the line will be filled in using the eefill and opacity config properties. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true, the area below the line will be filled in using the eefill and opacity config properties. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMarkers" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether markers should be displayed at the data points along the line. If true, then the markerConfig config item will determine the markers' styling. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether markers should be displayed at the data points along the line. If true, then the markerConfig config item will determine the markers' styling. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkerConfig" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;markerConfig&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionTolerance" Type="int" DefaultValue="20">
          <Summary><![CDATA[The offset distance from the cursor position to the line series to trigger events (then used for highlighting series, etc). Defaults to: 20]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The offset distance from the cursor position to the line series to trigger events (then used for highlighting series, etc). Defaults to: 20" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Smooth" Type="int" DefaultValue="0">
          <Summary><![CDATA[If set to a non-zero number, the line will be smoothed/rounded around its points; otherwise straight line segments will be drawn.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="If set to a non-zero number, the line will be smoothed/rounded around its points; otherwise straight line segments will be drawn." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LinkButton" Extends="Button">
      <Summary><![CDATA[Simple LinkButton class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:LinkButton runat=\&quot;server\&quot; Text=\&quot;LinkButton\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(LinkButton), &quot;Build.ToolboxIcons.LinkButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="Description" RawValue="Simple LinkButton class" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Listener" Extends="ComponentListener">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenerConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerArgumentAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = true, Inherited = true" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerArgumentAttributeComparer" Extends="IComparer&lt;ListenerArgumentAttribute&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerCollection" Extends="BaseItemCollection&lt;Listener&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerPropertyInfo">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenersConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerTriplet">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The loading text displayed when data loading]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The loading text displayed when data loading" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadOnShow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true then the data loading on show]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true then the data loading on show" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify true to group all items in this list into a single-select radio button group. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify true to group all items in this list into a single-select radio button group. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of options]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelField" Type="string" DefaultValue="&quot;text&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OptionsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;options&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelFieldProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;text&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;labelField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListItem" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Index" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="ParameterMode" DefaultValue="ParameterMode.Value">
          <Summary><![CDATA[Wrap in quotes or not]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="ParameterMode.Value" />
            <Attribute Type="Description" RawValue="Wrap in quotes or not" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListItemCollection" Extends="BaseItemCollection&lt;ListItem&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListItemCollectionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LoadConfig" Extends="BaseLoadConfig">
      <Summary><![CDATA[The only required property is url. The optional properties nocache, text and scripts are shorthand for disableCaching, indicatorText and loadScripts and are used to set their associated property on this panel Updater instance.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="The only required property is url. The optional properties nocache, text and scripts are shorthand for disableCaching, indicatorText and loadScripts and are used to set their associated property on this panel Updater instance." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LoadMask" Extends="BaseItem">
      <Summary><![CDATA[A simple utility class for generically masking elements while loading data. If the element being masked has an underlying Ext.data.Store, the masking will be automatically synchronized with the store's loading process and the mask element will be cached for reuse. For all other elements, this mask will replace the element's UpdateOptions load indicator and will be destroyed after the initial load.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A simple utility class for generically masking elements while loading data. If the element being masked has an underlying Ext.data.Store, the masking will be automatically synchronized with the store's loading process and the mask element will be cached for reuse. For all other elements, this mask will replace the element's UpdateOptions load indicator and will be destroyed after the initial load." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShowMask" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Msg" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The text to display in a centered loading message box (defaults to 'Loading...').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Description" RawValue="The text to display in a centered loading message box (defaults to 'Loading...')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgCls" Type="string" DefaultValue="&quot;x-mask-loading&quot;">
          <Summary><![CDATA[The CSS class to apply to the loading message element (defaults to 'x-mask-loading').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-mask-loading&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to the loading message element (defaults to 'x-mask-loading')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional Store to which the mask is bound. The mask is displayed when a load request is issued, and hidden on either load success, or load fail.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="Optional Store to which the mask is bound. The mask is displayed when a load request is issued, and hidden on either load success, or load fail." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseMsg" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not to use a loading message class or simply mask the bound element. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not to use a loading message class or simply mask the bound element. Defaults to: true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LoadMaskJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LocalStorageProxy" Extends="WebStorageProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Margins" Extends="IEquatable&lt;Margins&gt;">
      <Summary><![CDATA[An object containing margins to apply to the region when in the expanded state.]]></Summary>
      <Attributes>
        <Attribute Type="Serializable" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" RawValue="An object containing margins to apply to the region when in the expanded state." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MarginsJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Mask" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MaskConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Msg" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An id or Element from which the message box should animate as it opens and closes (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An id or Element from which the message box should animate as it opens and closes (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ElProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Menu" Extends="MenuBase">
      <Summary><![CDATA[A menu object. This is the container to which you may add menu items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Menu runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item1\&quot; /&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item2\&quot; /&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item3\&quot; /&gt;&lt;/Items&gt;&lt;/ext:Menu&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Menu), &quot;Build.ToolboxIcons.Menu.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A menu object. This is the container to which you may add menu items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuBase" Abstract="true" Extends="AbstractPanel" Inherits="INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowOtherMenus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow multiple menus to be displayed at the same time (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow multiple menus to be displayed at the same time (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAlign" Type="string" DefaultValue="&quot;tl-bl?&quot;">
          <Summary><![CDATA[The default Ext.Element#getAlignToXY anchor position value for this menu relative to its element of origin. Defaults to: \"tl-bl?\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-bl?&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default Ext.Element#getAlignToXY anchor position value for this menu relative to its element of origin. Defaults to: \&quot;tl-bl?\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;menuitem&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;menuitem&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FloatingProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;floating&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreParentClicks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to remove the incised line down the left side of the menu and to not indent general Component items. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to remove the incised line down the left side of the menu and to not indent general Component items. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowSeparator" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the icon separator. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the icon separator. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableMenuNavigation" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToForm" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableMenuNavigationProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;keyNav&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="DeactivateActiveItem">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string element, string position, int[] offsets">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string element, string position">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string element">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MenuCollection" Extends="ItemsCollection&lt;MenuBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="MenuBase">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuCommand" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledClass" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="CommandMenu">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the click event of this menu item (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function that will handle the click event of this menu item (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuCommandCollection" Extends="BaseItemCollection&lt;MenuCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MenuDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this menu is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this menu is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse enters this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse leaves this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse is hovering over this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse is hovering over this menu" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItem" Extends="MenuItemBase">
      <Summary><![CDATA[A base class for all menu items that require menu-related functionality such as click handling, sub-menus, icons, etc.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A base class for all menu items that require menu-related functionality such as click handling, sub-menus, icons, etc." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MenuItemListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MenuItemDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItemBase" Abstract="true" Extends="ComponentBase" Inherits="IIcon,IAutoPostBack,IPostBackEventHandler,IButtonControl">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="UrlProperty" RawValue="&quot;*.aspx&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.UrlEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnClientClick" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript to execute when the item is clicked. Or, please use the &lt;Listeners> for more flexibility.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The JavaScript to execute when the item is clicked. Or, please use the &amp;lt;Listeners&gt; for more flexibility." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class added to the menu item when the item is activated (focused/mouseover). Defaults to Ext.baseCSSPrefix + 'menu-item-active'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class added to the menu item when the item is activated (focused/mouseover). Defaults to Ext.baseCSSPrefix + 'menu-item-active'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CanActivate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not this menu item can be activated when focused/mouseovered. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not this menu item can be activated when focused/mouseovered. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickHideDelay" Type="int" DefaultValue="1">
          <Summary><![CDATA[The delay in milliseconds to wait before hiding the menu after clicking the menu item. This only has an effect when hideOnClick: true. Defaults to 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The delay in milliseconds to wait before hiding the menu after clicking the menu item. This only has an effect when hideOnClick: true. Defaults to 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the click event of this menu item (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetHandler&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function that will handle the click event of this menu item (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope (this reference) in which the handler function will be called.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler function will be called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DestroyMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not to destroy any associated sub-menu when this item is destroyed. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not to destroy any associated sub-menu when this item is destroyed. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether to not to hide the owning menu when this item is clicked. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MenuItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to not to hide the owning menu when this item is clicked. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;#&quot;">
          <Summary><![CDATA[The href attribute to use for the underlying anchor link. Defaults to #.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;#&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The href attribute to use for the underlying anchor link. Defaults to #." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HrefTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target attribute to use for the underlying anchor link. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target attribute to use for the underlying anchor link. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The path to an icon to display in this item. Defaults to Ext.BLANK_IMAGE_URL.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Url" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetIconUrl&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The path to an icon to display in this item. Defaults to Ext.BLANK_IMAGE_URL." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that specifies a background-image to use as the icon for this item. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="A CSS class that specifies a background-image to use as the icon for this item. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default Ext.Element.getAlignToXY anchor position value for this item's sub-menu relative to this item's position. Defaults to 'tl-tr?'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default Ext.Element.getAlignToXY anchor position value for this item's sub-menu relative to this item's position. Defaults to 'tl-tr?'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuExpandDelay" Type="int" DefaultValue="200">
          <Summary><![CDATA[The delay in milliseconds before this item's sub-menu expands after this item is moused over. Defaults to 200.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The delay in milliseconds before this item's sub-menu expands after this item is moused over. Defaults to 200." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuHideDelay" Type="int" DefaultValue="200">
          <Summary><![CDATA[The delay in milliseconds before this item's sub-menu hides after this item is moused out. Defaults to 200.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The delay in milliseconds before this item's sub-menu hides after this item is moused out. Defaults to 200." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether or not this item is plain text/html with no icon or visual activation. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not this item is plain text/html with no icon or visual activation. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display in this item (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.WithSet" />
            <Attribute Type="Description" RawValue="The text to display in this item (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="MenuCollection">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted) or QuickTips config object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTooltip&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ReadOnly" RawValue="false" />
            <Attribute Type="Browsable" RawValue="true" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Always" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted) or QuickTips config object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTipCfg" Type="QTipCfg">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTipType" Type="ToolTipType" DefaultValue="ToolTipType.Qtip">
          <Summary><![CDATA[The type of tooltip to use. Either 'qtip' for QuickTips or 'title' for title attribute. Defaults to: \"qtip\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltipType&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="ToolTipType.Qtip" />
            <Attribute Type="Description" RawValue="The type of tooltip to use. Either 'qtip' for QuickTips or 'title' for title attribute. Defaults to: \&quot;qtip\&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItemDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this item is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this item is activated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this tiem is deactivated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this tiem is deactivated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItemListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Activate" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is activated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is deactivated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is deactivated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this menu is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this menu is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse enters this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse leaves this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse is hovering over this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse is hovering over this menu" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuPanel" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MenuPanel runat=\&quot;server\&quot; Title=\&quot;Menu\&quot; Height=\&quot;300\&quot; Width=\&quot;185\&quot;&gt;&lt;Menu&gt;&lt;Items&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item1\&quot;&gt;&lt;Menu&gt;&lt;ext:Menu runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;SubItem1\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;SubItem2\&quot; /&gt;&lt;/Items&gt;&lt;/ext:Menu&gt;&lt;/Menu&gt;&lt;/ext:MenuItem&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item2\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item3\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item4\&quot; /&gt;&lt;/Items&gt;&lt;/Menu&gt;&lt;/{0}:MenuPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MenuPanel), &quot;Build.ToolboxIcons.MenuPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Modifier="Override" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="Menu">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Save selection after click]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Save selection after click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Index of selected item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSelectedIndex&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Index of selected item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetSelectedIndex" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MenuSeparator" Extends="MenuItemBase">
      <Summary><![CDATA[Adds a separator bar to a menu, used to divide logical groups of menu items. Generally you will add one of these by using \" - \" in your call to add() or in your items config rather than creating one directly.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Adds a separator bar to a menu, used to divide logical groups of menu items. Generally you will add one of these by using \&quot; - \&quot; in your call to add() or in your items config rather than creating one directly." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SeparatorCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class used by the separator item to show the incised line. Defaults to Ext.baseCSSPrefix + 'menu-item-separator'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Separator&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class used by the separator item to show the incised line. Defaults to Ext.baseCSSPrefix + 'menu-item-separator'." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonConfig" Extends="ExtObject">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonsConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonTextConfig" Extends="ExtObject">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Ok" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cancel" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Yes" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="No" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBoxConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An id or Element from which the message box should animate as it opens and closes (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An id or Element from which the message box should animate as it opens and closes (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;buttons&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the top-right close button (defaults to true). Note that progress and wait dialogs will ignore this property and always hide the close button as they can only be closed programmatically.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the top-right close button (defaults to true). Note that progress and wait dialogs will ignore this property and always hide the close button as they can only be closed programmatically." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom CSS class to apply to the message box's container element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom CSS class to apply to the message box's container element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultilineHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;0&quot;">
          <Summary><![CDATA[The height in pixels to create the textbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;multiline&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;0&quot;" />
            <Attribute Type="Description" RawValue="The height in pixels to create the textbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;600&quot;">
          <Summary><![CDATA[The maximum width in pixels of the message box (defaults to 600)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;600&quot;" />
            <Attribute Type="Description" RawValue="The maximum width in pixels of the message box (defaults to 600)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[The minimum width in pixels of the message box (defaults to 100)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="Description" RawValue="The minimum width in pixels of the message box (defaults to 100)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to allow user interaction with the page while the message box is displayed (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to allow user interaction with the page while the message box is displayed (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string that will replace the existing message box body text (defaults to the XHTML-compliant non-breaking space character '&#160;')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;msg&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string that will replace the existing message box body text (defaults to the XHTML-compliant non-breaking space character '&amp;#160;')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Multiline" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to enter multi-line text (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to enter multi-line text (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Progress" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a progress bar (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a progress bar (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProgressText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display inside the progress bar if progress = true (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the progress bar if progress = true (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prompt" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to enter single-line text (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to enter single-line text (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProxyDrag" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a lightweight proxy while dragging (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a lightweight proxy while dragging (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The string value to set into the active textbox element if displayed]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string value to set into the active textbox element if displayed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wait" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a progress bar (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a progress bar (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WaitConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;waitConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;0&quot;">
          <Summary><![CDATA[The width of the dialog in pixels]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;0&quot;" />
            <Attribute Type="Description" RawValue="The width of the dialog in pixels" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBus" Extends="LazyObservable" Inherits="IVirtual">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MessageBus runat=\&quot;server\&quot;&gt;&lt;/{0}:MessageBus&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultBus" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBusDirectEvent" Extends="ComponentDirectEvent">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Bus" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;**&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;**&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBusDirectEvents" Extends="BaseItemCollection&lt;MessageBusDirectEvent&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBusListener" Extends="ComponentListener">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Bus" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;**&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;**&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBusListeners" Extends="BaseItemCollection&lt;MessageBusListener&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MetaAttribute" Extends="Attribute">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Method, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Model" Extends="Observable" Inherits="ICustomConfigSerialization,IVirtual">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="null">
          <Summary><![CDATA[The model name. Required]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The model name. Required" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BelongsTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[One or more BelongsTo associationa for this model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="One or more BelongsTo associationa for this model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BelongsToProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;belongsTo&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HasMany" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[One or more HasMany associations for this model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="One or more HasMany associations for this model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HasManyProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;hasMany&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClientIdProperty" Type="string" DefaultValue="&quot;clientId&quot;">
          <Summary><![CDATA[The name of a property that is used for submitting this Model's unique client-side identifier to the server when multiple phantom records are saved]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;clientId&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of a property that is used for submitting this Model's unique client-side identifier to the server when multiple phantom records are saved" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Extend" Type="string" DefaultValue="&quot;Ext.data.Model&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;Ext.data.Model&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fields" Type="ModelFieldCollection">
          <Summary><![CDATA[An array of fields definition objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An array of fields definition objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the field treated as this Model's unique id (defaults to 'id').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idProperty&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the field treated as this Model's unique id (defaults to 'id')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Proxy" Type="ProxyCollection">
          <Summary><![CDATA[The Proxy object which provides access to a data object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&gt;Primary&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Proxy object which provides access to a data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Associations" Type="AssociationCollection">
          <Summary><![CDATA[Models associations]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Models associations" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Validations" Type="ValidationCollection">
          <Summary><![CDATA[Models validations]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Array" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Models validations" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDGen" Type="ModelIdGeneratorCollection">
          <Summary><![CDATA[The id generator to use for this model. The default id generator does not generate values for the idProperty.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idgen&gt;Primary&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The id generator to use for this model. The default id generator does not generate values for the idProperty." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ModelCollection" Extends="SingleItemCollection&lt;Model&gt;">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="Model">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ModelField" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name by which the field is referenced within the Model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The name by which the field is referenced within the Model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NameProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;name&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mapping" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) A path expression for use by the Ext.data.reader.Reader implementation that is creating the Model to extract the Field value from the data object. If the path expression is the same as the field name, the mapping may be omitted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) A path expression for use by the Ext.data.reader.Reader implementation that is creating the Model to extract the Field value from the data object. If the path expression is the same as the field name, the mapping may be omitted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ServerMapping" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="ModelFieldType" DefaultValue="ModelFieldType.Auto">
          <Summary><![CDATA[(Optional) The data type for automatic conversion from received data to the stored value if convert has not been specified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="ModelFieldType.Auto" />
            <Attribute Type="Description" RawValue="(Optional) The data type for automatic conversion from received data to the stored value if convert has not been specified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortType" Type="SortTypeMethod" DefaultValue="SortTypeMethod.None">
          <Summary><![CDATA[Sort method]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ToLowerCamelCase)" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortTypeMethod.None" />
            <Attribute Type="Description" RawValue="Sort method" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortDir" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[(Optional) Initial direction to sort]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="Description" RawValue="(Optional) Initial direction to sort" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitEmptyValue" Type="EmptyValue" DefaultValue="EmptyValue.None">
          <Summary><![CDATA[Empty value representation during saving (default value as None)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="EmptyValue.None" />
            <Attribute Type="Description" RawValue="Empty value representation during saving (default value as None)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomSortType" Type="JFunction">
          <Summary><![CDATA[A function which converts a Field's value to a comparable value in order to ensure correct sort ordering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortType&quot;, JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A function which converts a Field's value to a comparable value in order to ensure correct sort ordering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Convert" Type="JFunction">
          <Summary><![CDATA[(Optional) A function which converts the value provided by the Reader into an object that will be stored in the Record.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="(Optional) A function which converts the value provided by the Reader into an object that will be stored in the Record." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NullConvert" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NullConvertProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;convert&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderMilliseconds" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormat" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) Used when converting received data into a Date when the type is specified as \"date\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(NetToPHPDateFormatStringJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) Used when converting received data into a Date when the type is specified as \&quot;date\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) The default value used when a Model is being created by a Reader when the item referenced by the mapping does not exist in the data object (i.e. undefined). (defaults to \"\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) The default value used when a Model is being created by a Reader when the item referenced by the mapping does not exist in the data object (i.e. undefined). (defaults to \&quot;\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsComplex" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render this property as complex object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render this property as complex object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Persist" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to exclude this field from the Ext.data.Model.modified fields in a model. This will also exclude the field from being written using a Ext.data.writer.Writer. This option is useful when model fields are used to keep state on the client but do not need to be persisted to the server. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to exclude this field from the Ext.data.Model.modified fields in a model. This will also exclude the field from being written using a Ext.data.writer.Writer. This option is useful when model fields are used to keep state on the client but do not need to be persisted to the server. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseNull" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Use when converting received data into a Number type (either int or float). If the value cannot be parsed, null will be used if useNull is true, otherwise the value will be 0. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Use when converting received data into a Number type (either int or float). If the value cannot be parsed, null will be used if useNull is true, otherwise the value will be 0. Defaults to false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ModelFieldCollection" Extends="BaseItemCollection&lt;ModelField&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ModelIdGenerator" Abstract="true" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id by which to register a new instance. This instance can be found using the get static method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id by which to register a new instance. This instance can be found using the get static method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetRecId" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ModelIdGeneratorCollection" Extends="SingleItemStateCollection&lt;ModelIdGenerator&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="ModelIdGenerator">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;idgen&quot;, JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ModelProxy">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MonthPicker" Extends="ComponentBase" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,INoneContentable">
      <Summary><![CDATA[A month picker component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MonthPicker runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MonthPicker), &quot;Build.ToolboxIcons.DatePicker.bmp&quot;" />
        <Attribute Type="Description" RawValue="A month picker component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;select&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;select&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the cancel button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="UrlProperty" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the cancel button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the ok button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the ok button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The class to be added to selected items in the picker. Defaults to 'x-monthpicker-selected']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The class to be added to selected items in the picker. Defaults to 'x-monthpicker-selected'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowButtons" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show ok and cancel buttons below the picker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show ok and cancel buttons below the picker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedDate" Type="DateTime?" DefaultValue="null">
          <Summary><![CDATA[Gets or sets the current selected date of the MonthPicker. Accepts and returns a DateTime object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetValue&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the MonthPicker. Accepts and returns a DateTime object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedDateProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedMonth" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Selected month number]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Selected month number" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedYear" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Selected year number]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. MonthPicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Selected year number" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="MonthPickerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MonthPickerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthPickerDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="CancelClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the cancel button is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cancelclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the cancel button is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a month is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;monthclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a month is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;monthdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OKClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the ok button is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;okclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the ok button is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a month/year is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month/year is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YearClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a year is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;yearclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a year is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YearDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a year is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;yeardblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a year is double clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthPickerListeners" Extends="AbstractComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="CancelClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the cancel button is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cancelclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the cancel button is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a month is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;monthclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a month is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;monthdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OKClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the ok button is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;okclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the ok button is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a month/year is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a month/year is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YearClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a year is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;yearclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a year is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YearDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a year is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;yeardblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a year is double clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthView" Extends="MonthViewBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MonthViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MonthViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewBase" Abstract="true" Extends="AbstractCalendarView">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShowHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a header beneath the navigation bar containing the week names above each week's column, false not to show it and instead display the week names in the first row of days in the calendar (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a header beneath the navigation bar containing the week names above each week's column, false not to show it and instead display the week names in the first row of days in the calendar (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekLinks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display an extra column before the first day in the calendar that links to the view for each individual week, false to not show it (defaults to false). If true, the week links can also contain the week number depending on the value of showWeekNumbers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display an extra column before the first day in the calendar that links to the view for each individual week, false to not show it (defaults to false). If true, the week links can also contain the week number depending on the value of showWeekNumbers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekNumbers" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show the week number for each week in the calendar in the week link column, false to show nothing (defaults to false). Note that if showWeekLinks is false this config will have no affect even if true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the week number for each week in the calendar in the week link column, false to show nothing (defaults to false). Note that if showWeekLinks is false this config will have no affect even if true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekLinkOverClass" Type="string" DefaultValue="&quot;ext-week-link-over&quot;">
          <Summary><![CDATA[The CSS class name applied when the mouse moves over a week link element (only applies when showWeekLinks is true, defaults to 'ext-week-link-over').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ext-week-link-over&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class name applied when the mouse moves over a week link element (only applies when showWeekLinks is true, defaults to 'ext-week-link-over')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewDirectEvents" Extends="AbstractCalendarViewDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DayClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within the view container and not on an event element. This is a cancelable event, so returning false from a handler will cancel the click without displaying the event editor view. This could be useful for validating that a user can only create events on certain days.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(bool), &quot;True if the day clicked on represents an all-day box, else false. Clicks within the MonthView always return true for this param.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within the view container and not on an event element. This is a cancelable event, so returning false from a handler will cancel the click without displaying the event editor view. This could be useful for validating that a user can only create events on certain days." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within a week link (when #showWeekLinks is true)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The start date of the week that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;weekclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a week link (when #showWeekLinks is true)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewListeners" Extends="AbstractCalendarViewListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DayClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within the view container and not on an event element. This is a cancelable event, so returning false from a handler will cancel the click without displaying the event editor view. This could be useful for validating that a user can only create events on certain days.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(bool), &quot;True if the day clicked on represents an all-day box, else false. Clicks within the MonthView always return true for this param.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within the view container and not on an event element. This is a cancelable event, so returning false from a handler will cancel the click without displaying the event editor view. This could be useful for validating that a user can only create events on certain days." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within a week link (when #showWeekLinks is true)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The start date of the week that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;weekclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a week link (when #showWeekLinks is true)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensor" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MouseDistanceSensor), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Threshold" Type="int" DefaultValue="100">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinOpacity" Type="decimal" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxOpacity" Type="decimal" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SensorElement" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SensorElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getSensorEls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainElement" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getConstrainEls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="MouseDistanceSensorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MouseDistanceSensorDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensorDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Far" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;far&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Near" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;near&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Distance" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;distance&quot;, typeof(int), &quot;distance in pixel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rdistance&quot;, typeof(decimal), &quot;relative distance&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;distance&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensorListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Far" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;far&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Near" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;near&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Distance" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;distance&quot;, typeof(int), &quot;distance in pixel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rdistance&quot;, typeof(decimal), &quot;relative distance&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;distance&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiCombo" Extends="ComboBoxBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[ComboBox with multi item selection.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MultiCombo runat=\&quot;server\&quot;&gt;&lt;/{0}:MultiCombo&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MultiCombo), &quot;Build.ToolboxIcons.MultiCombo.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="ComboBox with multi item selection." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WrapBySquareBrackets" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to wrap by square brackets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to wrap by square brackets." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionMode" Type="MultiSelectMode" DefaultValue="MultiSelectMode.Checkbox">
          <Summary><![CDATA[Selection UI mode]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="MultiSelectMode.Checkbox" />
            <Attribute Type="Description" RawValue="Selection UI mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to prevent the user from typing text directly into the field, just like a traditional select (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="False to prevent the user from typing text directly into the field, just like a traditional select (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ComboBoxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ComboBoxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SelectAll">
          <Summary><![CDATA[Select all items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select all items" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectItem" ParamsRaw="int index">
          <Summary><![CDATA[Deselect item by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselect item by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectItem" ParamsRaw="string value">
          <Summary><![CDATA[Deselect item by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselect item by value" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectItem" ParamsRaw="int index">
          <Summary><![CDATA[Select item by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select item by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectItem" ParamsRaw="string value">
          <Summary><![CDATA[Select item by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select item by value" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MultiSelect" Extends="MultiSelectBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A control that allows selection and form submission of multiple list items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MultiSelect runat=\&quot;server\&quot;&gt;&lt;/{0}:MultiSelect&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MultiSelect), &quot;Build.ToolboxIcons.MultiSelect.bmp&quot;" />
        <Attribute Type="Description" RawValue="A control that allows selection and form submission of multiple list items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MultiSelectListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MultiSelectDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectBase" Abstract="true" Extends="Field" Inherits="IPostBackEventHandler,IStore&lt;Store&gt;">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection&lt;Store&gt;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. MultiSelect&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ListItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedItems" Type="ListItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListTitle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional title to be displayed at the top of the selection list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional title to be displayed at the top of the selection list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddgroup name(s) for the MultiSelect DragZone (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The ddgroup name(s) for the MultiSelect DragZone (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddgroup name(s) for the View's DropZone (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The ddgroup name(s) for the View's DropZone (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDReorder" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether the items in the MultiSelect list are drag/drop reorderable (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddReorder&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether the items in the MultiSelect list are drag/drop reorderable (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TopBar" Type="ToolbarCollection">
          <Summary><![CDATA[An optional toolbar to be inserted at the top of the control's selection list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tbar&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An optional toolbar to be inserted at the top of the control's selection list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the list should only allow append drops when drag/drop is enabled (use for lists which are sorted, defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if the list should only allow append drops when drag/drop is enabled (use for lists which are sorted, defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Type="string" DefaultValue="&quot;text&quot;">
          <Summary><![CDATA[Name of the desired display field in the dataset (defaults to 'text').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
            <Attribute Type="Description" RawValue="Name of the desired display field in the dataset (defaults to 'text')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the desired value field in the dataset (defaults to the value of displayField).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Name of the desired value field in the dataset (defaults to the value of displayField)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to require at least one item in the list to be selected, true to allow no selection (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to require at least one item in the list to be selected, true to allow no selection (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxSelections" Type="int" DefaultValue="int.MaxValue">
          <Summary><![CDATA[Maximum number of selections allowed (defaults to Number.MAX_VALUE).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MaxValue" />
            <Attribute Type="Description" RawValue="Maximum number of selections allowed (defaults to Number.MAX_VALUE)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinSelections" Type="int" DefaultValue="0">
          <Summary><![CDATA[Minimum number of selections allowed (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Minimum number of selections allowed (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;This field is required&quot;">
          <Summary><![CDATA[Default text displayed when the control contains no items (defaults to 'This field is required')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;This field is required&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Default text displayed when the control contains no items (defaults to 'This field is required')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxSelectionsText" Type="string" DefaultValue="&quot;Maximum {0} item(s) allowed&quot;">
          <Summary><![CDATA[Validation message displayed when MaxSelections is not met (defaults to 'Maximum {0} item(s) allowed').  The {0} token will be replaced by the value of MaxSelections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Maximum {0} item(s) allowed&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Validation message displayed when MaxSelections is not met (defaults to 'Maximum {0} item(s) allowed').  The {0} token will be replaced by the value of MaxSelections." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinSelectionsText" Type="string" DefaultValue="&quot;Minimum {0} item(s) required&quot;">
          <Summary><![CDATA[Validation message displayed when MinSelections is not met (defaults to 'Minimum {0} item(s) required').  The {0} token will be replaced by the value of MinSelections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Minimum {0} item(s) required&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Validation message displayed when MinSelections is not met (defaults to 'Minimum {0} item(s) required').  The {0} token will be replaced by the value of MinSelections." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delimiter" Type="string" DefaultValue="&quot;,&quot;">
          <Summary><![CDATA[The string used to delimit the selected values when getSubmitValue submitting the field as part of a form. Defaults to ','. If you wish to have the selected values submitted as separate parameters rather than a single delimited parameter, set this to null.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;,&quot;" />
            <Attribute Type="Description" RawValue="The string used to delimit the selected values when getSubmitValue submitting the field as part of a form. Defaults to ','. If you wish to have the selected values submitted as separate parameters rather than a single delimited parameter, set this to null." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Copy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Causes drag operations to copy nodes rather than move (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Causes drag operations to copy nodes rather than move (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="false" />
            <Attribute Type="Description" RawValue="True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSelect" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListConfig" Type="BoundList" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="&quot;listConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="UpdateSelectedItems">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MultiSelectDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterdrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectionModelDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected nodes change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;nodes&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectionModelListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected nodes change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;nodes&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterdrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MvcResourceManager" Extends="ResourceManager">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MvcResourceManagerBuilder" Extends="IHtmlString">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MvcResourceManagerConfig">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MvcResourcePlaceHolderBuilder" Extends="IHtmlString">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NetToPHPDateFormatStringJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Node" Extends="BaseItem" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="NodeID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id for this node. If one is not specified, one is generated.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The id for this node. If one is not specified, one is generated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Leaf" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to indicate that this child can have no children. The expand icon/arrow will then not be rendered for this node. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true to indicate that this child can have no children. The expand icon/arrow will then not be rendered for this node. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDrag" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to make this node undraggable if draggable = true (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to make this node undraggable if draggable = true (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False if this node cannot have child nodes dropped on it (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False if this node cannot have child nodes dropped on it (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Checked" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to render a checked checkbox for this node, false to render an unchecked checkbox (defaults to undefined with no checkbox rendered)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render a checked checkbox for this node, false to render an unchecked checkbox (defaults to undefined with no checkbox rendered)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to be added to the node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class to be added to the node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expandable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to allow for expanding/collapsing of this node (the node will always show a plus/minus icon, even when empty). Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true to allow for expanding/collapsing of this node (the node will always show a plus/minus icon, even when empty). Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expanded" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start the node expanded]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to start the node expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyChildren" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render empty children array]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render empty children array" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyChildrenProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;children&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;#&quot;">
          <Summary><![CDATA[URL of the link used for the node (defaults to #)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;#&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="URL of the link used for the node (defaults to #)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HrefTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Target for link. Only applicable when href also specified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Target for link. Only applicable when href also specified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconFile" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The path to an icon for the node. The preferred way to do this is to use the cls or iconCls attributes and add the icon via a CSS background image.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The path to an icon for the node. The preferred way to do this is to use the cls or iconCls attributes and add the icon via a CSS background image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use for the Node. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The icon to use for the Node. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to be added to the nodes icon element for applying css background images]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class to be added to the nodes icon element for applying css background images" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip text to show on this node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip text to show on this node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtitle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip title.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip title." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text for to show on node label.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text for to show on node label." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Children" Type="NodeCollection">
          <Summary><![CDATA[Array of child nodes.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Array of child nodes." />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataPath" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomAttributes" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom node attributes]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom node attributes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AttributesObject" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TreeStoreListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeBinding" Extends="BaseItem">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NodeBindingCollection" Extends="BaseItemCollection&lt;NodeBinding&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NodeCollection" Extends="BaseItemCollection&lt;Node&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="Node">
          <Attributes>
            <Attribute Type="Description" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeLoadEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NodeProxy" Extends="BaseItem">
      <Attributes />
      <ConfigOptions />
      <Methods>
        <Method Name="On" ParamsRaw="string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="Notification" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NotificationAlignConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ElProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;position&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OffsetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;offset&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NotificationConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[ID of instance]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="ID of instance" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text to display in the window header]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text to display in the window header" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment to use as the panel's body content.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An HTML fragment to use as the panel's body content." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContentEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of an existing HTML node to use as the panel's body content]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The id of an existing HTML node to use as the panel's body content" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;200&quot;">
          <Summary><![CDATA[The width of this notification in pixels (defaults to 200).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;200&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this notification in pixels (defaults to 200)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[The height of this notification in pixels (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this notification in pixels (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to stay visible after showing]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to stay visible after showing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show scrolling bar if required]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show scrolling bar if required" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the button and disallow closing the window]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the button and disallow closing the window" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show a shadow]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show a shadow" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Prevent a Header from being created and shown.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Prevent a Header from being created and shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow user resizing at each edge and corner of the window, false to disable resizing ]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow user resizing at each edge and corner of the window, false to disable resizing " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow the window to be dragged by the header bar]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the window to be dragged by the header bar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Custom CSS styles to be applied to the body element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Custom CSS styles to be applied to the body element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlignCfg" Type="NotificationAlignConfig" DefaultValue="null">
          <Summary><![CDATA[Align config object]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;alignToCfg&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Align config object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMode" Type="ShowMode" DefaultValue="ShowMode.Grid">
          <Summary><![CDATA[False to show a notification upon all other visible notofications]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShowMode.Grid" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to show a notification upon all other visible notofications" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseVisible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to close all other visible notifications]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to close all other visible notifications" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PinEventProxy" Access="Protected" Type="string" DefaultValue="&quot;none&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pinEvent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;none&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="2500">
          <Summary><![CDATA[Hide delay in ms]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="2500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Hide delay in ms" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowFx" Type="Fx" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideFx" Type="Fx" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="WindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tools" Type="ToolsCollection">
          <Summary><![CDATA[An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowPin" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show pin tool button.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show pin tool button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pinned" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to to show window as pinned.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to to show window as pinned." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BringToFront" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show window as pinned.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show window as pinned." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberColumn" Extends="CellCommandColumn">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;0,000.00&quot;">
          <Summary><![CDATA[A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. NumberColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0,000.00&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberField" Extends="NumberFieldBase">
      <Summary><![CDATA[A numeric text field that provides automatic keystroke filtering to disallow non-numeric characters, and numeric validation to limit the value to a range of valid numbers. The range of acceptable number values can be controlled by setting the minValue and maxValue configs, and fractional decimals can be disallowed by setting allowDecimals to false.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:NumberField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(NumberField), &quot;Build.ToolboxIcons.NumberField.bmp&quot;" />
        <Attribute Type="Description" RawValue="A numeric text field that provides automatic keystroke filtering to disallow non-numeric characters, and numeric validation to limit the value to a range of valid numbers. The range of acceptable number values can be controlled by setting the minValue and maxValue configs, and fractional decimals can be disallowed by setting allowDecimals to false." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="NumberFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="NumberFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberFieldBase" Abstract="true" Extends="SpinnerFieldBase">
      <Summary><![CDATA[Base class for Numeric field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base class for Numeric field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="InputType" Modifier="Override" Type="InputType" DefaultValue="InputType.Text">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="InputType.Text" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Number" Type="double" DefaultValue="double.MinValue">
          <Summary><![CDATA[The Number (double) to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="double.MinValue" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Number (double) to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDecimals" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disallow decimal values (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disallow decimal values (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoStripChars" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically strip not allowed characters from the field. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically strip not allowed characters from the field. Defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseChars" Type="string" DefaultValue="&quot;0123456789&quot;">
          <Summary><![CDATA[The base set of characters to evaluate as valid numbers (defaults to '0123456789').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0123456789&quot;" />
            <Attribute Type="Description" RawValue="The base set of characters to evaluate as valid numbers (defaults to '0123456789')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalPrecision" Type="int" DefaultValue="2">
          <Summary><![CDATA[The maximum precision to display after the decimal separator (defaults to 2).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The maximum precision to display after the decimal separator (defaults to 2)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalSeparator" Type="string" DefaultValue="&quot;.&quot;">
          <Summary><![CDATA[Character(s) to allow as the decimal separator (defaults to '.').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;.&quot;" />
            <Attribute Type="Description" RawValue="Character(s) to allow as the decimal separator (defaults to '.')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalSeparatorProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;decimalSeparator&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;The maximum value for this field is {0}&quot;">
          <Summary><![CDATA[Error text to display if the maximum value validation fails (defaults to 'The maximum value for this field is {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The maximum value for this field is {0}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the maximum value validation fails (defaults to 'The maximum value for this field is {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxValue" Type="Double" DefaultValue="Double.MaxValue">
          <Summary><![CDATA[The maximum allowed value (defaults to Number.MAX_VALUE). Will be used by the field's validation logic, and for enabling/disabling the up spinner button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="Double.MaxValue" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxValue&quot;" />
            <Attribute Type="Description" RawValue="The maximum allowed value (defaults to Number.MAX_VALUE). Will be used by the field's validation logic, and for enabling/disabling the up spinner button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;The minimum value for this field is {0}&quot;">
          <Summary><![CDATA[Error text to display if the minimum value validation fails (defaults to 'The minimum value for this field is {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The minimum value for this field is {0}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the minimum value validation fails (defaults to 'The minimum value for this field is {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinValue" Type="Double" DefaultValue="Double.MinValue">
          <Summary><![CDATA[The minimum allowed value (defaults to Number.NEGATIVE_INFINITY). Will be used by the field's validation logic, and for enabling/disabling the down spinner button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetMinValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="Double.MinValue" />
            <Attribute Type="Description" RawValue="The minimum allowed value (defaults to Number.NEGATIVE_INFINITY). Will be used by the field's validation logic, and for enabling/disabling the down spinner button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NanText" Type="string" DefaultValue="&quot;{0} is not a valid number&quot;">
          <Summary><![CDATA[Error text to display if the value is not a valid number. For example, this can happen if a valid character like '.' or '-' is left in the field with no number (defaults to '{0} is not a valid number').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} is not a valid number&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the value is not a valid number. For example, this can happen if a valid character like '.' or '-' is left in the field with no number (defaults to '{0} is not a valid number')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NegativeText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the value is negative and minValue is set to 0. This is used instead of the minText in that circumstance only. Defaults to: \"The value cannot be negative\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the value is negative and minValue is set to 0. This is used instead of the minText in that circumstance only. Defaults to: \&quot;The value cannot be negative\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Step" Type="double" DefaultValue="1.0">
          <Summary><![CDATA[Specifies a numeric interval by which the field's value will be incremented or decremented when the user invokes the spinner. Defaults to 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="1.0" />
            <Attribute Type="Description" RawValue="Specifies a numeric interval by which the field's value will be incremented or decremented when the user invokes the spinner. Defaults to 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrimTrailedZeros" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disallow trim trailed zeros.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disallow trim trailed zeros." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitLocaleSeparator" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to ensure that the getSubmitValue method strips always uses . as the separator, regardless of the decimalSeparator configuration. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to ensure that the getSubmitValue method strips always uses . as the separator, regardless of the decimalSeparator configuration. Defaults to: true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberFieldDirectEvents" Extends="SpinnerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NumberFieldListeners" Extends="SpinnerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NumericAxis" Extends="Axis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, the values of the chart will be rendered only if they belong between minimum and maximum If false, all values of the chart will be rendered, regardless of whether they belong between minimum and maximum or not Default's true if maximum and minimum is specified. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, the values of the chart will be rendered only if they belong between minimum and maximum If false, all values of the chart will be rendered, regardless of whether they belong between minimum and maximum or not Default's true if maximum and minimum is specified. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Position" Modifier="Override" Type="Position" DefaultValue="Position.Left">
          <Summary><![CDATA[Where to set the axis. Available options are left, bottom, right, top. Default's left.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Position.Left" />
            <Attribute Type="Description" RawValue="Where to set the axis. Available options are left, bottom, right, top. Default's left." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AdjustMaximumByMajorUnit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Indicates whether to extend maximum beyond data's maximum to the nearest majorUnit. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Indicates whether to extend maximum beyond data's maximum to the nearest majorUnit. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AdjustMinimumByMajorUnit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Indicates whether to extend the minimum beyond data's minimum to the nearest majorUnit. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Indicates whether to extend the minimum beyond data's minimum to the nearest majorUnit. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RoundToDecimal" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Decimals" Type="int" DefaultValue="2">
          <Summary><![CDATA[The number of decimals to round the value to. Default's 2.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The number of decimals to round the value to. Default's 2." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximum" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The maximum value drawn by the axis. If not set explicitly, the axis maximum will be calculated automatically.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The maximum value drawn by the axis. If not set explicitly, the axis maximum will be calculated automatically." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimum" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The minimum value drawn by the axis. If not set explicitly, the axis minimum will be calculated automatically.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The minimum value drawn by the axis. If not set explicitly, the axis minimum will be calculated automatically." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumericFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. NumericFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;Enter Number...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. NumericFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Enter Number...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ObjectComparer">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ObjectHolder" Extends="Observable" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="JsonObject">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="UpdateData">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="Observable" Abstract="true" Extends="BaseControl" Inherits="ILazyItems,IObservable">
      <Summary><![CDATA[Abstract base class that provides a common interface for publishing events]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Abstract base class that provides a common interface for publishing events" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigsProxy" Access="Protected" Type="DynamicConfigDictionary" DefaultValue="null">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(ConfigBagJsonConverter)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageBusListeners" Type="MessageBusListeners">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageBusDirectEvents" Type="MessageBusDirectEvents">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageBusListenersProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;messageBusListeners&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageBusDirectEventsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;messageBusDirectEvents&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddEvents" ParamsRaw="params string[] events">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddManagedListener" ParamsRaw="string item, string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddManagedListener" ParamsRaw="string item, string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddManagedListener" ParamsRaw="string item, string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearListeners">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearManagedListeners">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="EnableBubble" ParamsRaw="params string[] events">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FireEvent" ParamsRaw="string eventName, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RelayEvents" ParamsRaw="string origin, string[] events">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveListener" ParamsRaw="string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveListener" ParamsRaw="string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveManagedListener" ParamsRaw="string item, string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveManagedListener" ParamsRaw="string item, string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ResumeEvents">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SuspendEvents" ParamsRaw="bool queueSuspended">
          <Summary><![CDATA[Suspend the firing of all events. (see resumeEvents)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Suspend the firing of all events. (see resumeEvents)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SuspendEvents">
          <Summary><![CDATA[Suspend the firing of all events. (see resumeEvents)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Suspend the firing of all events. (see resumeEvents)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn">
          <Summary><![CDATA[Removes a listener (shorthand for removeListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener (shorthand for removeListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn, string scope">
          <Summary><![CDATA[Removes a listener (shorthand for removeListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener (shorthand for removeListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, string fn, string scope, HandlerConfig options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Element el, string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Observable el, string eventName, string fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Element el, string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Observable el, string eventName, string fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ObservableDirectEvent" Extends="BaseDirectEvent">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="After" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[After handler with params: el, extraParams.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="After handler with params: el, extraParams." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Before" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Before handler with params: el, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Before handler with params: el, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Success handler with params: response, result, el, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userSuccess&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Success handler with params: response, result, el, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Failure" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Failure handler with params: response, result, control, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userFailure&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Failure handler with params: response, result, control, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Complete handler with params: success, response, result, control, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userComplete&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Complete handler with params: success, response, result, control, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Paddings" Extends="BaseItem" Inherits="IEquatable&lt;Paddings&gt;">
      <Attributes>
        <Attribute Type="Serializable" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PageProxy" Extends="ServerProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="API" Modifier="Override" Type="CRUDUrls">
          <Summary><![CDATA[Specific direct methods to call on CRUD action methods \"read\", \"create\", \"update\" and \"destroy\".]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;api&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Specific direct methods to call on CRUD action methods \&quot;read\&quot;, \&quot;create\&quot;, \&quot;update\&quot; and \&quot;destroy\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Total" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectFn" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RequestConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Paging&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PagingToolbar" Extends="ToolbarBase">
      <Summary><![CDATA[A specialized toolbar that is bound to a Ext.data.Store and provides automatic paging controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(PagingToolbar), &quot;Build.ToolboxIcons.PagingToolbar.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PagingToolbar runat=\&quot;server\&quot;&gt;&lt;/{0}:PagingToolbar&gt;&quot;" />
        <Attribute Type="Description" RawValue="A specialized toolbar that is bound to a Ext.data.Store and provides automatic paging controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DisplayInfo" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the displayMsg (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the displayMsg (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayMsg" Type="string" DefaultValue="&quot;Displaying {0} - {1} of {2}&quot;">
          <Summary><![CDATA[The paging status message to display. Note that this string is formatted using the braced numbers {0}-{2} as tokens that are replaced by the values for start, end and total respectively. These tokens should be preserved when overriding this string if showing those values is desired. Defaults to: \"Displaying {0} - {1} of {2}\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Displaying {0} - {1} of {2}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The paging status message to display. Note that this string is formatted using the braced numbers {0}-{2} as tokens that are replaced by the values for start, end and total respectively. These tokens should be preserved when overriding this string if showing those values is desired. Defaults to: \&quot;Displaying {0} - {1} of {2}\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyMsg" Type="string" DefaultValue="&quot;No data to display&quot;">
          <Summary><![CDATA[The message to display when no records are found (defaults to 'No data to display').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;No data to display&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The message to display when no records are found (defaults to 'No data to display')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Ext.data.Store the paging toolbar should use as its data source.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The Ext.data.Store the paging toolbar should use as its data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterPageText" Type="string" DefaultValue="&quot;of {0}&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text. Note that this string is formatted using {0} as a token that is replaced by the number of total pages. This token should be preserved when overriding this string if showing the total page count is desired. Defaults to: \"of {0}\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;of {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text. Note that this string is formatted using {0} as a token that is replaced by the number of total pages. This token should be preserved when overriding this string if showing the total page count is desired. Defaults to: \&quot;of {0}\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePageText" Type="string" DefaultValue="&quot;Page&quot;">
          <Summary><![CDATA[The text displayed before the input item. Defaults to: \"Page\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed before the input item. Defaults to: \&quot;Page\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FirstText" Type="string" DefaultValue="&quot;First Page&quot;">
          <Summary><![CDATA[The quicktip text displayed for the first page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \"First Page\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;First Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The quicktip text displayed for the first page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \&quot;First Page\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputItemWidth" Type="int" DefaultValue="30">
          <Summary><![CDATA[The width in pixels of the input field used to display and change the current page number. Defaults to: 30]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="30" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width in pixels of the input field used to display and change the current page number. Defaults to: 30" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LastText" Type="string" DefaultValue="&quot;Last Page&quot;">
          <Summary><![CDATA[The quicktip text displayed for the last page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \"Last Page\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Last Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The quicktip text displayed for the last page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \&quot;Last Page\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NextText" Type="string" DefaultValue="&quot;Next Page&quot;">
          <Summary><![CDATA[The quicktip text displayed for the next page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \"Next Page\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Next Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The quicktip text displayed for the next page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \&quot;Next Page\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrependButtons" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to insert any configured items before the paging buttons. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to insert any configured items before the paging buttons. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrevText" Type="string" DefaultValue="&quot;Previous Page&quot;">
          <Summary><![CDATA[The quicktip text displayed for the previous page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \"Previous Page\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Previous Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The quicktip text displayed for the previous page button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \&quot;Previous Page\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RefreshText" Type="string" DefaultValue="&quot;Refresh&quot;">
          <Summary><![CDATA[The quicktip text displayed for the Refresh button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \"Refresh\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Refresh&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The quicktip text displayed for the Refresh button. Note: quick tips must be initialized for the quicktip to show. Defaults to: \&quot;Refresh\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideRefresh" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Hide refresh button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideRefresh&quot;" />
            <Attribute Type="Description" RawValue="Hide refresh button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PagingToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PagingToolbarDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PagingToolbarDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pageData&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after page changing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;page&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before page changing" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PagingToolbarListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires after page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pageData&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after page changing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;page&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before page changing" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Panel" Extends="AbstractPanel">
      <Summary><![CDATA[Panel is a container that has specific functionality and structural components that make it the perfect building block for application-oriented user interfaces.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Panel), &quot;Build.ToolboxIcons.Panel.bmp&quot;" />
        <Attribute Type="Description" RawValue="Panel is a container that has specific functionality and structural components that make it the perfect building block for application-oriented user interfaces." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeClose" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the user closes the panel. Return false from any listener to stop the close event being fired]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the user closes the panel. Return false from any listener to stop the close event being fired" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this panel is collapsed. Return false to prevent the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;the Panel being collapsed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;direction&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;animate&quot;, typeof(bool), &quot;True if the collapse is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this panel is collapsed. Return false to prevent the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this panel is expanded. Return false to prevent the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being expanded.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the expand is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this panel is expanded. Return false to prevent the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has been resized.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The Panel's new width.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The Panel's new height.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Close" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user closes the panel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;close&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user closes the panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel title has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has had its title changed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTitle&quot;, typeof(string), &quot;new title.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTitle&quot;, typeof(string), &quot;old title.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;titlechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel title has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel icon class has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIconCls&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldIconCls&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclschange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon class has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel icon has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIcon&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldIcon&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon has been set or changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelHeader" Extends="AbstractContainer" Inherits="IIcon">
      <Summary><![CDATA[Simple header class which is used for on Ext.panel.Panel and Ext.window.Window.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Simple header class which is used for on Ext.panel.Panel and Ext.window.Window." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. PanelHeader&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will provide a background image to be used as the panel header icon (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. PanelHeader&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class that will provide a background image to be used as the panel header icon (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconPath" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will provide a background image to be used as the panel header icon (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Url" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconPath&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. PanelHeader&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class that will provide a background image to be used as the panel header icon (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Set a title for the panel's header. See Ext.panel.Header.title.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTitle&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. PanelHeader&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set a title for the panel's header. See Ext.panel.Header.title." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleAlign" Type="TitleAlign" DefaultValue="TitleAlign.Default">
          <Summary><![CDATA[May be \"left\", \"right\" or \"center\". The alignment of the title text within the available space between the icon and the tools. Defaults to: \"left\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. PanelHeader&quot;" />
            <Attribute Type="DefaultValue" RawValue="TitleAlign.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="May be \&quot;left\&quot;, \&quot;right\&quot; or \&quot;center\&quot;. The alignment of the title text within the available space between the icon and the tools. Defaults to: \&quot;left\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelHeaderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelHeaderDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelHeaderDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the header is clicked. This event will not be fired if the click was on a Ext.panel.Tool]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the header is clicked. This event will not be fired if the click was on a Ext.panel.Tool" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the header is double clicked. This event will not be fired if the click was on a Ext.panel.Tool]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the header is double clicked. This event will not be fired if the click was on a Ext.panel.Tool" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelHeaderListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when the header is clicked. This event will not be fired if the click was on a Ext.panel.Tool]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the header is clicked. This event will not be fired if the click was on a Ext.panel.Tool" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the header is double clicked. This event will not be fired if the click was on a Ext.panel.Tool]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the header is double clicked. This event will not be fired if the click was on a Ext.panel.Tool" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeClose" Type="ComponentListener">
          <Summary><![CDATA[Fires before the user closes the panel. Return false from any listener to stop the close event being fired]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the user closes the panel. Return false from any listener to stop the close event being fired" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this panel is collapsed. Return false to prevent the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;the Panel being collapsed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;direction&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;animate&quot;, typeof(bool), &quot;True if the collapse is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this panel is collapsed. Return false to prevent the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this panel is expanded. Return false to prevent the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being expanded.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the expand is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this panel is expanded. Return false to prevent the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyResize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has been resized.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The Panel's new width.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The Panel's new height.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Close" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user closes the panel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;close&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user closes the panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel title has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has had its title changed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTitle&quot;, typeof(string), &quot;new title.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTitle&quot;, typeof(string), &quot;old title.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;titlechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel title has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel icon class has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIconCls&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldIconCls&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclschange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon class has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel icon has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIcon&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldIcon&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon has been set or changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Parameter" Extends="BaseParameter">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ParameterCollection" Extends="BaseItemCollection&lt;Parameter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PartialViewExtensions">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PartialViewPage" Extends="ViewPage" Inherits="Ext.Net.ISelfRenderingPage">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PartialViewRenderer">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PartialViewResult" Extends="ViewResultBase">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PickerField" Abstract="true" Extends="TriggerFieldBase" Inherits="IPostBackEventHandler">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MatchFieldWidth" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the picker dropdown's width should be explicitly set to match the width of the field. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Picker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the picker dropdown's width should be explicitly set to match the width of the field. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OpenCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A class to be added to the field's bodyEl element when the picker is opened. Defaults to 'x-pickerfield-open'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Picker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A class to be added to the field's bodyEl element when the picker is opened. Defaults to 'x-pickerfield-open'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PickerAlign" Type="string" DefaultValue="&quot;tl-bl?&quot;">
          <Summary><![CDATA[The alignment position with which to align the picker. Defaults to \"tl-bl?\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Picker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-bl?&quot;" />
            <Attribute Type="Description" RawValue="The alignment position with which to align the picker. Defaults to \&quot;tl-bl?\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PickerOffset" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An offset [x,y] to use in addition to the pickerAlign when positioning the picker. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. Picker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An offset [x,y] to use in addition to the pickerAlign when positioning the picker. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBackEvent" Type="PickerAutoPostBackEvent" DefaultValue="PickerAutoPostBackEvent.Select">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="PickerAutoPostBackEvent.Select" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Expand">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="PickerFieldDirectEvents" Extends="TriggerFieldDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PickerFieldListeners" Extends="TriggerFieldListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PieSeries" Extends="AbstractSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AngleField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The store record field name to be used for the pie angles. The values bound to this field name must be positive real numbers. REQUIRED]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The store record field name to be used for the pie angles. The values bound to this field name must be positive real numbers. REQUIRED" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColorSet" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of color values which will be used, in order, as the gauge slice fill colors.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of color values which will be used, in order, as the gauge slice fill colors." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Donut" Type="int" DefaultValue="0">
          <Summary><![CDATA[Whether to set the pie chart as donut chart. Default's false. Can be set to a particular percentage to set the radius of the donut chart.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Whether to set the pie chart as donut chart. Default's false. Can be set to a particular percentage to set the radius of the donut chart." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightDuration" Type="int" DefaultValue="150">
          <Summary><![CDATA[The duration for the pie slice highlight effect. Defaults to: 150]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="150" />
            <Attribute Type="Description" RawValue="The duration for the pie slice highlight effect. Defaults to: 150" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightSegmentMargin" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightSegmentMarginProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;highlightCfg&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LengthField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The store record field name to be used for the pie slice lengths. The values bound to this field name must be positive real numbers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The store record field name to be used for the pie slice lengths. The values bound to this field name must be positive real numbers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowInLegend" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to add the pie chart elements as legend items. Default's false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to add the pie chart elements as legend items. Default's false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Plugin" Abstract="true" Extends="LazyObservable" Inherits="INoneContentable,IVirtual">
      <Summary><![CDATA[Base Class for all AbstractComponent Plugins. Add plugin to a AbstractComponent using the .Plugins property or <Plugins> node.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Base Class for all AbstractComponent Plugins. Add plugin to a AbstractComponent using the .Plugins property or &lt;Plugins&gt; node." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PluginId" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Portal" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Portal), &quot;Build.ToolboxIcons.Portal.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Portal runat=\&quot;server\&quot; Title=\&quot;Portal\&quot; Layout=\&quot;column\&quot;&gt;&lt;Items&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 1\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 1\&quot; /&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 2\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 2\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 3\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 3\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet Title=\&quot;Portlet 4\&quot; runat=\&quot;server\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 4\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;/Items&gt;&lt;/{0}:Portal&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PortalListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PortalDirectEvents">
          <Summary><![CDATA[Server-side DirectEvent Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Server-side DirectEvent Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;portalcolumn&quot;">
          <Summary><![CDATA[The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;portalcolumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoScroll" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAutoScroll&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PortalColumn" Extends="Panel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(PortalColumn), &quot;Build.ToolboxIcons.PortalColumn.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot;&gt;&lt;Items&gt;&lt;{0}:AnchorLayout ID=\&quot;AnchorLayout1\&quot; runat=\&quot;server\&quot;&gt;&lt;{0}:Anchor Horizontal=\&quot;100%\&quot;&gt;&lt;{0}:Portlet Title=\&quot;Portlet\&quot; runat=\&quot;server\&quot; /&gt;&lt;/{0}:Anchor&gt;&lt;/{0}:AnchorLayout&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;portlet&quot;">
          <Summary><![CDATA[The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. AbstractContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;portlet&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default xtype of child Components to create in this Container when a child item is specified as a raw configuration object, rather than as an instantiated AbstractComponent. Defaults to 'panel'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHeight" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to use height:'auto', false to use fixed height (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use height:'auto', false to use fixed height (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PortalDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ValidateDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validatedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedragover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragOver" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PortalListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ValidateDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validatedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedragover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Portlet" Extends="Panel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Portlet), &quot;Build.ToolboxIcons.Portlet.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Frame" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specify as true to have the AbstractComponent inject framing elements within the AbstractComponent at render time to provide a graphical rounded frame around the AbstractComponent content.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify as true to have the AbstractComponent inject framing elements within the AbstractComponent at render time to provide a graphical rounded frame around the AbstractComponent content." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. AbstractPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Portlet&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable dragging of this Panel (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Portlet&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable dragging of this Panel (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PresenceValidation" Extends="AbstractValidation">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Preview" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Preview), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Preview runat=\&quot;server\&quot; /&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Field to display in the preview. Must me a field within the Model definition that the store is using.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Preview&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Field to display in the preview. Must me a field within the Model definition that the store is using." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreviewExpanded" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Preview&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBar" Extends="ComponentBase">
      <Summary><![CDATA[An updateable progress bar component. The progress bar supports two different modes: manual and automatic.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ProgressBar runat=\&quot;server\&quot; Width=\&quot;300\&quot;&gt;&lt;/{0}:ProgressBar&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ProgressBar), &quot;Build.ToolboxIcons.ProgressBar.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="An updateable progress bar component. The progress bar supports two different modes: manual and automatic." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to animate the progress bar during transitions]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the progress bar during transitions" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseCls" Modifier="Override" Type="string" DefaultValue="&quot;x-progress&quot;">
          <Summary><![CDATA[The base CSS class to apply to the progress bar's wrapper element (defaults to 'x-progress')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-progress&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base CSS class to apply to the progress bar's wrapper element (defaults to 'x-progress')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text shown in the progress bar (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text shown in the progress bar (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to render the progress text to (defaults to the progress bar's internal text element)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The element to render the progress text to (defaults to the progress bar's internal text element)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="float" DefaultValue="0">
          <Summary><![CDATA[A floating point value between 0 and 1 (e.g., .5, defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A floating point value between 0 and 1 (e.g., .5, defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ProgressBarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ProgressBarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Reset">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset" ParamsRaw="bool hide">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateProgress" ParamsRaw="float value, string text">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateProgress" ParamsRaw="float value, string text, bool animate">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateText">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateText" ParamsRaw="string text">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Wait">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Wait" ParamsRaw="WaitConfig config">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ProgressBarDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after each update interval]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;current progress value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;text&quot;, typeof(int), &quot;current progress text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after each update interval" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBarListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires after each update interval]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractComponent), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;current progress value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;text&quot;, typeof(string), &quot;current progress text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after each update interval" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBarPager" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ProgressBarPager), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ProgressBarPager runat=\&quot;server\&quot; /&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ProgBarWidth" Type="int" DefaultValue="255">
          <Summary><![CDATA[The default progress bar width.  Default is 225.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;width&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. ProgressBarPager&quot;" />
            <Attribute Type="DefaultValue" RawValue="255" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default progress bar width.  Default is 225." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The text to display while the store is loading.  Default is 'Loading...']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ProgressBarPager&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display while the store is loading.  Default is 'Loading...'" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGrid" Extends="GridPanelBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A specialized grid implementation intended to mimic the traditional property grid as typically seen in development IDEs. Each row in the grid represents a property of some object, and the data is stored as a set of name/value pairs in Properties.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PropertyGrid runat=\&quot;server\&quot;&gt;&lt;/{0}:PropertyGrid&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridPanel), &quot;Build.ToolboxIcons.GridPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A specialized grid implementation intended to mimic the traditional property grid as typically seen in development IDEs. Each row in the grid represents a property of some object, and the data is stored as a set of name/value pairs in Properties." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Source" Type="PropertyGridParameterCollection">
          <Summary><![CDATA[A data object to use as the data source of the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;8. PropertyGrid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A data object to use as the data source of the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomEditors" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomRenderers" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyNames" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If false then all cells will be read only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. PropertyGrid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If false then all cells will be read only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NameColumnWidth" Type="int" DefaultValue="115">
          <Summary><![CDATA[Optional. Specify the width for the name column. The value column will take any remaining space. Defaults to 115.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. PropertyGrid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="115" />
            <Attribute Type="Description" RawValue="Optional. Specify the width for the name column. The value column will take any remaining space. Defaults to 115." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PropertyGridListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PropertyGridDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridDirectEvents" Extends="GridPanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforePropertyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepropertychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a property value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;propertychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a property value has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridListeners" Extends="GridPanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforePropertyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Model.reject on the property's record).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepropertychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Model.reject on the property's record)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after a property value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;propertychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a property value has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridParameter" Extends="BaseParameter">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editor" Type="EditorCollection">
          <Summary><![CDATA[(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorOptions" Type="CellEditorOptions">
          <Summary><![CDATA[Editor options]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Editor options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridParameterCollection" Extends="BaseItemCollection&lt;PropertyGridParameter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ProxyCollection" Extends="SingleItemStateCollection&lt;AbstractProxy&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractProxy">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProxyListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Exception" Type="ComponentListener">
          <Summary><![CDATA[Fires when the server returns an exception]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(AbstractProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(string), &quot;The response from the AJAX request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(string), &quot;The operation that triggered request&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the server returns an exception" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Puff" Extends="Fx">
      <Summary><![CDATA[Fades the element out while slowly expanding it in all directions. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fades the element out while slowly expanding it in all directions. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="QTipCfg" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip title]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip title" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DismissDelay" Type="int" DefaultValue="5000">
          <Summary><![CDATA[Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="0">
          <Summary><![CDATA[Tooltip width]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="QuickTips" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RadarSeries" Extends="AbstractSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMarkers" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether markers should be displayed at the data points. If true, then the markerConfig config item will determine the markers' styling.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether markers should be displayed at the data points. If true, then the markerConfig config item will determine the markers' styling." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkerConfig" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;markerConfig&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowInLegend" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to add the chart elements as legend items. Default's false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to add the chart elements as legend items. Default's false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadialAxis" Extends="AbstractAxis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Position" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Steps" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximum" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Radio" Extends="CheckboxBase" Inherits="IPostBackEventHandler,ICheckBoxControl">
      <Summary><![CDATA[Single radio field. Similar to checkbox, but automatically handles making sure only one radio is checked at a time within a group of radios with the same name.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Radio runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;CheckedChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Checked&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Radio), &quot;Build.ToolboxIcons.Radio.bmp&quot;" />
        <Attribute Type="Description" RawValue="Single radio field. Similar to checkbox, but automatically handles making sure only one radio is checked at a time within a group of radios with the same name." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="RadioListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RadioDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioDirectEvents" Extends="CheckboxDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RadioGroup" Extends="CheckboxGroupBase">
      <Summary><![CDATA[A grouping container for Ext.form.Radio controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:RadioGroup runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(RadioGroup), &quot;Build.ToolboxIcons.RadioGroup.bmp&quot;" />
        <Attribute Type="Description" RawValue="A grouping container for Ext.form.Radio controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;radio&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'radio').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;radio&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'radio')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckboxGroupListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckboxGroupDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutomaticGrouping" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Automatic grouping (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. RadioGroup&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Automatic grouping (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field's HTML name attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. RadioGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field's HTML name attribute." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioListeners" Extends="CheckboxListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RatingColumn" Extends="ColumnBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DataIndex" Modifier="Override" Type="string" DefaultValue="&quot;rating&quot;">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating&quot;" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowChange" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCls" Type="string" DefaultValue="&quot;rating-selected&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating-selected&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnselectedCls" Type="string" DefaultValue="&quot;rating-unselected&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating-unselected&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxRating" Type="int" DefaultValue="5">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TickSize" Type="int" DefaultValue="16">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="16" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RoundToTick" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ReaderCollection" Extends="SingleItemStateCollection&lt;AbstractReader&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PrimaryProxy" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;reader&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RecordModifiedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RecordsToXmlConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ReferenceColumn" Extends="ColumnBase" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Reference" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RegexJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ReminderCombo" Extends="ComboBox">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FieldLabel" Modifier="Override" Type="string" DefaultValue="&quot;Reminder&quot;">
          <Summary><![CDATA[The label text to display next to this Component (defaults to 'Reminder').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Reminder&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label text to display next to this Component (defaults to 'Reminder')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAction" Modifier="Override" Type="TriggerAction" DefaultValue="TriggerAction.All">
          <Summary><![CDATA[The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'All').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerAction.All" />
            <Attribute Type="Description" RawValue="The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'All')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryMode" Modifier="Override" Type="DataLoadMode" DefaultValue="DataLoadMode.Local">
          <Summary><![CDATA[Set to 'local' if the ComboBox loads local data (defaults to 'Local' which loads from the server).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="DataLoadMode.Local" />
            <Attribute Type="Description" RawValue="Set to 'local' if the ComboBox loads local data (defaults to 'Local' which loads from the server)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceSelection" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Modifier="Override" Type="string" DefaultValue="&quot;desc&quot;">
          <Summary><![CDATA[The underlying data field name to bind to this ComboBox (defaults to 'desc').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;desc&quot;" />
            <Attribute Type="Description" RawValue="The underlying data field name to bind to this ComboBox (defaults to 'desc')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Modifier="Override" Type="string" DefaultValue="&quot;value&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;value&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RemoteActionEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteAppendEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteEditEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteMoveEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteValidationDirectEvent" Extends="ObservableDirectEvent">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ValidationBuffer" Type="int" DefaultValue="500">
          <Summary><![CDATA[Number of milliseconds to wait before the validation request is sent to server]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="Number of milliseconds to wait before the validation request is sent to server" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowBusy" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable loading indicator]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable loading indicator" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyTip" Type="string" DefaultValue="&quot;Validating...&quot;">
          <Summary><![CDATA[Loading indicator tooltip]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Validating...&quot;" />
            <Attribute Type="Description" RawValue="Loading indicator tooltip" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;busyIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconCls" Type="string" DefaultValue="&quot;loading-indicator&quot;">
          <Summary><![CDATA[The default iconCls applied to the loading indicator.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;loading-indicator&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls applied to the loading indicator." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationEvent" Type="string" DefaultValue="&quot;keyup&quot;">
          <Summary><![CDATA[Name of the event that triggers the validation]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;keyup&quot;" />
            <Attribute Type="Description" RawValue="Name of the event that triggers the validation" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOwner" Type="ValidationEventOwner" DefaultValue="ValidationEventOwner.Input">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ValidationEventOwner.Input" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitValueValidation" Type="InitValueValidation" DefaultValue="InitValueValidation.Valid">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="InitValueValidation.Valid" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RemoteValidationEventArgs" Extends="DirectEventArgs">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Renderer" Extends="BaseItem">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(RendererConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Fn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The raw JavaScript function to be called when this Renderer fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw JavaScript function to be called when this Renderer fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript logic to be called when this Renderer fires. The Handler will be automatically wrapped in a proper function{} template and passed the correct arguments for this event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The JavaScript logic to be called when this Renderer fires. The Handler will be automatically wrapped in a proper function{} template and passed the correct arguments for this event." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RendererJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ResizableDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before resize is allowed. Set enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires during resizing. Return false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizedrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires during resizing. Return false to cancel resize." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResizableListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeResize" Type="ComponentListener">
          <Summary><![CDATA[Fired before resize is allowed. Set enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Summary><![CDATA[Fired after a resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires during resizing. Return false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizedrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires during resizing. Return false to cancel resize." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Resizer" Extends="Observable">
      <Summary><![CDATA[Applies drag handles to an element to make it resizable.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Resizer runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Resizer), &quot;Build.ToolboxIcons.Resizable.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Applies drag handles to an element to make it resizable." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConstrainToElement" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An element, or a Region into which the resize operation must be constrained.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;constrainTo&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An element, or a Region into which the resize operation must be constrained." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainToRegion" Type="System.Drawing.Rectangle?" DefaultValue="null">
          <Summary><![CDATA[An element, or a Region into which the resize operation must be constrained.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An element, or a Region into which the resize operation must be constrained." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainToRegionProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;constrainTo&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Dynamic" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Specify as true to update the target (Element or Component) dynamically during dragging. This is true by default, but the Component class passes false when it is configured as Ext.Component.resizable.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify as true to update the target (Element or Component) dynamically during dragging. This is true by default, but the Component class passes false when it is configured as Ext.Component.resizable." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handles" Type="ResizeHandle" DefaultValue="ResizeHandle.Default">
          <Summary><![CDATA[String consisting of the resize handles to display. Defaults to 's e se' for Elements and fixed position Components. Defaults to 8 point resizing for floating Components (such as Windows). Specify either 'all' or any of 'n s e w ne nw se sw'. Defaults to: \"s e se\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="ResizeHandle.Default" />
            <Attribute Type="Description" RawValue="String consisting of the resize handles to display. Defaults to 's e se' for Elements and fixed position Components. Defaults to 8 point resizing for floating Components (such as Windows). Specify either 'all' or any of 'n s e w ne nw se sw'. Defaults to: \&quot;s e se\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandlesSummary" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[String consisting of the resize handles to display (defaults to 's e se'). Specify either 'all' or any of 'n s e w ne nw se sw'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;handles&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="String consisting of the resize handles to display (defaults to 's e se'). Specify either 'all' or any of 'n s e w ne nw se sw'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandlesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;handles&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[Optional. The height to set target to in pixels. Defaults to: null]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional. The height to set target to in pixels. Defaults to: null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeightIncrement" Type="int" DefaultValue="0">
          <Summary><![CDATA[The increment to snap the height resize in pixels. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The increment to snap the height resize in pixels. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int" DefaultValue="10000">
          <Summary><![CDATA[The maximum height for the element (defaults to 10000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="Description" RawValue="The maximum height for the element (defaults to 10000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="int" DefaultValue="10000">
          <Summary><![CDATA[The maximum width for the element (defaults to 10000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="Description" RawValue="The maximum width for the element (defaults to 10000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Type="int" DefaultValue="20">
          <Summary><![CDATA[The minimum height for the element (defaults to 20)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The minimum height for the element (defaults to 20)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="int" DefaultValue="20">
          <Summary><![CDATA[The minimum width for the element (defaults to 20)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The minimum width for the element (defaults to 20)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pinned" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ensure that the resize handles are always visible, false indicates resizing by cursor changes only. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ensure that the resize handles are always visible, false indicates resizing by cursor changes only. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveRatio" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to preserve the original ratio between height and width during resize (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to preserve the original ratio between height and width during resize (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Element or Component to resize.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The Element or Component to resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Transparent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for transparent handles. This is only applied at config time. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for transparent handles. This is only applied at config time. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[Optional. The width to set the target to in pixels. Defaults to: null]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional. The width to set the target to in pixels. Defaults to: null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthIncrement" Type="int" DefaultValue="0">
          <Summary><![CDATA[The increment to snap the width resize in pixels (defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The increment to snap the width resize in pixels (defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ResizableListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ResizableDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResourceManagerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WindowUnload" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser unload event object&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowScroll" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the browser window is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;document&quot;, typeof(object), &quot;The browser document object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;config&quot;, typeof(object), &quot;The event configuration object passed to listener&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is scrolled." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResourceManagerListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WindowUnload" Type="ComponentListener">
          <Summary><![CDATA[Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser unload event object&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowScroll" Type="ComponentListener">
          <Summary><![CDATA[Fires when the browser window is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;document&quot;, typeof(object), &quot;The browser document object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;config&quot;, typeof(object), &quot;The event configuration object passed to listener&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is scrolled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAjaxRequest" Type="ComponentListener">
          <Summary><![CDATA[Fires before each ajax request.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeajaxrequest&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before each ajax request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AjaxRequestComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires if the ajax request was successfully completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;response&quot;, typeof(object), &quot;The reponse object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ajaxrequestcomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if the ajax request was successfully completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AjaxRequestException" Type="ComponentListener">
          <Summary><![CDATA[Fires if the ajax request was failed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;response&quot;, typeof(object), &quot;The reponse object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ajaxrequestexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if the ajax request was failed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Response" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Success" Type="bool">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;success&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;message&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Data" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;data&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RestProxy" Extends="AjaxProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendId" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically append the ID of a Model instance when performing a request based on that single instance. See RestProxy intro docs for more details. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically append the ID of a Model instance when performing a request based on that single instance. See RestProxy intro docs for more details. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BatchActions" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to batch actions of a particular type when synchronizing the store. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to batch actions of a particular type when synchronizing the store. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional data format to send to the server when making any request (e.g. 'json'). See the RestProxy intro docs for full details. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional data format to send to the server when making any request (e.g. 'json'). See the RestProxy intro docs for full details. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionMethodsProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionMethods&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RestResult" Extends="ActionResult">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RotateAttribute" Extends="TranslateAttribute">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Degrees" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowBody" Extends="GridFeature">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyHiddenCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyTrCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyTdCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyDivCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetAdditionalData" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowChanges">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RowEditing" Extends="GridEditing">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoCancel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to automatically cancel any pending changes when the row editor begins editing a new row. false to force the user to explicitly cancel the pending changes. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to automatically cancel any pending changes when the row editor begins editing a new row. false to force the user to explicitly cancel the pending changes. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClicksToMoveEditor" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of clicks to move the row editor to a new row while it is visible and actively editing another row. This will default to the same value as clicksToEdit.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The number of clicks to move the row editor to a new row while it is visible and actively editing another row. This will default to the same value as clicksToEdit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorSummary" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to show a tooltip that summarizes all validation errors present in the row editor. Set to false to prevent the tooltip from showing. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to show a tooltip that summarizes all validation errors present in the row editor. Set to false to prevent the tooltip from showing. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveBtnText" Type="string" DefaultValue="&quot;Update&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Update&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelBtnText" Type="string" DefaultValue="&quot;Cancel&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Cancel&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorsText" Type="string" DefaultValue="&quot;Errors&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Errors&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyText" Type="string" DefaultValue="&quot;You need to commit or cancel your changes&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;You need to commit or cancel your changes&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the save button is clicked]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the save button is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowEditingListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowEditingDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditingDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before row editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before row editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user has started editing a row but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user has started editing a row but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a row is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditingListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires before row editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before row editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user has started editing a row but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user has started editing a row but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a row is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditorDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before the row editor is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before the row editor is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired for each field's value.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;preedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired for each field's value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditorListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired before the row editor is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before the row editor is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired when the editor is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;forced&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the editor is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired for each field's value.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;preedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired for each field's value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowExpander" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[The template string to use to display each item in the dropdown list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowBodyTpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The template string to use to display each item in the dropdown list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(SingleItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RecreateComponent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Recreate component on each row expand]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Recreate component on each row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DoLayoutOnExpand" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Call doLayout after a row expanding/collapsing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Call doLayout after a row expanding/collapsing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowBodyEvents" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Swallow row body's events]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Swallow row body's events" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectRowOnExpand" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to select a row when clicking on the expander icon (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to select a row when clicking on the expander icon (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnEnter" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnDblClick" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleExpand" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowExpanderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowExpanderDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ToggleRow" ParamsRaw="int row">
          <Summary><![CDATA[Toggle (expand/collapse) row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggle (expand/collapse) row" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExpandAll">
          <Summary><![CDATA[Expand all rows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expand all rows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CollapseAll">
          <Summary><![CDATA[Collapse all rows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapse all rows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExpandRow" ParamsRaw="int row">
          <Summary><![CDATA[Expand row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expand row" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CollapseRow" ParamsRaw="int row">
          <Summary><![CDATA[Collapse row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapse row" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="RowExpanderDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires afyter a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires afyter a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row collapse" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row collapse" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowExpanderListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires afyter a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires afyter a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row collapse" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row collapse" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowNumbererColumn" Extends="ColumnBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DraggableProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;23&quot;">
          <Summary><![CDATA[The default width in pixels of the row number column. Defaults to: 23]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;23&quot;" />
            <Attribute Type="Description" RawValue="The default width in pixels of the row number column. Defaults to: 23" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSpan" Modifier="Override" Type="int" DefaultValue="1">
          <Summary><![CDATA[RowSpan attribute for the checkbox table cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowspan&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="RowSpan attribute for the checkbox table cell" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowSelectionModel" Extends="AbstractSelectionModel" Inherits="IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableKeyNav" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turns on/off keyboard navigation within the grid. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Turns on/off keyboard navigation within the grid. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreRightMouseSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to ignore selections that are made when using the right mouse button if there are records that are already selected. If no records are selected, selection will continue as normal. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore selections that are made when using the right mouse button if there are records that are already selected. If no records are selected, selection will continue as normal. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRows" Type="SelectedRowCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRow" Type="SelectedRow">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowSelectionModelDirectEvents" Extends="AbstractSelectionModelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeDeselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before a record is deselected. If any listener returns false, the deselection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is deselected. If any listener returns false, the deselection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a record is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before a record is selected. If any listener returns false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is selected. If any listener returns false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a record is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowSelectionModelListeners" Extends="AbstractSelectionModelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeDeselect" Type="ComponentListener">
          <Summary><![CDATA[Fired before a record is deselected. If any listener returns false, the deselection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is deselected. If any listener returns false, the deselection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deselect" Type="ComponentListener">
          <Summary><![CDATA[Fired after a record is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fired before a record is selected. If any listener returns false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is selected. If any listener returns false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fired after a record is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowWrap" Extends="GridFeature">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Scale" Extends="Fx">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ScaleAttribute" Extends="TranslateAttribute">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CX" Type="double?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cx&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CY" Type="double?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cy&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ScatterSeries" Extends="CartesianSeries">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkerConfig" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;markerConfig&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="SpriteAttributes" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ScriptClass" Abstract="true" Extends="IScriptable" Inherits="IResourceManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectBox" Extends="ComboBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedCell" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RowIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SelectedCellSerializable" Extends="SelectedCell">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedListItem" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Index" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectedListItemCollection" Extends="BaseItemCollection&lt;SelectedListItem&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedRow" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectedRowCollection" Extends="BaseItemCollection&lt;SelectedRow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectionModelCollection" Extends="SingleItemCollection&lt;AbstractSelectionModel&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractSelectionModel">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelfRenderingPage" Extends="Page" Inherits="ISelfRenderingPage">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SequentialIdGenerator" Extends="ModelIdGenerator">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prefix" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The string to place in front of the sequential number for each generated id. The default is blank.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The string to place in front of the sequential number for each generated id. The default is blank." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Seed" Type="int" DefaultValue="1">
          <Summary><![CDATA[The number at which to start generating sequential id's. The default is 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="The number at which to start generating sequential id's. The default is 1." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SeriesCollection" Extends="BaseItemCollection&lt;AbstractSeries&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SeriesLabel" Extends="SpriteAttributes">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Display" Type="SeriesLabelDisplay" DefaultValue="SeriesLabelDisplay.None">
          <Summary><![CDATA[Specifies the presence and position of labels for each pie slice.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="DefaultValue" RawValue="SeriesLabelDisplay.None" />
            <Attribute Type="Description" RawValue="Specifies the presence and position of labels for each pie slice." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Color" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The color of the label text. Default value: '#000' (black).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The color of the label text. Default value: '#000' (black)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Contrast" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the label in contrasting color with the backround. Default value: false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render the label in contrasting color with the backround. Default value: false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Field" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the field to be displayed in the label. Default value: 'name'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The name of the field to be displayed in the label. Default value: 'name'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinMargin" Type="int" DefaultValue="50">
          <Summary><![CDATA[Specifies the minimum distance from a label to the origin of the visualization. This parameter is useful when using PieSeries width variable pie slice lengths. Default value: 50.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="Description" RawValue="Specifies the minimum distance from a label to the origin of the visualization. This parameter is useful when using PieSeries width variable pie slice lengths. Default value: 50." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Orientation" Type="Orientation" DefaultValue="Orientation.Horizontal">
          <Summary><![CDATA[Either \"horizontal\" or \"vertical\". Dafault value: \"horizontal\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="Orientation.Horizontal" />
            <Attribute Type="Description" RawValue="Either \&quot;horizontal\&quot; or \&quot;vertical\&quot;. Dafault value: \&quot;horizontal\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="JFunction">
          <Summary><![CDATA[Optional function for formatting the label into a displayable value. Default value: function(value) { return value; }]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Optional function for formatting the label into a displayable value. Default value: function(value) { return value; }" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SeriesListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="AfterRender" Type="ComponentListener">
          <Summary><![CDATA[Will be triggered when the animation ends or when the series has been rendered completely.]]></Summary>
          <Attributes>
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterrender&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Will be triggered when the animation ends or when the series has been rendered completely." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the series title is changed via setTitle.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;title&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;titlechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the series title is changed via setTitle." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user interacts with a marker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user interacts with a marker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user interacts with a marker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user interacts with a marker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user interacts with a marker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user interacts with a marker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user interacts with a marker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user interacts with a marker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user interacts with a marker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user interacts with a marker." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ServerProxy" Abstract="true" Extends="AbstractProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="API" Type="CRUDUrls">
          <Summary><![CDATA[Specific urls to call on CRUD action methods \"read\", \"create\", \"update\" and \"destroy\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;api&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Specific urls to call on CRUD action methods \&quot;read\&quot;, \&quot;create\&quot;, \&quot;update\&quot; and \&quot;destroy\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CacheString" Type="string" DefaultValue="&quot;_dc&quot;">
          <Summary><![CDATA[The name of the cache param added to the url when using noCache (defaults to \"_dc\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;_dc&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the cache param added to the url when using noCache (defaults to \&quot;_dc\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectionParam" Type="string" DefaultValue="&quot;dir&quot;">
          <Summary><![CDATA[The name of the direction parameter to send in a request. This is only used when simpleSortMode is set to true. Defaults to 'dir'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;dir&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the direction parameter to send in a request. This is only used when simpleSortMode is set to true. Defaults to 'dir'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParams" Type="ParameterCollection">
          <Summary><![CDATA[Extra parameters that will be included on every request. Individual requests with params of the same name will override these params when they are in conflict.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Extra parameters that will be included on every request. Individual requests with params of the same name will override these params when they are in conflict." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterParam" Type="string" DefaultValue="&quot;filter&quot;">
          <Summary><![CDATA[The name of the 'filter' parameter to send in a request. Defaults to 'filter'. Set this to undefined if you don't want to send a filter parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;filter&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'filter' parameter to send in a request. Defaults to 'filter'. Set this to undefined if you don't want to send a filter parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupParam" Type="string" DefaultValue="&quot;group&quot;">
          <Summary><![CDATA[The name of the 'group' parameter to send in a request. Defaults to 'group'. Set this to undefined if you don't want to send a group parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;group&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'group' parameter to send in a request. Defaults to 'group'. Set this to undefined if you don't want to send a group parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LimitParam" Type="string" DefaultValue="&quot;limit&quot;">
          <Summary><![CDATA[The name of the 'limit' parameter to send in a request. Defaults to 'limit'. Set this to undefined if you don't want to send a limit parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;limit&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'limit' parameter to send in a request. Defaults to 'limit'. Set this to undefined if you don't want to send a limit parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoCache" Type="bool" DefaultValue="true">
          <Summary><![CDATA[ Defaults to true. Disable caching by adding a unique parameter name to the request. Set to false to allow caching. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue=" Defaults to true. Disable caching by adding a unique parameter name to the request. Set to false to allow caching. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageParam" Type="string" DefaultValue="&quot;page&quot;">
          <Summary><![CDATA[The name of the 'page' parameter to send in a request. Defaults to 'page'. Set this to undefined if you don't want to send a page parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'page' parameter to send in a request. Defaults to 'page'. Set this to undefined if you don't want to send a page parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[The Ext.data.reader.Reader to use to decode the server's response. This can either be a Reader instance, a config object or just a valid Reader type name (e.g. 'json', 'xml').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;PrimaryProxy&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.data.reader.Reader to use to decode the server's response. This can either be a Reader instance, a config object or just a valid Reader type name (e.g. 'json', 'xml')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSortMode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Enabling simpleSortMode in conjunction with remoteSort will only send one sort property and a direction when a remote sort is requested. The directionParam and sortParam will be sent with the property name and either 'ASC' or 'DESC'. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Enabling simpleSortMode in conjunction with remoteSort will only send one sort property and a direction when a remote sort is requested. The directionParam and sortParam will be sent with the property name and either 'ASC' or 'DESC'. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortParam" Type="string" DefaultValue="&quot;sort&quot;">
          <Summary><![CDATA[The name of the 'sort' parameter to send in a request. Defaults to 'sort'. Set this to undefined if you don't want to send a sort parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;sort&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'sort' parameter to send in a request. Defaults to 'sort'. Set this to undefined if you don't want to send a sort parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartParam" Type="string" DefaultValue="&quot;start&quot;">
          <Summary><![CDATA[The name of the 'start' parameter to send in a request. Defaults to 'start'. Set this to undefined if you don't want to send a start parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;start&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the 'start' parameter to send in a request. Defaults to 'start'. Set this to undefined if you don't want to send a start parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The number of milliseconds to wait for a response. Defaults to 30000 milliseconds (30 seconds).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to wait for a response. Defaults to 30000 milliseconds (30 seconds)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default URL to be used for requests to the server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Editor" RawValue="typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor)" />
            <Attribute Type="Description" RawValue="The default URL to be used for requests to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Writer" Type="WriterCollection">
          <Summary><![CDATA[The Ext.data.writer.Writer to use to encode any request sent to the server. This can either be a Writer instance, a config object or just a valid Writer type name (e.g. 'json', 'xml').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;writer&gt;Primary&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.data.writer.Writer to use to encode any request sent to the server. This can either be a Writer instance, a config object or just a valid Writer type name (e.g. 'json', 'xml')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ProxyListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BuildUrl" Type="JFunction">
          <Summary><![CDATA[Generates a url based on a given Ext.data.Request object. By default, ServerProxy's buildUrl will add the cache-buster param to the end of the url. Subclasses may need to perform additional modifications to the url.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Generates a url based on a given Ext.data.Request object. By default, ServerProxy's buildUrl will add the cache-buster param to the end of the url. Subclasses may need to perform additional modifications to the url." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ServiceMessages">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SessionStorageProxy" Extends="WebStorageProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ShadowJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Shift" Extends="Fx">
      <Summary><![CDATA[Animates the transition of any combination of an element's dimensions, xy position and/or opacity. Any of these properties not specified in the config object will not be changed. This effect requires that at least one new dimension, position or opacity setting must be passed in on the config object in order for the function to have any effect. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Animates the transition of any combination of an element's dimensions, xy position and/or opacity. Any of these properties not specified in the config object will not be changed. This effect requires that at least one new dimension, position or opacity setting must be passed in on the config object in order for the function to have any effect. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ShiftConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Width" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's width]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's height]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's height" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's x position]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's x position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's y position]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's y position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="float?" DefaultValue="null">
          <Summary><![CDATA[Element's opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ShortcutDefaults" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTitle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;qTitle&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTip" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;qTip&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SimpleListener" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SimpleToolTip" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SingleItemCollection&lt;T&gt;" Extends="Collection&lt;T&gt;" Inherits="IXObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SingleItemCollectionJsonConverter" Extends="ItemCollectionJsonConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SingleItemStateCollection&lt;T&gt;" Extends="SingleItemCollection&lt;T&gt;" Inherits="IStateManagerwhereT:IStateManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SingleStringArrayJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SlideIn" Extends="Fx">
      <Summary><![CDATA[Slides the element into view. An anchor point can be optionally passed to set the point of origin for the slide effect. This function automatically handles wrapping the element with a fixed-size container if needed. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element into view. An anchor point can be optionally passed to set the point of origin for the slide effect. This function automatically handles wrapping the element with a fixed-size container if needed. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SlideOut" Extends="SlideIn">
      <Summary><![CDATA[Slides the element out of view. An anchor point can be optionally passed to set the end point for the slide effect. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. This function automatically handles wrapping the element with a fixed-size container if needed.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element out of view. An anchor point can be optionally passed to set the end point for the slide effect. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. This function automatically handles wrapping the element with a fixed-size container if needed." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Slider" Extends="SliderBase">
      <Summary><![CDATA[Slider which supports vertical or horizontal orientation, keyboard adjustments, configurable snapping, axis clicking and animation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Slider), &quot;Build.ToolboxIcons.Slider.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Slider runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Slider which supports vertical or horizontal orientation, keyboard adjustments, configurable snapping, axis clicking and animation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="SliderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SliderDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderBase" Abstract="true" Extends="Field">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for single thumb slider]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True for single thumb slider" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Number" Type="double?" DefaultValue="null">
          <Summary><![CDATA[Thumbs value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Thumbs value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turn on or off animation. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Turn on or off animation. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickToChange" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Determines whether or not clicking on the Slider axis will change the slider. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Determines whether or not clicking on the Slider axis will change the slider. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainThumbs" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to disallow thumbs from overlapping one another. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disallow thumbs from overlapping one another. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalPrecision" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of decimal places to which to round the Slider's value. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of decimal places to which to round the Slider's value. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="0">
          <Summary><![CDATA[How many units to change the slider when adjusting by drag and drop. Use this option to enable 'snapping'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How many units to change the slider when adjusting by drag and drop. Use this option to enable 'snapping'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyIncrement" Type="int" DefaultValue="1">
          <Summary><![CDATA[How many units to change the Slider when adjusting with keyboard navigation. Defaults to 1. If the increment config is larger, it will be used instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How many units to change the Slider when adjusting with keyboard navigation. Defaults to 1. If the increment config is larger, it will be used instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxValue" Type="double" DefaultValue="100d">
          <Summary><![CDATA[The maximum value for the Slider. Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="100d" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxValue&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value for the Slider. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinValue" Type="double" DefaultValue="0d">
          <Summary><![CDATA[The minimum value for the Slider. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0d" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinValue&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value for the Slider. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Orient the Slider vertically rather than horizontally, defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Orient the Slider vertically rather than horizontally, defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZeroBasedSnapping" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to calculate snap points based on increments from zero as opposed to from this Slider's minValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true to calculate snap points based on increments from zero as opposed to from this Slider's minValue." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseTips" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to use an Ext.slider.Tip to display tips for the value. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use an Ext.slider.Tip to display tips for the value. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TipText" Type="JFunction">
          <Summary><![CDATA[A function used to display custom text for the slider tip. Defaults to null, which will use the default on the plugin.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A function used to display custom text for the slider tip. Defaults to null, which will use the default on the plugin." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Modifier="Override" Type="object" DefaultValue="null">
          <Summary><![CDATA[A value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Modifier="Override" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;values&quot;, JsonMode.Serialize" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SyncThumbs">
          <Summary><![CDATA[Synchronizes thumbs position to the proper proportion of the total component width based on the current slider value. This will be called automatically when the Slider is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the Slider if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Synchronizes thumbs position to the proper proportion of the total component width based on the current slider value. This will be called automatically when the Slider is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the Slider if necessary." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddThumb" ParamsRaw="int value">
          <Summary><![CDATA[Creates a new thumb and adds it to the slider]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Creates a new thumb and adds it to the slider" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SliderDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider is being changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(int), &quot;The old value which the slider was previously.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the slider value is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeComplete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the slider value is changed by the user and any drag operations have completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changecomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed by the user and any drag operations have completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires continuously during the drag operation while the mouse is moving.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires continuously during the drag operation while the mouse is moving." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the drag operation has completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the drag operation has completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a drag operation has started.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a drag operation has started." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider is being changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(int), &quot;The old value which the slider was previously.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when the slider value is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires when the slider value is changed by the user and any drag operations have completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changecomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed by the user and any drag operations have completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Summary><![CDATA[Fires continuously during the drag operation while the mouse is moving.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires continuously during the drag operation while the mouse is moving." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentListener">
          <Summary><![CDATA[Fires after the drag operation has completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the drag operation has completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentListener">
          <Summary><![CDATA[Fires after a drag operation has started.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a drag operation has started." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderTip" Extends="Plugin">
      <Summary><![CDATA[Simple plugin for using an Ext.Tip with a slider to show the slider value]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SliderTip), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SliderTip runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Simple plugin for using an Ext.Tip with a slider to show the slider value" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetText" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Override this function to apply custom tip text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. SliderTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom tip text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SlidingPager" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SlidingPager), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SlidingPager runat=\&quot;server\&quot; /&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetTipText" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Override this function to apply custom tip text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. SlidingPager&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom tip text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SortInfo" Extends="BaseItem">
      <Summary><![CDATA[A config object in the format: {field: 'fieldName', direction: 'ASC|DESC'}. The direction property is case-sensitive.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Field&quot;" />
        <Attribute Type="Description" RawValue="A config object in the format: {field: 'fieldName', direction: 'ASC|DESC'}. The direction property is case-sensitive." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Field" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Internal UI Event. Fired before the view is refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before the view is refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Direction" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[The direction to sort (\"asc\" or \"desc\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The direction to sort (\&quot;asc\&quot; or \&quot;desc\&quot;)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerField" Extends="SpinnerFieldBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="SpinnerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SpinnerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerFieldBase" Abstract="true" Extends="TriggerFieldBase">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="KeyNavEnabled" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the up and down arrow keys should trigger spinning up and down. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the up and down arrow keys should trigger spinning up and down. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseWheelEnabled" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the mouse wheel should trigger spinning up and down while the field has focus. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the mouse wheel should trigger spinning up and down while the field has focus. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RepeatTriggerClick" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether a click repeater should be attached to the spinner buttons. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether a click repeater should be attached to the spinner buttons. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDownEnabled" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the down spinner button is enabled. Defaults to true. To change this after the component is created, use the setSpinDownEnabled method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSpinDownEnabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the down spinner button is enabled. Defaults to true. To change this after the component is created, use the setSpinDownEnabled method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUpEnabled" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specifies whether the up spinner button is enabled. Defaults to true. To change this after the component is created, use the setSpinUpEnabled method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSpinUpEnabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Specifies whether the up spinner button is enabled. Defaults to true. To change this after the component is created, use the setSpinUpEnabled method." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetSpinDownEnabled" ParamsRaw="bool enabled">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSpinUpEnabled" ParamsRaw="bool enabled">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SpinDown">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SpinUp">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SpinnerFieldDirectEvents" Extends="TriggerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;direction&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerFieldListeners" Extends="TriggerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;direction&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButton" Extends="SplitButtonBase">
      <Summary><![CDATA[A split button that provides a built-in dropdown arrow that can fire an event separately from the default click event of the button. Typically this would be used to display a dropdown menu that provides additional options to the primary button action, but any custom handler can provide the arrowclick implementation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A split button that provides a built-in dropdown arrow that can fire an event separately from the default click event of the button. Typically this would be used to display a dropdown menu that provides additional options to the primary button action, but any custom handler can provide the arrowclick implementation." />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SplitButton runat=\&quot;server\&quot; Text=\&quot;Split Button\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SplitButton), &quot;Build.ToolboxIcons.SplitButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="SplitButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SplitButtonDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonBase" Abstract="true" Extends="ButtonBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the arrow button is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. SplitButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetArrowHandler&quot;" />
            <Attribute Type="Description" RawValue="A function called when the arrow button is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArrowTooltip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title attribute of the arrow.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. SplitButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The title attribute of the arrow." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonDirectEvents" Extends="ButtonDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this button's arrow is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(SplitButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;arrowclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button's arrow is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonListeners" Extends="ButtonListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when this button's arrow is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(SplitButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;arrowclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button's arrow is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitCommand" Extends="GridCommand">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Spotlight" Extends="Observable" Inherits="IVirtual">
      <Summary><![CDATA[This control allows you to restrict input to a particular element by masking all other page content.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Spotlight runat=\&quot;server\&quot;&gt;&lt;/{0}:Spotlight&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Spotlight), &quot;Build.ToolboxIcons.Spotlight.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This control allows you to restrict input to a particular element by masking all other page content." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate the spot (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the spot (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="double" DefaultValue="0.25">
          <Summary><![CDATA[Animation duration if animate = true (defaults to .25)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.25" />
            <Attribute Type="Description" RawValue="Animation duration if animate = true (defaults to .25)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.EaseNone">
          <Summary><![CDATA[Animation easing if animate = true (defaults to 'easeNone')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="Easing.EaseNone" />
            <Attribute Type="Description" RawValue="Animation easing if animate = true (defaults to 'easeNone')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Show" ParamsRaw="string id">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="BaseControl control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncSize">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="Sprite" Extends="SpriteAttributes">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SpriteID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the sprite draggable.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the sprite draggable." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Group" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The group that this sprite belongs to, or an array of groups. Only relevant when added to a Ext.draw.Surface]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The group that this sprite belongs to, or an array of groups. Only relevant when added to a Ext.draw.Surface" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="SpriteListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddCls" ParamsRaw="string className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddCls" ParamsRaw="string[] className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Animate" ParamsRaw="AnimConfig cfg">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SequenceFx">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopAnimation">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncFx">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Destroy">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="bool redraw">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Redraw">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveCls" ParamsRaw="string className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveCls" ParamsRaw="string[] className">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAttributes" ParamsRaw="Dictionary&lt;string,object&gt; attrs, bool redraw">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAttributes" ParamsRaw="Dictionary&lt;string, object&gt; attrs">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAttributes" ParamsRaw="SpriteAttributes attrs, bool redraw">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAttributes" ParamsRaw="SpriteAttributes attrs">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStyle" ParamsRaw="Dictionary&lt;string, string&gt; styles">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStyle" ParamsRaw="string property, string value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="bool redraw">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SpriteAttributes" Extends="BaseItem" Inherits="IQuotable">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="SpriteType" DefaultValue="SpriteType.None">
          <Summary><![CDATA[The type of the sprite. Possible options are 'circle', 'path', 'rect', 'text', 'square', 'image']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SpriteType.None" />
            <Attribute Type="Description" RawValue="The type of the sprite. Possible options are 'circle', 'path', 'rect', 'text', 'square', 'image'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fill" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The fill color]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The fill color" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Font" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Used with text type sprites. The full font description. Uses the same syntax as the CSS font parameter]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Used with text type sprites. The full font description. Uses the same syntax as the CSS font parameter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Used in rectangle sprites, the height of the rectangle]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Used in rectangle sprites, the height of the rectangle" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="double" DefaultValue="1d">
          <Summary><![CDATA[The opacity of the sprite. A number between 0 and 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1d" />
            <Attribute Type="Description" RawValue="The opacity of the sprite. A number between 0 and 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Path" Type="string" DefaultValue="null">
          <Summary><![CDATA[Used in path sprites, the path of the sprite written in SVG-like path syntax]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Used in path sprites, the path of the sprite written in SVG-like path syntax" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Radius" Type="int" DefaultValue="0">
          <Summary><![CDATA[Used in circle sprites, the radius of the circle]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Used in circle sprites, the radius of the circle" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Size" Type="int" DefaultValue="0">
          <Summary><![CDATA[Used in square sprites, the dimension of the square]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Used in square sprites, the dimension of the square" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stroke" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The stroke color]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The stroke color" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Used with text type sprites. The text itself]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Used with text type sprites. The text itself" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Used in rectangle sprites, the width of the rectangle]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Used in rectangle sprites, the width of the rectangle" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The position along the x-axis]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The position along the x-axis" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int?" DefaultValue="null">
          <Summary><![CDATA[The position along the y-axis]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The position along the y-axis" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Src" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SrcProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;src&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Blur" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClipRect" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;clip-rect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cursor" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CX" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cx&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CY" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cy&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DominantBaseline" Type="DominantBaseline" DefaultValue="DominantBaseline.Auto">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="DominantBaseline.Auto" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DominantBaselineProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dominant-baseline&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FillOpacity" Type="double?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;fill-opacity&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontFamily" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;font-family&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontSize" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;font-size&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontStyle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;font-style&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontWeight" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;font-weight&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Gradient" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RX" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rx&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RY" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ry&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeDashArray" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-dasharray&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeLinecap" Type="StrokeLinecap" DefaultValue="StrokeLinecap.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-linecap&quot;, JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="StrokeLinecap.None" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeLinejoin" Type="StrokeLinejoin" DefaultValue="StrokeLinejoin.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-linejoin&quot;, JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="StrokeLinejoin.None" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeMiterLimit" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-miterlimit&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeOpacity" Type="double" DefaultValue="1d">
          <Summary><![CDATA[Specifies the opacity of the painting operation used to stroke the current object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-opacity&quot;" />
            <Attribute Type="DefaultValue" RawValue="1d" />
            <Attribute Type="Description" RawValue="Specifies the opacity of the painting operation used to stroke the current object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrokeWidth" Type="double?" DefaultValue="null">
          <Summary><![CDATA[This property specifies the width of the stroke on the current object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stroke-width&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="This property specifies the width of the stroke on the current object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextAnchor" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;text-anchor&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZIndex" Type="int?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Translate" Type="TranslateAttribute">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Rotate" Type="RotateAttribute">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scale" Type="ScaleAttribute">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpriteAttributesCollection" Extends="BaseItemCollection&lt;SpriteAttributes&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SpriteCollection" Extends="BaseItemCollection&lt;Sprite&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SpriteListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Render" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Sprite), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;render&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StatusBar" Extends="ToolbarBase">
      <Summary><![CDATA[Basic status bar component that can be used as the bottom toolbar of any Ext.Panel.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:StatusBar runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:StatusBar&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(StatusBar), &quot;Build.ToolboxIcons.StatusBar.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic status bar component that can be used as the bottom toolbar of any Ext.Panel." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoClear" Type="int" DefaultValue="5000">
          <Summary><![CDATA[The number of milliseconds to wait after setting the status via setStatus before automatically clearing the status text and icon (defaults to 5000). Note that this only applies when passing the clear argument to setStatus since that is the only way to defer clearing the status. This can be overridden by specifying a different wait value in setStatus. Calls to clearStatus always clear the status bar immediately and ignore this value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to wait after setting the status via setStatus before automatically clearing the status text and icon (defaults to 5000). Note that this only applies when passing the clear argument to setStatus since that is the only way to defer clearing the status. This can be overridden by specifying a different wait value in setStatus. Calls to clearStatus always clear the status bar immediately and ignore this value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The default Icon applied when calling showBusy (defaults to 'Icon.None'). It can be overridden at any time by passing the iconCls argument into showBusy. See the Icon or IconCls docs for additional details about customizing the icon.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The default Icon applied when calling showBusy (defaults to 'Icon.None'). It can be overridden at any time by passing the iconCls argument into showBusy. See the Icon or IconCls docs for additional details about customizing the icon." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;busyIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconCls" Type="string" DefaultValue="&quot;x-status-busy&quot;">
          <Summary><![CDATA[The default iconCls applied when calling showBusy (defaults to 'x-status-busy'). It can be overridden at any time by passing the iconCls argument into showBusy. See the iconCls docs for additional details about customizing the icon.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-busy&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls applied when calling showBusy (defaults to 'x-status-busy'). It can be overridden at any time by passing the iconCls argument into showBusy. See the iconCls docs for additional details about customizing the icon." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The default text applied when calling showBusy (defaults to 'Loading...'). It can be overridden at any time by passing the text argument into showBusy.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text applied when calling showBusy (defaults to 'Loading...'). It can be overridden at any time by passing the text argument into showBusy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Modifier="Override" Type="string" DefaultValue="&quot;x-statusbar&quot;">
          <Summary><![CDATA[The base class applied to the containing element for this component on render (defaults to 'x-statusbar')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-statusbar&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base class applied to the containing element for this component on render (defaults to 'x-statusbar')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The default Icon (see the Icon or IconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to 'Icon.None').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The default Icon (see the Icon or IconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to 'Icon.None')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default iconCls value (see the iconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls value (see the iconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultText" Type="string" DefaultValue="&quot;&amp;nbsp;&quot;">
          <Summary><![CDATA[The default text value. This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;nbsp;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text value. This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[An Icon that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to 'Icon.None'). The Icons is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetIcon&quot;" />
            <Attribute Type="Description" RawValue="An Icon that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to 'Icon.None'). The Icons is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to ''). The class is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="A CSS class that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to ''). The class is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StatusAlign" Type="StatusAlign" DefaultValue="StatusAlign.Left">
          <Summary><![CDATA[The alignment of the status element within the overall StatusBar layout. When the StatusBar is rendered, it creates an internal div containing the status text and icon. Any additional Toolbar items added in the StatusBar's items config, or added via add or any of the supported add* methods, will be rendered, in added order, to the opposite side. The status element is greedy, so it will automatically expand to take up all sapce left over by any other items.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="StatusAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alignment of the status element within the overall StatusBar layout. When the StatusBar is rendered, it creates an internal div containing the status text and icon. Any additional Toolbar items added in the StatusBar's items config, or added via add or any of the supported add* methods, will be rendered, in added order, to the opposite side. The status element is greedy, so it will automatically expand to take up all sapce left over by any other items." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string that will be rendered into the status element as the status message (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Description" RawValue="A string that will be rendered into the status element as the status message (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="StatusBarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearStatus">
          <Summary><![CDATA[Clears the status text and iconCls. Also supports clearing via an optional fade out animation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the status text and iconCls. Also supports clearing via an optional fade out animation." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearStatus" ParamsRaw="StatusBarClearStatusConfig config">
          <Summary><![CDATA[Clears the status text and iconCls. Also supports clearing via an optional fade out animation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the status text and iconCls. Also supports clearing via an optional fade out animation." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStatus" ParamsRaw="string text">
          <Summary><![CDATA[Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStatus" ParamsRaw="StatusBarStatusConfig config">
          <Summary><![CDATA[Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBusy" ParamsRaw="string text">
          <Summary><![CDATA[Convenience method for setting the status text and icon to special values that are pre-configured to indicate a 'busy' state, usually for loading or processing activities.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Convenience method for setting the status text and icon to special values that are pre-configured to indicate a 'busy' state, usually for loading or processing activities." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StatusBarClearConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Anim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to clear the status immediately once the callback executes (defaults to true which fades the status out).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to clear the status immediately once the callback executes (defaults to true which fades the status out)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDefaults" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to completely clear the status text and iconCls (defaults to true which uses defaultText and defaultIconCls).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to completely clear the status text and iconCls (defaults to true which uses defaultText and defaultIconCls)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wait" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The number of milliseconds to wait before clearing (defaults to autoClear).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to wait before clearing (defaults to autoClear)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StatusBarClearStatusConfig" Extends="BaseControl">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Anim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to clear the status by fading out the status element (defaults to false which clears immediately)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to clear the status by fading out the status element (defaults to false which clears immediately)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDefaults" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to reset the text and icon using defaultText and defaultIconCls (defaults to false which sets the text to '' and removes any existing icon class).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to reset the text and icon using defaultText and defaultIconCls (defaults to false which sets the text to '' and removes any existing icon class)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StatusBarDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StatusBarListeners" Extends="AbstractComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StatusBarStatusConfig" Extends="BaseControl">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The status text to display. If not specified, any current status text will remain unchanged.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The status text to display. If not specified, any current status text will remain unchanged." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to clear icon]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to clear icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Store" Extends="StoreBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[The Store class encapsulates a client side cache of Record objects which provide input data for Components such as the GridPanel, the ComboBox, or the DataView.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Store runat=\&quot;server\&quot;&gt;&lt;/{0}:Store&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Store), &quot;Build.ToolboxIcons.Store.bmp&quot;" />
        <Attribute Type="Description" RawValue="The Store class encapsulates a client side cache of Record objects which provide input data for Components such as the GridPanel, the ComboBox, or the DataView." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MemoryProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="StoreListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="StoreDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreBase" Abstract="true" Extends="AbstractStore">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoDecode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then submitted data will be decoded]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true then submitted data will be decoded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buffered" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow the store to buffer and pre-fetch pages of records. This is to be used in conjunction with a view will tell the store to pre-fetch records ahead of a time.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allow the store to buffer and pre-fetch pages of records. This is to be used in conjunction with a view will tell the store to pre-fetch records ahead of a time." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearOnPageLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to empty the store when loading another page via loadPage, nextPage or previousPage (defaults to true). Setting to false keeps existing records, allowing large data sets to be loaded one page at a time but rendered all together.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to empty the store when loading another page via loadPage, nextPage or previousPage (defaults to true). Setting to false keeps existing records, allowing large data sets to be loaded one page at a time but rendered all together." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearRemovedOnLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to clear anything in the removed record collection when the store loads.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to clear anything in the removed record collection when the store loads." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;data&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDir" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[The direction in which sorting should be applied when grouping. Defaults to \"ASC\" - the other supported value is \"DESC\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="Description" RawValue="The direction in which sorting should be applied when grouping. Defaults to \&quot;ASC\&quot; - the other supported value is \&quot;DESC\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The (optional) field by which to group data in the store. Internally, grouping is very similar to sorting - the groupField and groupDir are injected as the first sorter (see sort). Stores support a single level of grouping, and groups can be fetched via the getGroups method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The (optional) field by which to group data in the store. Internally, grouping is very similar to sorting - the groupField and groupDir are injected as the first sorter (see sort). Stores support a single level of grouping, and groups can be fetched via the getGroups method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groupers" Type="DataSorterCollection">
          <Summary><![CDATA[The collection of groupers currently applied to this Store]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Array" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The collection of groupers currently applied to this Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeadingBufferZone" Type="int" DefaultValue="200">
          <Summary><![CDATA[When buffered, the number of extra rows to keep cached on the leading side of scrolling buffer as scrolling proceeds. A larger number means fewer replenishments from the server. Defaults to: 200]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When buffered, the number of extra rows to keep cached on the leading side of scrolling buffer as scrolling proceeds. A larger number means fewer replenishments from the server. Defaults to: 200" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="25">
          <Summary><![CDATA[The number of records considered to form a 'page'. This is used to power the built-in paging using the nextPage and previousPage functions. Defaults to 25.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="25" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of records considered to form a 'page'. This is used to power the built-in paging using the nextPage and previousPage functions. Defaults to 25." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PurgePageCount" Type="int" DefaultValue="5">
          <Summary><![CDATA[The number of pages to keep in the cache before purging additional records. A value of 0 indicates to never purge the prefetched data. This option is only relevant when the buffered option is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pages to keep in the cache before purging additional records. A value of 0 indicates to never purge the prefetched data. This option is only relevant when the buffered option is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteFilter" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to defer any filtering operation to the server. If false, filtering is done locally on the client. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to defer any filtering operation to the server. If false, filtering is done locally on the client. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteGroup" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the grouping should apply on the server side, false if it is local only (defaults to false). If the grouping is local, it can be applied immediately to the data. If it is remote, then it will simply act as a helper, automatically sending the grouping information to the server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the grouping should apply on the server side, false if it is local only (defaults to false). If the grouping is local, it can be applied immediately to the data. If it is remote, then it will simply act as a helper, automatically sending the grouping information to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteSort" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to defer any sorting operation to the server. If false, sorting is done locally on the client. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to defer any sorting operation to the server. If false, sorting is done locally on the client. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemotePaging" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to perform remote paging.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to perform remote paging." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsPagingStore" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use PagingStore instance]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to use PagingStore instance" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortOnFilter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[For local filtering only, causes sort to be called whenever filter is called, causing the sorters to be reapplied after filtering. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="For local filtering only, causes sort to be called whenever filter is called, causing the sorters to be reapplied after filtering. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrailingBufferZone" Type="int" DefaultValue="25">
          <Summary><![CDATA[When buffered, the number of extra records to keep cached on the trailing side of scrolling buffer as scrolling proceeds. A larger number means fewer replenishments from the server. Defaults to: 25]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="25" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When buffered, the number of extra records to keep cached on the trailing side of scrolling buffer as scrolling proceeds. A larger number means fewer replenishments from the server. Defaults to: 25" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WarningOnDirty" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true show a warning before load/reload if store has dirty data]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true show a warning before load/reload if store has dirty data" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyWarningTitle" Type="string" DefaultValue="&quot;Uncommitted Changes&quot;">
          <Summary><![CDATA[The title of window showing before load if the dirty data exists]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Uncommitted Changes&quot;" />
            <Attribute Type="Description" RawValue="The title of window showing before load if the dirty data exists" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyWarningText" Type="string" DefaultValue="&quot;You have uncommitted changes.  Are you sure you want to load/reload data?&quot;">
          <Summary><![CDATA[The text of window showing before load if the dirty data exists]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;You have uncommitted changes.  Are you sure you want to load/reload data?&quot;" />
            <Attribute Type="Description" RawValue="The text of window showing before load if the dirty data exists" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreExtraFields" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true then only properties included to reader will be converted to json]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true then only properties included to reader will be converted to json" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[The Ext.data.reader.Reader to use to decode the server's response. This can either be a Reader instance, a config object or just a valid Reader type name (e.g. 'json', 'xml').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.data.reader.Reader to use to decode the server's response. This can either be a Reader instance, a config object or just a valid Reader type name (e.g. 'json', 'xml')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Writer" Type="WriterCollection">
          <Summary><![CDATA[The Ext.data.writer.Writer to use to encode any request sent to the server. This can either be a Writer instance, a config object or just a valid Writer type name (e.g. 'json', 'xml').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.data.writer.Writer to use to encode any request sent to the server. This can either be a Writer instance, a config object or just a valid Writer type name (e.g. 'json', 'xml')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataSource" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Themeable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="DesignerSerializationVisibilityAttribute" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataSourceID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ThemeableAttribute" RawValue="false" />
            <Attribute Type="IDReferencePropertyAttribute" RawValue="typeof(DataSourceControl)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataMember" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ThemeableAttribute" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Add" ParamsRaw="object data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="System.Collections.IEnumerable data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="ModelProxy model">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddSorted" ParamsRaw="ModelProxy model">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearFilter">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearFilter" ParamsRaw="bool suppressEvent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearGrouping">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CommitChanges">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Each" ParamsRaw="JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Each" ParamsRaw="JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Filter" ParamsRaw="string field, string value">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Filter" ParamsRaw="DataFilterCollection filters">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FilterBy" ParamsRaw="JFunction fn">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FilterBy" ParamsRaw="JFunction fn, string scope">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Group" ParamsRaw="string field, SortDirection direction">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Group" ParamsRaw="string field">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Group" ParamsRaw="DataSorterCollection groupers">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Group" ParamsRaw="DataSorterCollection groupers, SortDirection direction">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="GuaranteeRange" ParamsRaw="int start, int end">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="GuaranteeRange" ParamsRaw="int start, int end, JFunction callback">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, object data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, System.Collections.IEnumerable data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadData" ParamsRaw="object data, bool append">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadData" ParamsRaw="object data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadData" ParamsRaw="ModelProxy data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadData" ParamsRaw="ModelProxy data, bool append">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadPage" ParamsRaw="int page, object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadPage" ParamsRaw="int page">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadRawData" ParamsRaw="object data, bool append">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadRawData" ParamsRaw="object data">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="NextPage" ParamsRaw="object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="NextPage">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Prefetch" ParamsRaw="object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Prefetch">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PrefetchPage" ParamsRaw="int page, object options">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PrefetchRange" ParamsRaw="int start, int end">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PrefetchPage" ParamsRaw="int page">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PreviousPage">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RejectChanges">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll" ParamsRaw="bool silent">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="ModelField field, bool rebuildMeta">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="ModelField field">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="ModelField field, int index, bool rebuildMeta">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveField" ParamsRaw="ModelField field">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveFields">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RebuildMeta">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DataBind" Modifier="Override">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StoreCollection&lt;T&gt;" Extends="SingleItemCollection&lt;T&gt;">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="T">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreDataHandler">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreDirectEvents" Extends="AbstractStoreDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforePrefetch" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a prefetch occurs. Return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;, typeof(object), &quot;Ext.data.Operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeprefetch&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a prefetch occurs. Return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired whenever the grouping in the grid changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupers&quot;, typeof(object), &quot;The array of grouper objects&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired whenever the grouping in the grid changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prefetch" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever records have been prefetched]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;, typeof(object), &quot;True if the operation was successful.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;operation&quot;, typeof(object), &quot;The associated operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;prefetch&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever records have been prefetched" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreListeners" Extends="AbstractStoreListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforePrefetch" Type="ComponentListener">
          <Summary><![CDATA[Fires before a prefetch occurs. Return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;, typeof(object), &quot;Ext.data.Operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeprefetch&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a prefetch occurs. Return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fired whenever the grouping in the grid changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupers&quot;, typeof(object), &quot;The array of grouper objects&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired whenever the grouping in the grid changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prefetch" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever records have been prefetched]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;, typeof(object), &quot;True if the operation was successful.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;operation&quot;, typeof(object), &quot;The associated operation&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;prefetch&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever records have been prefetched" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreNotFoundException" Extends="Exception">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreParameter" Extends="Parameter">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ApplyMode" Type="ApplyMode" DefaultValue="ApplyMode.Always">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="ApplyMode.Always" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Action" Type="StoreAction?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreParameterCollection" Extends="BaseItemCollection&lt;StoreParameter&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreReadDataEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreRequestParameters">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreResponseData">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreResult" Extends="ActionResult">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreSubmitDataEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StringArrayJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StringFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;Enter Filter Text...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Enter Filter Text...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Predefined filter value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Predefined filter value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SubmitEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SubmitHandler">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SubmittedNode">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Summary" Extends="AbstractSummary">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ftype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SummaryColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SummaryType" Type="SummaryType" DefaultValue="SummaryType.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SummaryType.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomSummaryType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;summaryType&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SummaryRenderer" Type="JFunction">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SwitchOff" Extends="Fx">
      <Summary><![CDATA[Blinks the element as if it was clicked and then collapses on its center (similar to switching off a television). When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Blinks the element as if it was clicked and then collapses on its center (similar to switching off a television). When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Tab" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TabID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItemID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Managed container id. It will be shown when tab is activated]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Managed container id. It will be shown when tab is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItem" Type="AbstractComponent" DefaultValue="null">
          <Summary><![CDATA[Managed container. It will be shown when tab is activated]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" RawValue="Managed container. It will be shown when tab is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItemProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How the action item. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. AbstractComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How the action item. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component hidden (default is false). If true, the hide method will be called internally.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this component hidden (default is false). If true, the hide method will be called internally." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable the tab.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disable the tab." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetTooltip" ParamsRaw="string tooltip">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TabCloseMenu" Extends="Plugin" Inherits="IIcon">
      <Summary><![CDATA[Very simple plugin for adding a close context menu to tabs]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabCloseMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabCloseMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Very simple plugin for adding a close context menu to tabs" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CloseTabText" Type="string" DefaultValue="&quot;Close Tab&quot;">
          <Summary><![CDATA[Text to display in ContextMenu for menu option to close current Tab.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close Tab&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text to display in ContextMenu for menu option to close current Tab." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowCloseOthers" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Indicates whether to show the 'Close Others' option. Defaults to 'true'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Indicates whether to show the 'Close Others' option. Defaults to 'true'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseOtherTabsText" Type="string" DefaultValue="&quot;Close Other Tabs&quot;">
          <Summary><![CDATA[Text to display in ContextMenu for menu option to close other Tabs.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close Other Tabs&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text to display in ContextMenu for menu option to close other Tabs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowCloseAll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Indicates whether to show the 'Close All' option. Defaults to 'true'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Indicates whether to show the 'Close All' option. Defaults to 'true'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAllTabsText" Type="string" DefaultValue="&quot;Close All Tabs&quot;">
          <Summary><![CDATA[The text for closing all tabs. Defaults to 'Close All Tabs'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close All Tabs&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text for closing all tabs. Defaults to 'Close All Tabs'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseTabIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeTabIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseOtherTabsIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeOtherTabsIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAllTabsIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeAllTabsIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraItemsHead" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;extraItemsHead&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraItemsTail" Type="ItemsCollection&lt;AbstractComponent&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;extraItemsTail&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabFx" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabFx), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabFx runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;Frame&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabFx&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Frame&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Args" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TabFx&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TableAttrs" Type="DomObject">
          <Summary><![CDATA[An object containing properties which are added to the DomHelper specification used to create the layout's <table> element.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are added to the DomHelper specification used to create the layout's &lt;table&gt; element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TDAttrs" Type="DomObject">
          <Summary><![CDATA[An object containing properties which are added to the DomHelper specification used to create the layout's <td> elements.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tdAttrs&quot;,JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are added to the DomHelper specification used to create the layout's &lt;td&gt; elements." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TRAttrs" Type="DomObject">
          <Summary><![CDATA[An object containing properties which are added to the DomHelper specification used to create the layout's <tr> elements.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;trAttrs&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are added to the DomHelper specification used to create the layout's &lt;tr&gt; elements." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TablePanel" Abstract="true" Extends="AbstractPanel" Inherits="INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editor" Type="EditorCollection">
          <Summary><![CDATA[(optional) The Ext.form.Field to use when editing values in columns if editing is supported by the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="(optional) The Ext.form.Field to use when editing values in columns if editing is supported by the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editors&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorStrategy" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorOptions" Type="CellEditorOptions">
          <Summary><![CDATA[Editor options]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Editor options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnLines" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to add css for column separation lines. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TablePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to add css for column separation lines. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnModel" Type="GridHeaderContainer">
          <Summary><![CDATA[Column definitions which define all columns that appear in this grid. Each column definition provides the header text for the column, and a definition of where the data for that column comes from.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Column definitions which define all columns that appear in this grid. Each column definition provides the header text for the column, and a definition of where the data for that column comes from." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferRowRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Defaults to true to enable deferred row rendering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to true to enable deferred row rendering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableSelection" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable selection model. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disable selection model. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Default text (html tags are accepted) to display in the Panel body when the Store is empty. When specified, and the Store is empty, the text will be rendered inside a DIV with the CSS class \"x-grid-empty\".]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Default text (html tags are accepted) to display in the Panel body when the Store is empty. When specified, and the Store is empty, the text will be rendered inside a DIV with the CSS class \&quot;x-grid-empty\&quot;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable column hiding within this grid. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable column hiding within this grid. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnMove" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable column dragging within this grid. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable column dragging within this grid. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable column resizing within this grid. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable column resizing within this grid. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableLocking" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable locking support for this grid. Alternatively, locking will also be automatically enabled if any of the columns in the column configuration contain the locked config option. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable locking support for this grid. Alternatively, locking will also be automatically enabled if any of the columns in the column configuration contain the locked config option. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceFit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to force the columns to fit into the available width. Headers are first sized according to configuration, whether that be a specific width, or flex. Then they are all proportionally changed in width so that the entire content width is used.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to force the columns to fit into the available width. Headers are first sized according to configuration, whether that be a specific width, or flex. Then they are all proportionally changed in width so that the entire content width is used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the headers. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the headers. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable 'MULTI' selection mode on selection model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable 'MULTI' selection mode on selection model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RestrictColumnReorder" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain column dragging so that a column cannot be dragged in or out of it's current group. Only relevant while enableColumnMove is enabled. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to constrain column dragging so that a column cannot be dragged in or out of it's current group. Only relevant while enableColumnMove is enabled. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowLines" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Adds row line styling. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Adds row line styling. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scroll" Type="ScrollMode" DefaultValue="ScrollMode.Both">
          <Summary><![CDATA[Scrollers configuration. Valid values are 'both', 'horizontal', 'vertical'  or 'none'. Defaults to Both.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ScrollMode.Both" />
            <Attribute Type="Description" RawValue="Scrollers configuration. Valid values are 'both', 'horizontal', 'vertical'  or 'none'. Defaults to Both." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollDelta" Type="int" DefaultValue="40">
          <Summary><![CDATA[Number of pixels to scroll when scrolling with mousewheel. Defaults to 40.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="40" />
            <Attribute Type="Description" RawValue="Number of pixels to scroll when scrolling with mousewheel. Defaults to 40." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable 'SIMPLE' selection mode on selection model.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable 'SIMPLE' selection mode on selection model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortableColumns" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable column sorting via clicking the header and via the Sorting menu items. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable column sorting via clicking the header and via the Sorting menu items. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionModel" Type="SelectionModelCollection">
          <Summary><![CDATA[Any subclass of AbstractSelectionModel that will provide the selection model for the grid (defaults to Ext.grid.RowSelectionModel if not specified).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;selModel&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Any subclass of AbstractSelectionModel that will provide the selection model for the grid (defaults to Ext.grid.RowSelectionModel if not specified)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelType" Type="SelectionType?" DefaultValue="null">
          <Summary><![CDATA[Selection model type]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Selection model type" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDeselect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow users to deselect a record in a DataView, List or Grid. Only applicable when the SelectionModel's mode is 'SINGLE'. Defaults to false. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allow users to deselect a record in a DataView, List or Grid. Only applicable when the SelectionModel's mode is 'SINGLE'. Defaults to false. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidateScrollerOnRefresh" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Reset the scrollbar when the view refreshs. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Reset the scrollbar when the view refreshs. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreTargets" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of selectors of the ignore targets]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of selectors of the ignore targets" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddColumn" ParamsRaw="ColumnBase column, bool doLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddColumn" ParamsRaw="ColumnBase column">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertColumn" ParamsRaw="int index, ColumnBase column, bool doLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertColumn" ParamsRaw="int index, ColumnBase column">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveColumn" ParamsRaw="int index, bool doLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveColumn" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAllColumns" ParamsRaw="bool doLayout">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAllColumns">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reconfigure" ParamsRaw="string storeId">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reconfigure">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reconfigure" ParamsRaw="AbstractStore store, IEnumerable&lt;ColumnBase&gt; columns">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reconfigure" ParamsRaw="IEnumerable&lt;ColumnBase&gt; columns">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TablePanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before a record is selected. If any listener returns false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is selected. If any listener returns false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the click event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the contextmenu event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the dblclick event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mousedown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseout event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseout event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseover event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseover event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseup event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before a record is deselected. If any listener returns false, the deselection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is deselected. If any listener returns false, the deselection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires before editing is triggered. Return false from event handler to stop the editing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires before editing is triggered. Return false from event handler to stop the editing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the click event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the contextmenu event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the dblclick event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mousedown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseenter event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseenter event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseleave event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseleave event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the mouseup event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires when the user started editing but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires when the user started editing but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when you move the mouse out of the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse out of the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when you move the mouse over the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse over the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse up on the container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on the container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a record is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires after a editing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires after a editing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an item is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse down on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse down on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse enters an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse leaves an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when there is a mouse up on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a reconfigure]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TablePanel), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reconfigure" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollerHide" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a scroller is hidden]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scroller&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;orientation&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scrollerhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a scroller is hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollerShow" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a scroller is shown]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scroller&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;orientation&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scrollershow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a scroller is shown" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnHide" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;fromIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;toIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;width&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnShow" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnshow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when table cell is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;td&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;tr&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when table cell is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when table cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;td&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;tr&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when table cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a selection change has occurred]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selected&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a selection change has occurred" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;direction&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a record is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is selected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires after editing, but before the value is set in the record. Return false from event handler to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires after editing, but before the value is set in the record. Return false from event handler to cancel the change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid view is available (use this for selecting a default row).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid view is available (use this for selecting a default row)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TablePanelListeners" Extends="PanelListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fired before a record is selected. If any listener returns false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is selected. If any listener returns false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the click event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires before the contextmenu event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the dblclick event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mousedown event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseout event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseout event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseover event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseover event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeContainerMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseup event on the container is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecontainermouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on the container is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDeselect" Type="ComponentListener">
          <Summary><![CDATA[Fired before a record is deselected. If any listener returns false, the deselection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before a record is deselected. If any listener returns false, the deselection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires before editing is triggered. Return false from event handler to stop the editing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires before editing is triggered. Return false from event handler to stop the editing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the click event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the click event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires before the contextmenu event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the contextmenu event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before the dblclick event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the dblclick event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mousedown event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mousedown event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseenter event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseenter event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseleave event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseleave event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires before the mouseup event on an item is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the mouseup event on an item is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires when the user started editing but then cancelled the edit.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires when the user started editing but then cancelled the edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when you move the mouse out of the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse out of the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when you move the mouse over the container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when you move the mouse over the container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse up on the container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on the container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deselect" Type="ComponentListener">
          <Summary><![CDATA[Fired after a record is deselected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is deselected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Edit" Type="ComponentListener">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires after a editing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;edit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires after a editing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when an item is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an item is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse down on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse down on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse enters an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse leaves an item.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves an item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when there is a mouse up on an item]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when there is a mouse up on an item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Type="ComponentListener">
          <Summary><![CDATA[Fires after a reconfigure]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TablePanel), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reconfigure" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollerHide" Type="ComponentListener">
          <Summary><![CDATA[Fires when a scroller is hidden]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scroller&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;orientation&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scrollerhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a scroller is hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollerShow" Type="ComponentListener">
          <Summary><![CDATA[Fires when a scroller is shown]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scroller&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;orientation&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scrollershow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a scroller is shown" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnHide" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;fromIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;toIdx&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;width&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnShow" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnshow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentListener">
          <Summary><![CDATA[Fired when table cell is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;td&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;tr&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when table cell is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fired when table cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;td&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;tr&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when table cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fired after a selection change has occurred]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selected&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a selection change has occurred" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridHeaderContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;column&quot;, typeof(ColumnBase), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;direction&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fired after a record is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a record is selected" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Forwarded event from Ext.grid.plugin.Editing. Fires after editing, but before the value is set in the record. Return false from event handler to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Forwarded event from Ext.grid.plugin.Editing. Fires after editing, but before the value is set in the record. Return false from event handler to cancel the change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid view is available (use this for selecting a default row).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid view is available (use this for selecting a default row)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableView" Abstract="true" Extends="AbstractDataView">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetRowClass" Type="JFunction">
          <Summary><![CDATA[Override this function to apply custom CSS classes to rows during rendering. You can also supply custom parameters to the row template for the current row to customize how it is rendered using the rowParams parameter. This function should return the CSS class name (or empty string '' for none) that will be added to the row's wrapping div. To apply multiple class names, simply return them space-delimited within the string (e.g., 'my-class another-class').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom CSS classes to rows during rendering. You can also supply custom parameters to the row template for the current row to customize how it is rendered using the rowParams parameter. This function should return the CSS class name (or empty string '' for none) that will be added to the row's wrapping div. To apply multiple class names, simply return them space-delimited within the string (e.g., 'my-class another-class')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableTextSelection" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable text selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. TableView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable text selections." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FirstCls" Type="string" DefaultValue="&quot;x-grid-cell-first&quot;">
          <Summary><![CDATA[A CSS class to add to the first cell in every row to enable special styling for the first column. If no styling is needed on the first column, this may be configured as null. Defaults to: \"x-grid-cell-first\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. TableView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-grid-cell-first&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to add to the first cell in every row to enable special styling for the first column. If no styling is needed on the first column, this may be configured as null. Defaults to: \&quot;x-grid-cell-first\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LastCls" Type="string" DefaultValue="&quot;x-grid-cell-last&quot;">
          <Summary><![CDATA[A CSS class to add to the last cell in every row to enable special styling for the last column. If no styling is needed on the last column, this may be configured as null. Defaults to: \"x-grid-cell-last\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. TableView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-grid-cell-last&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to add to the last cell in every row to enable special styling for the last column. If no styling is needed on the last column, this may be configured as null. Defaults to: \&quot;x-grid-cell-last\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkDirty" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the dirty cell indicator when a cell has been modified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. TableView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the dirty cell indicator when a cell has been modified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackOver" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable mouseenter and mouseleave events]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. TableView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable mouseenter and mouseleave events" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableViewDirectEvents" Extends="DataViewDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="UIEvent" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;type&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cell&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;uievent&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyScroll" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyscroll&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowFocus" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rowIdx&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowfocus&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellFocus" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;position&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellfocus&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellMouseDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellMouseUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellDblClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecelldblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellContextMenu" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellKeyDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellmouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellContextMenu" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellKeyDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellkeydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dropPosition&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;dropFunction&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dropPosition&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableViewListeners" Extends="DataViewListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="UIEvent" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;type&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;item&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cell&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;cellIndex&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;uievent&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyScroll" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyscroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowFocus" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;row&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rowIdx&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowfocus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellFocus" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;position&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellfocus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellMouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellMouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellDblClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecelldblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellContextMenu" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCellKeyDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellmouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellContextMenu" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellKeyDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;cell&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;row&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellkeydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dropPosition&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;dropFunction&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;overModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dropPosition&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the View." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabMenu" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TabPanel" Extends="AbstractTabPanel" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A basic tab content Container. Tab panels can be used exactly like a standard Ext.Panel for layout purposes, but also have special support for containing child Panels that get automatically converted into tabs.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TabChanged&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabPanel runat=\&quot;server\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 3\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabPanel), &quot;Build.ToolboxIcons.TabPanel.bmp&quot;" />
        <Attribute Type="Description" RawValue="A basic tab content Container. Tab panels can be used exactly like a standard Ext.Panel for layout purposes, but also have special support for containing child Panels that get automatically converted into tabs." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TabPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TabPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(AbstractPanel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;, typeof(AbstractPanel), &quot;The card that is currently active&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new tab has been activated (activated by setActiveTab).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(AbstractPanel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;, typeof(AbstractPanel), &quot;The tab that is currently active&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new tab has been activated (activated by setActiveTab)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabHide" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabMenuShow" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menu&quot;, typeof(MenuBase), &quot;menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabmenushow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabPanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(AbstractPanel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;, typeof(AbstractPanel), &quot;The card that is currently active&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a tab change (activated by setActiveTab). Return false in any listener to cancel the tabchange" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new tab has been activated (activated by setActiveTab).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(AbstractPanel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;, typeof(AbstractPanel), &quot;The tab that is currently active&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new tab has been activated (activated by setActiveTab)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabHide" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractPanel), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabMenuShow" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(AbstractPanel), &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menu&quot;, typeof(MenuBase), &quot;menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabmenushow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Tabs" Extends="BaseItemCollection&lt;Tab&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TabScrollerMenu" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabScrollerMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabScrollerMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="10">
          <Summary><![CDATA[The page size.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page size." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="int" DefaultValue="15">
          <Summary><![CDATA[The maximum text length to truncate.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum text length to truncate." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuPrefixText" Type="string" DefaultValue="&quot;Items&quot;">
          <Summary><![CDATA[Menu prefix text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Items&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Menu prefix text." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStrip" Extends="ComponentBase" Inherits="IAutoPostBack,IPostBackEventHandler,IPostBackDataHandler,IIcon">
      <Summary><![CDATA[A component which renders tabs similar to a TabPanel and can toggle visibility of other items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TabChanged&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabStrip), &quot;Build.ToolboxIcons.TabPanel.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabStrip runat=\&quot;server\&quot;&gt;&lt;/{0}:TabStrip&gt;&quot;" />
        <Attribute Type="Description" RawValue="A component which renders tabs similar to a TabPanel and can toggle visibility of other items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TabPosition" Type="TabPosition" DefaultValue="TabPosition.Top">
          <Summary><![CDATA[The position where the tab strip should be rendered (defaults to 'top'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'top'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. TabStrip&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabPosition.Top" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The position where the tab strip should be rendered (defaults to 'top'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'top'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="Tabs">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainerID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ID of the container which has card layout. TabStrip will switch active item automatically beased on the current index.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(AbstractContainer)" />
            <Attribute Type="Description" RawValue="The ID of the container which has card layout. TabStrip will switch active item automatically beased on the current index." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainer" Type="Container" DefaultValue="null">
          <Summary><![CDATA[The container which has card layout. TabStrip will switch active item automatically beased on the current index.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" RawValue="The container which has card layout. TabStrip will switch active item automatically beased on the current index." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTabWidth" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTabWidth" Type="int" DefaultValue="int.MaxValue">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MaxValue" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to render the tab strip without a background content Container image (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the tab strip without a background content Container image (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TabStripListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TabStripDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;beforetabchange&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;beforetabchange&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStripDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabStrip)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabStrip)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStripListeners" Extends="ContainerListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldTab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabStrip)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabStrip)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Task" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TaskID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The TaskID.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The TaskID." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRun" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to auto run task (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to auto run task (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WaitPreviousRequest" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to wait previous request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to wait previous request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The frequency in milliseconds with which the task should be executed (defaults to 1000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="Description" RawValue="The frequency in milliseconds with which the task should be executed (defaults to 1000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Args" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[(optional) An array of arguments to be passed to the function specified by run]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="(optional) An array of arguments to be passed to the function specified by run" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[(optional) The scope in which to execute the run function.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The scope in which to execute the run function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="int" DefaultValue="0">
          <Summary><![CDATA[(optional) The length of time in milliseconds to execute the task before stopping automatically (defaults to indefinite).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="(optional) The length of time in milliseconds to execute the task before stopping automatically (defaults to indefinite)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Repeat" Type="int" DefaultValue="0">
          <Summary><![CDATA[(optional) The number of times to execute the task before stopping automatically (defaults to indefinite).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="(optional) The number of times to execute the task before stopping automatically (defaults to indefinite)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;serverRun&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListenerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;clientRun&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStart" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;onstart&quot;, typeof(FunctionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStop" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;onstop&quot;, typeof(FunctionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TaskListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TaskDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TaskCollection" Extends="BaseItemCollection&lt;Task&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TaskDirectEvents" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TaskListeners" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="SimpleListener">
          <Summary><![CDATA[The function to execute each time the task is run. The function will be called at each interval.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;clientRun&quot;, JsonMode.Raw" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The function to execute each time the task is run. The function will be called at each interval." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TaskManager" Extends="LazyObservable" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[Provides the ability to execute one or more arbitrary tasks in a multithreaded manner.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TaskManager runat=\&quot;server\&quot;&gt;&lt;/{0}:TaskManager&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TaskManager), &quot;Build.ToolboxIcons.TaskManager.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Provides the ability to execute one or more arbitrary tasks in a multithreaded manner." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Interval" Type="int" DefaultValue="10">
          <Summary><![CDATA[The minimum precision in milliseconds supported by this TaskRunner instance (defaults to 10)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The minimum precision in milliseconds supported by this TaskRunner instance (defaults to 10)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRunDelay" Type="int" DefaultValue="50">
          <Summary><![CDATA[The start delay in milliseconds for autorun tasks]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="Description" RawValue="The start delay in milliseconds for autorun tasks" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tasks" Type="TaskCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tasksConfig&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddTask" ParamsRaw="Task task">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartAll">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopAll">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TemplateColumn" Extends="CellCommandColumn">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Template" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[An XTemplate, or an XTemplate definition string to use to process a Model's data to produce a column's rendered value.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. TemplateColumn&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An XTemplate, or an XTemplate definition string to use to process a Model's data to produce a column's rendered value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TemplateString" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An XTemplate, or an XTemplate definition string to use to process a Model's data to produce a column's rendered value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An XTemplate, or an XTemplate definition string to use to process a Model's data to produce a column's rendered value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextArea" Extends="TextFieldBase">
      <Summary><![CDATA[Multiline text field. Can be used as a direct replacement for traditional textarea <asp:TextBox TextMode='MultiLine'> fields, plus adds support for auto-sizing.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TextArea runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TextArea), &quot;Build.ToolboxIcons.TextArea.bmp&quot;" />
        <Attribute Type="Description" RawValue="Multiline text field. Can be used as a direct replacement for traditional textarea &lt;asp:TextBox TextMode='MultiLine'&gt; fields, plus adds support for auto-sizing." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Cols" Type="int" DefaultValue="20">
          <Summary><![CDATA[An initial value for the 'cols' attribute on the textarea element. This is only used if the component has no configured width and is not given a width by its container's layout. Defaults to 4.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="An initial value for the 'cols' attribute on the textarea element. This is only used if the component has no configured width and is not given a width by its container's layout. Defaults to 4." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnterIsSpecial" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if you want the ENTER key to be classed as a special key and the specialkey event to be fired when ENTER is pressed. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if you want the ENTER key to be classed as a special key and the specialkey event to be fired when ENTER is pressed. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowAppend" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string that will be appended to the field's current value for the purposes of calculating the target field size. Only used when the grow config is true. Defaults to a newline for TextArea to ensure there is always a space below the current line.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A string that will be appended to the field's current value for the purposes of calculating the target field size. Only used when the grow config is true. Defaults to a newline for TextArea to ensure there is always a space below the current line." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMax" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;1000&quot;">
          <Summary><![CDATA[The maximum height to allow when grow=true (defaults to 1000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;1000&quot;" />
            <Attribute Type="Description" RawValue="The maximum height to allow when grow=true (defaults to 1000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMin" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;60&quot;">
          <Summary><![CDATA[The minimum height to allow when grow=true (defaults to 60)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;60&quot;" />
            <Attribute Type="Description" RawValue="The minimum height to allow when grow=true (defaults to 60)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventScrollbars" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to prevent scrollbars from appearing regardless of how much text is in the field. This option is only relevant when grow is true. Equivalent to setting overflow: hidden, defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to prevent scrollbars from appearing regardless of how much text is in the field. This option is only relevant when grow is true. Equivalent to setting overflow: hidden, defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Rows" Type="int" DefaultValue="4">
          <Summary><![CDATA[An initial value for the 'rows' attribute on the textarea element. This is only used if the component has no configured height and is not given a height by its container's layout. Defaults to 4.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="4" />
            <Attribute Type="Description" RawValue="An initial value for the 'rows' attribute on the textarea element. This is only used if the component has no configured height and is not given a height by its container's layout. Defaults to 4." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TextFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TextFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextBoxConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TextField" Extends="TextFieldBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[Basic text field. Can be used as a direct replacement for traditional text inputs, or as the base class for more sophisticated input controls (like Ext.form.TextArea and Ext.form.ComboBox).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TextField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TextField), &quot;Build.ToolboxIcons.TextField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic text field. Can be used as a direct replacement for traditional text inputs, or as the base class for more sophisticated input controls (like Ext.form.TextArea and Ext.form.ComboBox)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TextFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TextFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextFieldBase" Abstract="true" Extends="Field" Inherits="IEditableTextControl">
      <Summary><![CDATA[Base Class for all Text Field Web Controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for all Text Field Web Controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RawText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to validate that the value length > 0 (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to validate that the value length &gt; 0 (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the allow blank validation fails (defaults to 'This field is required').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the allow blank validation fails (defaults to 'This field is required')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableKeyFilter" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable input keystroke filtering (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable input keystroke filtering (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to apply to an empty field to style the emptyText (defaults to 'x-form-empty-field'). This class is automatically added and removed as needed depending on the current field value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to an empty field to style the emptyText (defaults to 'x-form-empty-field'). This class is automatically added and removed as needed depending on the current field value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text to display in an empty field (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text to display in an empty field (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableKeyEvents" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable the proxying of key events for the HTML input field (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable the proxying of key events for the HTML input field (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnforceMaxLength" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to set the maxLength property on the underlying input field. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to set the maxLength property on the underlying input field. Defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Grow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if this field should automatically grow and shrink to its content (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if this field should automatically grow and shrink to its content (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowAppend" Type="string" DefaultValue="&quot;W&quot;">
          <Summary><![CDATA[A string that will be appended to the field's current value for the purposes of calculating the target field size. Only used when the grow config is true. Defaults to a single capital \"W\" (the widest character in common fonts) to leave enough space for the next typed character and avoid the field value shifting before the width is adjusted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;W&quot;" />
            <Attribute Type="Description" RawValue="A string that will be appended to the field's current value for the purposes of calculating the target field size. Only used when the grow config is true. Defaults to a single capital \&quot;W\&quot; (the widest character in common fonts) to leave enough space for the next typed character and avoid the field value shifting before the width is adjusted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMax" Type="Unit" DefaultValue="typeof(Unit), &quot;800&quot;">
          <Summary><![CDATA[The maximum width to allow when grow = true (defaults to 800).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;800&quot;" />
            <Attribute Type="Description" RawValue="The maximum width to allow when grow = true (defaults to 800)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMin" Type="Unit" DefaultValue="typeof(Unit), &quot;30&quot;">
          <Summary><![CDATA[The minimum width to allow when grow = true (defaults to 30).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;30&quot;" />
            <Attribute Type="Description" RawValue="The minimum width to allow when grow = true (defaults to 30)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskRe" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An input mask regular expression that will be used to filter keystrokes (character being typed) that do not match. Note: It dose not filter characters already in the input.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetMaskRe&quot;" />
            <Attribute Type="Description" RawValue="An input mask regular expression that will be used to filter keystrokes (character being typed) that do not match. Note: It dose not filter characters already in the input." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLength" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Maximum input field length allowed by validation (defaults to Number.MAX_VALUE). This behavior is intended to provide instant feedback to the user by improving usability to allow pasting and editing or overtyping and back tracking. To restrict the maximum number of characters that can be entered into the field use the enforceMaxLength option.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="Maximum input field length allowed by validation (defaults to Number.MAX_VALUE). This behavior is intended to provide instant feedback to the user by improving usability to allow pasting and editing or overtyping and back tracking. To restrict the maximum number of characters that can be entered into the field use the enforceMaxLength option." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLength" Type="int" DefaultValue="0">
          <Summary><![CDATA[Minimum input field length required (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Minimum input field length required (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Regex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A JavaScript RegExp object to be tested against the field value during validation (defaults to undefined). If the test fails, the field will be marked invalid using regexText.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="A JavaScript RegExp object to be tested against the field value during validation (defaults to undefined). If the test fails, the field will be marked invalid using regexText." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegexText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display if regex is used and the test fails during validation (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display if regex is used and the test fails during validation (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnFocus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically select any existing field text when the field receives input focus (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically select any existing field text when the field receives input focus (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Size" Type="int" DefaultValue="20">
          <Summary><![CDATA[An initial value for the 'size' attribute on the text input element. This is only used if the field has no configured width and is not given a width by its container's layout. Defaults to 20.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="An initial value for the 'size' attribute on the text input element. This is only used if the field has no configured width and is not given a width by its container's layout. Defaults to 20." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StripCharsRe" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A JavaScript RegExp object used to strip unwanted content from the value during input. If stripCharsRe is specified, every character sequence matching stripCharsRe will be removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="A JavaScript RegExp object used to strip unwanted content from the value during input. If stripCharsRe is specified, every character sequence matching stripCharsRe will be removed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Validator" Type="JFunction">
          <Summary><![CDATA[A custom validation function to be called during field validation (getErrors) (defaults to undefined). If specified, this function will be called first, allowing the developer to override the default validation process.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A custom validation function to be called during field validation (getErrors) (defaults to undefined). If specified, this function will be called first, allowing the developer to override the default validation process." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vtype" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A validation type name as defined in Ext.form.VTypes (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A validation type name as defined in Ext.form.VTypes (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VtypeText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom error message to display in place of the default message provided for the vtype currently set for this field (defaults to ''). Only applies if vtype is set, else ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom error message to display in place of the default message provided for the vtype currently set for this field (defaults to ''). Only applies if vtype is set, else ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the input field. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the input field. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this field." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AutoSize">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText" ParamsRaw="int start">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText" ParamsRaw="int start, int end">
          <Summary><![CDATA[Selects text in this field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects text in this field" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TextFieldDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new field width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;autosize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keydown input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keydown input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keypress input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keypress input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keyup input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keyup input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Icon click event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;The target of the event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Icon click event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextFieldListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Type="ComponentListener">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new field width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;autosize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentListener">
          <Summary><![CDATA[Keydown input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keydown input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentListener">
          <Summary><![CDATA[Keypress input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keypress input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentListener">
          <Summary><![CDATA[Keyup input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keyup input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClick" Type="ComponentListener">
          <Summary><![CDATA[Icon click event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;The target of the event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Icon click event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ThreeStateBoolJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TimeAxis" Extends="NumericAxis">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RoundToDecimal" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true, the values of the chart will be rendered only if they belong between the fromDate and toDate. If false, the time axis will adapt to the new values by adding/removing steps. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true, the values of the chart will be rendered only if they belong between the fromDate and toDate. If false, the time axis will adapt to the new values by adding/removing steps. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormat" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Indicates the format the date will be rendered on. For example: 'MMM dd' will render the dates as 'Jan 30', etc.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Indicates the format the date will be rendered on. For example: 'MMM dd' will render the dates as 'Jan 30', etc." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dateFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FromDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[The starting date for the time axis.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Description" RawValue="The starting date for the time axis." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[The ending date for the time axis.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Description" RawValue="The ending date for the time axis." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Step" Type="int" DefaultValue="1">
          <Summary><![CDATA[The number of units for the step]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="The number of units for the step" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StepUnit" Type="DateUnit" DefaultValue="DateUnit.Day">
          <Summary><![CDATA[The unit of the step (day, month, year, etc).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="DateUnit.Day" />
            <Attribute Type="Description" RawValue="The unit of the step (day, month, year, etc)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StepProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;step&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TimeField" Extends="PickerField">
      <Summary><![CDATA[Provides a time input field with a time dropdown and automatic time validation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TimeField runat=\&quot;server\&quot;&gt;&lt;/{0}:TimeField&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TimeField), &quot;Build.ToolboxIcons.TimeField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a time input field with a time dropdown and automatic time validation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectedTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Modifier="Override" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormats" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Multiple date formats separated by \" | \" to try when parsing a user input value and it doesn't match the defined format (defaults to 'g:ia|g:iA|g:i a|g:i A|h:i|g:i|H:i|ga|ha|gA|h a|g a|g A|gi|hi|gia|hia|g|H|gi a|hi a|giA|hiA|gi A|hi A').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Multiple date formats separated by \&quot; | \&quot; to try when parsing a user input value and it doesn't match the defined format (defaults to 'g:ia|g:iA|g:i a|g:i A|h:i|g:i|H:i|ga|ha|gA|h a|g a|g A|gi|hi|gia|hia|g|H|gi a|hi a|giA|hiA|gi A|hi A')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormatsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;altFormats&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;t&quot;">
          <Summary><![CDATA[The default time format string which can be overriden for localization support. The format must be valid according to Ext.Date.parse (defaults to 'g:i A', e.g., '3:15 PM'). For 24-hour time format try 'H:i' instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" RawValue="The default time format string which can be overriden for localization support. The format must be valid according to Ext.Date.parse (defaults to 'g:i A', e.g., '3:15 PM'). For 24-hour time format try 'H:i' instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="15">
          <Summary><![CDATA[The number of minutes between each time value in the list (defaults to 15).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="Description" RawValue="The number of minutes between each time value in the list (defaults to 15)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidText" Modifier="Override" Type="string" DefaultValue="&quot;{0} is not a valid time&quot;">
          <Summary><![CDATA[The error text to display when the time in the field is invalid (defaults to '{0} is not a valid time').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} is not a valid time&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the time in the field is invalid (defaults to '{0} is not a valid time')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;The time in this field must be equal to or before {0}&quot;">
          <Summary><![CDATA[The error text to display when the entered time is after maxValue (defaults to 'The time in this field must be equal to or before {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The time in this field must be equal to or before {0}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the entered time is after maxValue (defaults to 'The time in this field must be equal to or before {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;9223372036854775807&quot;">
          <Summary><![CDATA[The maximum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetMaxTime&quot;" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;9223372036854775807&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The maximum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;maxValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Summary><![CDATA[The minimum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinTime&quot;" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The minimum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;minValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;The time in this field must be equal to or after {0}&quot;">
          <Summary><![CDATA[The error text to display when the entered time is before minValue (defaults to 'The time in this field must be equal to or after {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The time in this field must be equal to or after {0}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the entered time is before minValue (defaults to 'The time in this field must be equal to or after {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PickerMaxHeight" Type="int" DefaultValue="300">
          <Summary><![CDATA[The maximum height of the Ext.picker.Time dropdown. Defaults to 300.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="300" />
            <Attribute Type="Description" RawValue="The maximum height of the Ext.picker.Time dropdown. Defaults to 300." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnTab" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the Tab key should select the currently highlighted item. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the Tab key should select the currently highlighted item. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SnapToIncrement" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify as true to enforce that only values on the increment boundary are accepted. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Specify as true to enforce that only values on the increment boundary are accepted. Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitFormat" Type="string" DefaultValue="&quot;t&quot;">
          <Summary><![CDATA[The date format string which will be submitted to the server. The format must be valid according to Ext.Date.parse (defaults to format).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" RawValue="The date format string which will be submitted to the server. The format must be valid according to Ext.Date.parse (defaults to format)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;submitFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PickerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PickerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TimePicker" Extends="BoundListBase" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,INoneContentable">
      <Summary><![CDATA[A time picker which provides a list of times from which to choose.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TimePicker runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;SelectedTime&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedTime&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;SelectedTime&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TimePicker), &quot;Build.ToolboxIcons.TimeField.bmp&quot;" />
        <Attribute Type="Description" RawValue="A time picker which provides a list of times from which to choose." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PostBackEvent" Type="string" DefaultValue="&quot;selectionchange&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;selectionchange&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;t&quot;">
          <Summary><![CDATA[The default time format string which can be overriden for localization support. The format must be valid according to Ext.Date.parse (defaults to 'g:i A', e.g., '3:15 PM'). For 24-hour time format try 'H:i' instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" RawValue="The default time format string which can be overriden for localization support. The format must be valid according to Ext.Date.parse (defaults to 'g:i A', e.g., '3:15 PM'). For 24-hour time format try 'H:i' instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="15">
          <Summary><![CDATA[The number of minutes between each time value in the list (defaults to 15).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="Description" RawValue="The number of minutes between each time value in the list (defaults to 15)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;9223372036854775807&quot;">
          <Summary><![CDATA[The maximum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxTime&quot;" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;9223372036854775807&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The maximum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;maxValue&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Summary><![CDATA[The minimum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinTime&quot;" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The minimum allowed time. Can be either a Javascript date object with a valid time value or a string time in a valid format -- see format and altFormats (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;minValue&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DataViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DataViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Tip" Abstract="true" Extends="AbstractPanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Closable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render a close tool button into the tooltip header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render a close tool button into the tooltip header (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainPosition" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, then the tooltip will be automatically constrained to stay within the browser viewport. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, then the tooltip will be automatically constrained to stay within the browser viewport. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Experimental. The default Ext.Element.alignTo anchor position value for this tip relative to its element of origin. Defaults to: \"tl-bl?\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Experimental. The default Ext.Element.alignTo anchor position value for this tip relative to its element of origin. Defaults to: \&quot;tl-bl?\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Modifier="Override" Type="int?" DefaultValue="500">
          <Summary><![CDATA[The maximum width of the tip in pixels. The maximum supported value is 500.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum width of the tip in pixels. The maximum supported value is 500." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Modifier="Override" Type="int?" DefaultValue="40">
          <Summary><![CDATA[The minimum width of the tip in pixels (defaults to 40).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="40" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width of the tip in pixels (defaults to 40)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ShowAt" ParamsRaw="Unit x, Unit y">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string id">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string id, string position">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TokenJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TokenUtils">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToLowerCamelCase" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Tool" Extends="ComponentBase">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="ToolType" DefaultValue="ToolType.None">
          <Summary><![CDATA[The type of tool to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ToolType.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetType&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of tool to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomType" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The custom type of tool to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The custom type of tool to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;handler&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope in which to call the handler.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to call the handler." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specify as false to allow click event to propagate. Default to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify as false to allow click event to propagate. Default to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TooltipConfig" Type="QTipCfg">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTipType" Type="ToolTipType" DefaultValue="ToolTipType.Qtip">
          <Summary><![CDATA[The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute. Defaults to: \"qtip\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltipType&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="ToolTipType.Qtip" />
            <Attribute Type="Description" RawValue="The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute. Defaults to: \&quot;qtip\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ToolListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ToolDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Toolbar" Extends="ToolbarBase">
      <Summary><![CDATA[Basic Toolbar class. Although the defaultType for Toolbar is button, Toolbar elements (child items for the Toolbar container) may be virtually any type of Component. Toolbar elements can be created explicitly via their constructors, or implicitly via their xtypes, and can be added dynamically.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Toolbar runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Toolbar&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Toolbar), &quot;Build.ToolboxIcons.Toolbar.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic Toolbar class. Although the defaultType for Toolbar is button, Toolbar elements (child items for the Toolbar container) may be virtually any type of Component. Toolbar elements can be created explicitly via their constructors, or implicitly via their xtypes, and can be added dynamically." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ToolbarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarBase" Abstract="true" Extends="AbstractContainer" Inherits="INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;button&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use flat style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use flat style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClassicButtonStyle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use classic (none-flat) style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use classic (none-flat) style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableOverflow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Configure true to make the toolbar provide a button which activates a dropdown Menu to show items which overflow the Toolbar's width.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Configure true to make the toolbar provide a button which activates a dropdown Menu to show items which overflow the Toolbar's width." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Configure the icon class of the overflow button. Defaults to: \"x-toolbar-more-icon\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Configure the icon class of the overflow button. Defaults to: \&quot;x-toolbar-more-icon\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to make the toolbar vertical. The layout will become a vbox. Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true to make the toolbar vertical. The layout will become a vbox. Defaults to: false" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarCollection" Extends="ItemsCollection&lt;ToolbarBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Toolbar" Type="ToolbarBase">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="OverFlowChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the overflow state has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;lastOverflow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;overflowchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the overflow state has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarDroppable" Extends="Plugin" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[Plugin which allows items to be dropped onto a toolbar and be turned into new Toolbar items.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ToolbarDroppable), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ToolbarDroppable runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Plugin which allows items to be dropped onto a toolbar and be turned into new Toolbar items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CreateItem" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Creates the new toolbar item based on drop data.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Creates the new toolbar item based on drop data." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CanDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns true if the drop is allowed on the drop target.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns true if the drop is allowed on the drop target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalculateEntryIndex" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Calculates the location on the toolbar to create the new sorter button based on the XY of the drag event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Calculates the location on the toolbar to create the new sorter button based on the XY of the drag event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remote" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true if need remote item creation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set to true if need remote item creation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ToolbarDroppableListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ToolbarDroppableDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarDroppableDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeRemoteCreate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote item creating request.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;remoteOptions&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dragSource&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotecreate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote item creating request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteCreate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after remote item creating request is finished.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;success&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;message&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotecreate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after remote item creating request is finished." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires an item is created and added to the toolbar]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;toolbarItem&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;data&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires an item is created and added to the toolbar" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarDroppableListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeRemoteCreate" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote item creating request.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;remoteOptions&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;dragSource&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotecreate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote item creating request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteCreate" Type="ComponentListener">
          <Summary><![CDATA[Fires after remote item creating request is finished.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;success&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;message&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotecreate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after remote item creating request is finished." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentListener">
          <Summary><![CDATA[Fires an item is created and added to the toolbar]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;toolbarItem&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;data&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires an item is created and added to the toolbar" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarFill" Extends="ComponentBase" Inherits="IToolbarItem">
      <Summary><![CDATA[A non-rendering placeholder item which instructs the Toolbar's Layout to begin using the right-justified button container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A non-rendering placeholder item which instructs the Toolbar's Layout to begin using the right-justified button container." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarItem" Abstract="true" Extends="ComponentBase" Inherits="IToolbarItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="OverflowText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Text to be used for the menu if the item is overflowed.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ToolbarItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text to be used for the menu if the item is overflowed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarItemCreateEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="OverFlowChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the overflow state has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(AbstractContainer), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;lastOverflow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;overflowchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the overflow state has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarSeparator" Extends="ToolbarItem">
      <Summary><![CDATA[A simple class that adds a vertical separator bar between toolbar items (css class: 'x-toolbar-separator').]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple class that adds a vertical separator bar between toolbar items (css class: 'x-toolbar-separator')." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarSpacer" Extends="ToolbarItem">
      <Summary><![CDATA[A simple element that adds extra horizontal space between items in a toolbar. By default a 2px wide space is added via CSS specification:]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple element that adds extra horizontal space between items in a toolbar. By default a 2px wide space is added via CSS specification:" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarTextItem" Extends="ToolbarItem">
      <Summary><![CDATA[A simple class that renders text directly into a toolbar.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple class that renders text directly into a toolbar." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to be used as innerHTML (html tags are accepted). Defaults to: \"\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to be used as innerHTML (html tags are accepted). Defaults to: \&quot;\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="AbstractComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="AbstractComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolDirectEvents" Extends="AbstractComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the tool is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Tool), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Tool), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the tool is clicked" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolListeners" Extends="AbstractComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when the tool is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Tool), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Tool), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the tool is clicked" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolsCollection" Extends="ItemsCollection&lt;Tool&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolTip" Extends="Tip">
      <Summary><![CDATA[ToolTip is a Ext.tip.Tip implementation that handles the common case of displaying a tooltip when hovering over a certain element or elements on the page. It allows fine-grained control over the tooltip's alignment relative to the target element or mouse, and the timing of when it is automatically shown and hidden.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ToolTip runat=\&quot;server\&quot; Title=\&quot;Message\&quot;&gt;&lt;/{0}:ToolTip&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ToolTip), &quot;Build.ToolboxIcons.ToolTip.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="ToolTip is a Ext.tip.Tip implementation that handles the common case of displaying a tooltip when hovering over a certain element or elements on the page. It allows fine-grained control over the tooltip's alignment relative to the target element or mouse, and the timing of when it is automatically shown and hidden." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolTipBase" Abstract="true" Extends="Tip">
      <Summary><![CDATA[ToolTip is a Ext.tip.Tip implementation that handles the common case of displaying a tooltip when hovering over a certain element or elements on the page. It allows fine-grained control over the tooltip's alignment relative to the target element or mouse, and the timing of when it is automatically shown and hidden.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="ToolTip is a Ext.tip.Tip implementation that handles the common case of displaying a tooltip when hovering over a certain element or elements on the page. It allows fine-grained control over the tooltip's alignment relative to the target element or mouse, and the timing of when it is automatically shown and hidden." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceRendering" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Anchor" Modifier="Override" Type="string" DefaultValue="null">
          <Summary><![CDATA[If specified, indicates that the tip should be anchored to a particular side of the target element or mouse pointer (\"top\", \"right\", \"bottom\", or \"left\"), with an arrow pointing back at the target or mouse pointer. If constrainPosition is enabled, this will be used as a preferred value only and may be flipped as needed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="If specified, indicates that the tip should be anchored to a particular side of the target element or mouse pointer (\&quot;top\&quot;, \&quot;right\&quot;, \&quot;bottom\&quot;, or \&quot;left\&quot;), with an arrow pointing back at the target or mouse pointer. If constrainPosition is enabled, this will be used as a preferred value only and may be flipped as needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorOffset" Type="int" DefaultValue="0">
          <Summary><![CDATA[A numeric pixel value used to offset the default position of the anchor arrow. When the anchor position is on the top or bottom of the tooltip, anchorOffset will be used as a horizontal offset. Likewise, when the anchor position is on the left or right side, anchorOffset will be used as a vertical offset. Defaults to: 0]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A numeric pixel value used to offset the default position of the anchor arrow. When the anchor position is on the top or bottom of the tooltip, anchorOffset will be used as a horizontal offset. Likewise, when the anchor position is on the left or right side, anchorOffset will be used as a vertical offset. Defaults to: 0" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorToTarget" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to anchor the tooltip to the target element, false to anchor it relative to the mouse coordinates. When anchorToTarget is true, use defaultAlign to control tooltip alignment to the target element. When anchorToTarget is false, use anchor instead to control alignment. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to anchor the tooltip to the target element, false to anchor it relative to the mouse coordinates. When anchorToTarget is true, use defaultAlign to control tooltip alignment to the target element. When anchorToTarget is false, use anchor instead to control alignment. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A DomQuery selector which allows selection of individual elements within the target element to trigger showing and hiding the ToolTip as the mouse moves within the target.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A DomQuery selector which allows selection of individual elements within the target element to trigger showing and hiding the ToolTip as the mouse moves within the target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DismissDelay" Type="int" DefaultValue="5000">
          <Summary><![CDATA[Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="200">
          <Summary><![CDATA[Delay in milliseconds after the mouse exits the target element but before the tooltip actually hides (defaults to 200). Set to 0 for the tooltip to hide immediately.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds after the mouse exits the target element but before the tooltip actually hides (defaults to 200). Set to 0 for the tooltip to hide immediately." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOffset" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An XY offset from the mouse position where the tooltip should be shown (defaults to [15,18]).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An XY offset from the mouse position where the tooltip should be shown (defaults to [15,18])." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[Delay in milliseconds before the tooltip displays after the mouse enters the target element (defaults to 500).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip displays after the mouse enters the target element (defaults to 500)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetControl" Type="Control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target id to associate with this tooltip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target id to associate with this tooltip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouse" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to have the tooltip follow the mouse as it moves over the target element (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to have the tooltip follow the mouse as it moves over the target element (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TransformGrid" Extends="GridPanel">
      <Summary><![CDATA[A Grid which creates itself from an existing HTML table element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TransformGrid runat=\&quot;server\&quot;&gt;&lt;/{0}:TransformGrid&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TransformGrid), &quot;Build.ToolboxIcons.TableGrid.bmp&quot;" />
        <Attribute Type="Description" RawValue="A Grid which creates itself from an existing HTML table element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TableProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;table&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Table" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The table element from which this grid will be created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. TableGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The table element from which this grid will be created." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TranslateAttribute" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="X" Type="double?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="double?" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TrayClock" Extends="ToolbarTextItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TimeFormat" Type="string" DefaultValue="&quot;t&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TimeFormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;timeFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="string" DefaultValue="&quot;{time}&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{time}&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RefreshInterval" Type="int" DefaultValue="10000">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeColumn" Extends="ColumnBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeDragZone" Extends="DragZone">
      <Attributes>
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TreeDropZone" Extends="DropZone">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DragOverDataProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;{}&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dragOverData&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;{}&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowContainerDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if drops on the tree container (outside of a specific tree node) are allowed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if drops on the tree container (outside of a specific tree node) are allowed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowParentInsert" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the tree should only allow append drops (use for trees which are sorted, defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the tree should only allow append drops (use for trees which are sorted, defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandDelay" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target (defaults to 1000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target (defaults to 1000)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires right before the child nodes for this node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for this node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before click processing. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is right clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is right clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the disabled status of this node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of this node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the text for this node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for this node is changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeListeners" Extends="NodeListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires right before the child nodes for this node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for this node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before click processing. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is right clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is right clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the disabled status of this node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of this node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the text for this node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for this node is changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanel" Extends="TreePanelBase" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[The TreePanel provides tree-structured UI representation of tree-structured data.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TreePanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;/{0}:TreePanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TreePanel), &quot;Build.ToolboxIcons.TreePanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="The TreePanel provides tree-structured UI representation of tree-structured data." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RemoteEditUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;raEditUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteRemoveUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;raRemoveUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteAppendUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;raAppendUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteInsertUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;raInsertUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteMoveUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;raMoveUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TreePanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TreePanelDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelBase" Abstract="true" Extends="TablePanel" Inherits="IStore&lt;TreeStore&gt;,INoneContentable">
      <Attributes>
        <Attribute Type="Description" />
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Store" Type="StoreCollection&lt;TreeStore&gt;">
          <Summary><![CDATA[The Ext.Net.Store the grid should use as its data source (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;, 1" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.Net.Store the grid should use as its data source (required)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fields" Type="ModelFieldCollection">
          <Summary><![CDATA[An array of fields definition objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An array of fields definition objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ModelName" Type="string" DefaultValue="null">
          <Summary><![CDATA[The Ext.data.Model associated with this store]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;model&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The Ext.data.Model associated with this store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Model" Type="ModelCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;model&gt;Primary&quot;, 2" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="View" Type="ViewCollection&lt;TreeView&gt;">
          <Summary><![CDATA[The Ext.grid.View used by the grid. This can be set before a call to render().]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewConfig&gt;View&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.grid.View used by the grid. This can be set before a call to render()." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to enable animated expand/collapse (defaults to the value of Ext.enableFx)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to enable animated expand/collapse (defaults to the value of Ext.enableFx)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Type="string" DefaultValue="&quot;text&quot;">
          <Summary><![CDATA[The field inside the model that will be used as the node's text. Defaults to 'text'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The field inside the model that will be used as the node's text. Defaults to 'text'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FolderSort" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to automatically prepend a leaf sorter to the store. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically prepend a leaf sorter to the store. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Lines" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable tree lines (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable tree lines (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="NodeCollection">
          <Summary><![CDATA[Allows you to not specify a store on this TreePanel. This is useful for creating a simple tree with preloaded data without having to specify a TreeStore and Model. A store and model will be created and root will be passed to that store.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;root&gt;Primary&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Allows you to not specify a store on this TreePanel. This is useful for creating a simple tree with preloaded data without having to specify a TreeStore and Model. A store and model will be created and root will be passed to that store." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootVisible" Type="bool" DefaultValue="true">
          <Summary><![CDATA[false to hide the root node (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="false to hide the root node (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleExpand" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true if only 1 node per branch may be expanded]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true if only 1 node per branch may be expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseArrows" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use Vista-style arrows in the tree (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use Vista-style arrows in the tree (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnLines" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to add css for column separation lines. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TablePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to add css for column separation lines. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionSubmitConfig" Type="TreeSubmitConfig">
          <Summary><![CDATA[Selection submit config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Selection submit config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="TreePanelMode" DefaultValue="TreePanelMode.Local">
          <Summary><![CDATA[Set to Remote need perform remote confirmation for basic operations.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TreePanelMode.Local" />
            <Attribute Type="Description" RawValue="Set to Remote need perform remote confirmation for basic operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteJson" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use json mode]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use json mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LocalActions" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of actions which must be local (even if Mode='Remote')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of actions which must be local (even if Mode='Remote')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteExtraParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on any remote action request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on any remote action request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoLeafIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[if true then leaf node has no icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="if true then leaf node has no icon" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelDirectEvents" Extends="TablePanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterItemCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an item has been visually collapsed and is no longer visible in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteritemcollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an item has been visually collapsed and is no longer visible in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterItemExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an item has been visually expanded and is visible in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteritemexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an item has been visually expanded and is visible in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeiteminsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iteminsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever records have been prefetched]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever records have been prefetched" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submitexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAction" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote action request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteaction&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote action request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an remote action exception occurs]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an remote action exception occurs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionRefusal" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when remote action is finished but contains refusal answer]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;responseParams&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionrefusal&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action is finished but contains refusal answer" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionSuccess" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when remote action successful]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;responseParams&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionsuccess&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action successful" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote move request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote move request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRename" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote rename request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoterename&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote rename request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote remove request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote remove request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote insert/append request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;insert&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote insert/append request" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelListeners" Extends="TablePanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterItemCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after an item has been visually collapsed and is no longer visible in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteritemcollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an item has been visually collapsed and is no longer visible in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterItemExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires after an item has been visually expanded and is visible in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteritemexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an item has been visually expanded and is visible in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemcollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeiteminsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeItemRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeitemremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;operation&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemcollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iteminsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemMove" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever records have been prefetched]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;successful&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever records have been prefetched" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentListener">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitException" Type="ComponentListener">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submitexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAction" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote action request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteaction&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote action request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionException" Type="ComponentListener">
          <Summary><![CDATA[Fires when an remote action exception occurs]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an remote action exception occurs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionRefusal" Type="ComponentListener">
          <Summary><![CDATA[Fires when remote action is finished but contains refusal answer]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;responseParams&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionrefusal&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action is finished but contains refusal answer" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionSuccess" Type="ComponentListener">
          <Summary><![CDATA[Fires when remote action successful]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;responseParams&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionsuccess&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action successful" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote move request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote move request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRename" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote rename request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoterename&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote rename request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote remove request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote remove request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote insert/append request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;insert&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote insert/append request" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeSelectionModel" Extends="RowSelectionModel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PruneRemoved" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Prune records when they are removed from the store from the selection.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Prune records when they are removed from the store from the selection." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeStore" Extends="TreeStoreBase">
      <Summary><![CDATA[The TreeStore is a store implementation that is backed by by an Ext.data.Tree. It provides convenience methods for loading nodes, as well as the ability to use the hierarchical tree structure combined with a store. This class is generally used in conjunction with Ext.tree.Panel. This class also relays many events from the Tree for convenience.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TreeStore runat=\&quot;server\&quot;&gt;&lt;/{0}:TreeStore&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Store), &quot;Build.ToolboxIcons.Store.bmp&quot;" />
        <Attribute Type="Description" RawValue="The TreeStore is a store implementation that is backed by by an Ext.data.Tree. It provides convenience methods for loading nodes, as well as the ability to use the hierarchical tree structure combined with a store. This class is generally used in conjunction with Ext.tree.Panel. This class also relays many events from the Tree for convenience." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TreeStoreListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TreeStoreDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeStoreBase" Abstract="true" Extends="AbstractStore" Inherits="IAjaxPostBackEventHandler">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoLoadProxy" Modifier="Override" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearOnLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Remove previously existing child nodes before loading. Default to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Remove previously existing child nodes before loading. Default to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultRootId" Type="string" DefaultValue="&quot;root&quot;">
          <Summary><![CDATA[The default root id. Defaults to 'root']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;root&quot;" />
            <Attribute Type="Description" RawValue="The default root id. Defaults to 'root'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultRootProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The root property to specify on the reader if one is not explicitly defined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The root property to specify on the reader if one is not explicitly defined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FolderSort" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[The root property to specify on the reader if one is not explicitly defined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The root property to specify on the reader if one is not explicitly defined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeParam" Type="string" DefaultValue="&quot;node&quot;">
          <Summary><![CDATA[The name of the parameter sent to the server which contains the identifier of the node. Defaults to 'node'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;node&quot;" />
            <Attribute Type="Description" RawValue="The name of the parameter sent to the server which contains the identifier of the node. Defaults to 'node'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="NodeCollection">
          <Summary><![CDATA[The root node for the tree.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;root&gt;Primary&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The root node for the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataBindings" Type="NodeBindingCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeStoreDirectEvents" Extends="AbstractStoreDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isMove&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever the store reads data from a remote data source.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;successful&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the store reads data from a remote data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isMove&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires whenever the root node is changed in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rootchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the root node is changed in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sort" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this TreeStore is sorted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;childNodes&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sort&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this TreeStore is sorted." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeStoreListeners" Extends="AbstractStoreListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isMove&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;refNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever the store reads data from a remote data source.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;records&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;successful&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the store reads data from a remote data source." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newParent&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;isMove&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootChange" Type="ComponentListener">
          <Summary><![CDATA[Fires whenever the root node is changed in the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rootchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires whenever the root node is changed in the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sort" Type="ComponentListener">
          <Summary><![CDATA[Fires when this TreeStore is sorted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;childNodes&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sort&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this TreeStore is sorted." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeSubmitConfig" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WithChildren" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Serialize node with children]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Serialize node with children" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableAutomaticSubmit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Disable automatic submit]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Disable automatic submit" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Encode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode node's text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to encode node's text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PathAttribute" Type="string" DefaultValue="&quot;id&quot;">
          <Summary><![CDATA[The attr to use for the path (defaults to the node's id)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;id&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The attr to use for the path (defaults to the node's id)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeFilter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Node filter functon, return false to exclude the node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Node filter functon, return false to exclude the node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AttributeFilter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Attribute filter functon, return false to exclude the attribute]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Attribute filter functon, return false to exclude the attribute" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeView" Extends="TableView">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable animated expand/collapse (defaults to the value of Ext.enableFx)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable animated expand/collapse (defaults to the value of Ext.enableFx)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootVisible" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the root node (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the root node (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TableViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TableViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeViewDragDrop" Extends="Plugin">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="PType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;0. About&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragText" Type="string" DefaultValue="&quot;{0} selected node{1}&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} selected node{1}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowParentInserts" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowContainerDrops" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if drops on the tree container (outside of a specific tree node) are allowed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if drops on the tree container (outside of a specific tree node) are allowed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDGroup" Type="string" DefaultValue="&quot;TreeDD&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then both the DragZones and DropZone used by this plugin will only interact with other drag drop objects in the same group. Defaults to: \"TreeDD\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;TreeDD&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then both the DragZones and DropZone used by this plugin will only interact with other drag drop objects in the same group. Defaults to: \&quot;TreeDD\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddGroup to which the DragZone will belong. This defines which other DropZones the DragZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The ddGroup to which the DragZone will belong. This defines which other DropZones the DragZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddGroup to which the DropZone will belong. This defines which other DragZones the DropZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The ddGroup to which the DropZone will belong. This defines which other DragZones the DropZone will interact with. Drag/DropZones only interact with other Drag/DropZones which are members of the same ddGroup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrag" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to disallow dragging items from the View. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to disallow dragging items from the View. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to disallow the View from accepting drop gestures. Defaults to: true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to disallow the View from accepting drop gestures. Defaults to: true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the tree should only allow append drops (use for trees which are sorted). Defaults to: false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if the tree should only allow append drops (use for trees which are sorted). Defaults to: false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandDelay" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target. Defaults to: 1000]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="Description" RawValue="The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target. Defaults to: 1000" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeHighlightColor" Type="string" DefaultValue="&quot;c3daf9&quot;">
          <Summary><![CDATA[The color to use when visually highlighting the dragged or dropped node (default value is light blue). The color must be a 6 digit hex value, without a preceding '#'. See also nodeHighlightOnDrop and nodeHighlightOnRepair. Defaults to: \"c3daf9\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;c3daf9&quot;" />
            <Attribute Type="Description" RawValue="The color to use when visually highlighting the dragged or dropped node (default value is light blue). The color must be a 6 digit hex value, without a preceding '#'. See also nodeHighlightOnDrop and nodeHighlightOnRepair. Defaults to: \&quot;c3daf9\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeHighlightOnDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not to highlight any nodes after they are successfully dropped on their target. Defaults to the value of Ext.enableFx. See also nodeHighlightColor and nodeHighlightOnRepair.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not to highlight any nodes after they are successfully dropped on their target. Defaults to the value of Ext.enableFx. See also nodeHighlightColor and nodeHighlightOnRepair." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeHighlightOnRepair" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not to highlight any nodes after they are repaired from an unsuccessful drag/drop. Defaults to the value of Ext.enableFx. See also nodeHighlightColor and nodeHighlightOnDrop.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not to highlight any nodes after they are repaired from an unsuccessful drag/drop. Defaults to the value of Ext.enableFx. See also nodeHighlightColor and nodeHighlightOnDrop." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowLeafDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow append to the leaf node]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow append to the leaf node" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TriggerField" Extends="BaseTriggerField">
      <Summary><![CDATA[Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TriggerField), &quot;Build.ToolboxIcons.TriggerField.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TriggerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TriggerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerFieldBase" Abstract="true" Extends="TextFieldBase">
      <Summary><![CDATA[Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default). The trigger has no default action, so you must assign a function to implement the trigger click handler by overriding onTriggerClick. You can create a TriggerField directly, as it renders exactly like a combobox for which you can provide a custom implementation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default). The trigger has no default action, so you must assign a function to implement the trigger click handler by overriding onTriggerClick. You can create a TriggerField directly, as it renders exactly like a combobox for which you can provide a custom implementation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Triggers" Type="FieldTrigerCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggersConfig&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[false to prevent the user from typing text directly into the field; the field can only have its value set via an action invoked by the trigger. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetEditable&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TriggerField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="false to prevent the user from typing text directly into the field; the field can only have its value set via an action invoked by the trigger. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the trigger element and display only the base text field (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideTrigger&quot;" />
            <Attribute Type="Description" RawValue="True to hide the trigger element and display only the base text field (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideBaseTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the predefined trigger element (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideBaseTrigger&quot;" />
            <Attribute Type="Description" RawValue="True to hide the predefined trigger element (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FirstBaseTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show base trigger first]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show base trigger first" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RepeatTriggerClick" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to attach a click repeater to the trigger. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to attach a click repeater to the trigger. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerIcon" Type="TriggerIcon" DefaultValue="Net.TriggerIcon.Combo">
          <Summary><![CDATA[The icon to use in the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="Net.TriggerIcon.Combo" />
            <Attribute Type="Description" RawValue="The icon to use in the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;triggerCls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ShowTrigger" ParamsRaw="int index">
          <Summary><![CDATA[Show a trigger]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Show a trigger" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ConcealTrigger" ParamsRaw="int index">
          <Summary><![CDATA[Hide a trigger]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hide a trigger" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TriggerFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TriggerClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;trigger&quot;, typeof(object), &quot;trigger&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;trigger index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;tag&quot;, typeof(string), &quot;trigger tag&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(int), &quot;click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerFieldListeners" Extends="TextFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TriggerClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;trigger&quot;, typeof(object), &quot;trigger&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;trigger index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;tag&quot;, typeof(string), &quot;trigger tag&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(int), &quot;click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UnitJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="UpdateOptions" Extends="BaseItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to request or a function which returns the URL.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The URL to request or a function which returns the URL." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The parameters to pass to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The parameters to pass to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scripts" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true any &lt;script> tags embedded in the response text will be extracted and executed. If this option is specified, the callback will be called after the execution of the scripts.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true any &amp;lt;script&gt; tags embedded in the response text will be extracted and executed. If this option is specified, the callback will be called after the execution of the scripts." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Callback" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function to be called when the response from the server arrives.(el : Ext.Element, success : Boolean, response : XMLHttpRequest, options : Object)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function to be called when the response from the server arrives.(el : Ext.Element, success : Boolean, response : XMLHttpRequest, options : Object)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DiscardUrl" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30">
          <Summary><![CDATA[The timeout to use when waiting for a response.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="30" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The timeout to use when waiting for a response." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Nocache" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[Text for loading indicator]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Text for loading indicator" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UserControlAddedEventArgs" Extends="EventArgs">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="UserControlLoader" Extends="AbstractComponent" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Path" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. UserControlLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UserControlID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. UserControlLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UserControlClientIDMode" Type="ClientIDMode" DefaultValue="ClientIDMode.Inherit">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. UserControlLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="ClientIDMode.Inherit" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UserControlRenderer">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="UserControlRendrerConfig">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="UuidIdGenerator" Extends="ModelIdGenerator">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ValidationCollection" Extends="BaseItemCollection&lt;AbstractValidation&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ValidationStatus" Extends="Plugin" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ValidationStatus), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ValidationStatus runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FormPanelID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The FormPanel to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;form&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(FormPanel)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The FormPanel to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The error icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The error icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIconCls" Type="string" DefaultValue="&quot;x-status-error&quot;">
          <Summary><![CDATA[The error icon css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-error&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The error icon css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;errorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorListCls" Type="string" DefaultValue="&quot;x-status-error-list&quot;">
          <Summary><![CDATA[The error list css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-error-list&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The error list css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The valid icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The valid icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIconCls" Type="string" DefaultValue="&quot;x-status-valid&quot;">
          <Summary><![CDATA[The valid icon css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-valid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The valid icon css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;validIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowText" Type="string" DefaultValue="&quot;The form has errors (click for details...)&quot;">
          <Summary><![CDATA[The text which shown when errors exist]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The form has errors (click for details...)&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text which shown when errors exist" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideText" Type="string" DefaultValue="&quot;Click again to hide the error list&quot;">
          <Summary><![CDATA[The text which hide error list when click on it]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Click again to hide the error list&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text which hide error list when click on it" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="VBoxLayoutConfig" Extends="BoxLayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutType" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;type&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="VBoxAlign" DefaultValue="VBoxAlign.Left">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="VBoxAlign.Left" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ViewCollection&lt;T&gt;" Extends="SingleItemCollection&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="View" Type="T">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;viewConfig&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Viewport" Extends="ViewportBase">
      <Summary><![CDATA[A specialized content Container representing the viewable application area (the browser viewport).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Viewport runat=\&quot;server\&quot; Layout=\&quot;border\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Height=\&quot;100\&quot; Title=\&quot;North\&quot; Region=\&quot;North\&quot; Collapsible=\&quot;True\&quot; Split=\&quot;True\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Layout=\&quot;Fit\&quot; Title=\&quot;East\&quot; Width=\&quot;175\&quot; Region=\&quot;East\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;{0}:TabPanel runat=\&quot;server\&quot; ActiveTabIndex=\&quot;0\&quot; Border=\&quot;false\&quot; TabPosition=\&quot;Bottom\&quot; Title=\&quot;Title\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Height=\&quot;100\&quot; Title=\&quot;South\&quot; Region=\&quot;South\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;West\&quot; Width=\&quot;175\&quot; Region=\&quot;West\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot; Layout=\&quot;accordion\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Collapsed=\&quot;True\&quot; Icon=\&quot;FolderGo\&quot; Title=\&quot;Item 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Collapsed=\&quot;true\&quot; Icon=\&quot;FolderWrench\&quot; Title=\&quot;Item 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Layout=\&quot;Fit\&quot; Title=\&quot;Center\&quot; Region=\&quot;Center\&quot;&gt;&lt;Items&gt;&lt;{0}:TabPanel runat=\&quot;server\&quot; ActiveTabIndex=\&quot;0\&quot; Border=\&quot;false\&quot; Title=\&quot;Center\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Closable=\&quot;true\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:Viewport&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Viewport), &quot;Build.ToolboxIcons.Viewport.bmp&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Body&quot;" />
        <Attribute Type="Description" RawValue="A specialized content Container representing the viewable application area (the browser viewport)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ViewportBase" Abstract="true" Extends="AbstractContainer">
      <Summary><![CDATA[A specialized container representing the viewable application area (the browser viewport).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A specialized container representing the viewable application area (the browser viewport)." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WaitConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Duration" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The length of time in milliseconds that the progress bar should run before resetting itself (defaults to undefined, in which case it will run indefinitely until reset is called)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds that the progress bar should run before resetting itself (defaults to undefined, in which case it will run indefinitely until reset is called)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The length of time in milliseconds between each progress update (defaults to 1000 ms)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds between each progress update (defaults to 1000 ms)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Whether to animate the transition of the progress bar. If this value is not specified, the default for the class is used.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether to animate the transition of the progress bar. If this value is not specified, the default for the class is used." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="10">
          <Summary><![CDATA[The number of progress update segments to display within the progress bar (defaults to 10).  If the bar reaches the end and is still updating, it will automatically wrap back to the beginning.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of progress update segments to display within the progress bar (defaults to 10).  If the bar reaches the end and is still updating, it will automatically wrap back to the beginning." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional text to display in the progress bar element (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional text to display in the progress bar element (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A callback function to execute after the progress bar finishes auto-updating. The function will be called with no arguments. This function will be ignored if duration is not specified since in that case the progress bar can only be stopped programmatically, so any required function should be called by the same code after it resets the progress bar.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A callback function to execute after the progress bar finishes auto-updating. The function will be called with no arguments. This function will be ignored if duration is not specified since in that case the progress bar can only be stopped programmatically, so any required function should be called by the same code after it resets the progress bar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope that is passed to the callback function (only applies when duration and fn are both passed).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope that is passed to the callback function (only applies when duration and fn are both passed)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WebConfigUtils">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WebStorageProxy" Abstract="true" Extends="AbstractProxy">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StorageID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The unique ID used as the key in which all record data are stored in the local storage object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. WebStorage&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The unique ID used as the key in which all record data are stored in the local storage object" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WeekView" Extends="DayView">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DayCount" Modifier="Override" Type="int" DefaultValue="7">
          <Summary><![CDATA[The number of days to display in the view (defaults to 7)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="7" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of days to display in the view (defaults to 7)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Window" Extends="AbstractWindow">
      <Summary><![CDATA[A specialized panel intended for use as an application window. Windows are floated, resizable, and draggable by default. Windows can be maximized to fill the viewport, restored to their prior size, and can be minimized.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Window runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Collapsible=\&quot;true\&quot; Icon=\&quot;Application\&quot; Height=\&quot;185\&quot; Width=\&quot;350\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Window&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Window), &quot;Build.ToolboxIcons.Window.bmp&quot;" />
        <Attribute Type="Description" RawValue="A specialized panel intended for use as an application window. Windows are floated, resizable, and draggable by default. Windows can be maximized to fill the viewport, restored to their prior size, and can be minimized." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="WindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="WindowDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowCollection" Extends="ItemsCollection&lt;AbstractWindow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractWindow">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Maximize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;maximize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been maximized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been minimized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;minimize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been minimized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Restore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been restored to its original size after being maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;restore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been restored to its original size after being maximized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Maximize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;maximize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been maximized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been minimized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;minimize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been minimized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Restore" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been restored to its original size after being maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;restore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been restored to its original size after being maximized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowManager" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WriterCollection" Extends="SingleItemStateCollection&lt;AbstractWriter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractWriter">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;writer&quot;, JsonMode.ObjectAllowEmpty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XExtensions">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="XmlReader" Extends="AbstractReader">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Record" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path to the repeated element which contains record information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path to the repeated element which contains record information." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XmlWriter" Extends="AbstractWriter">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultDocumentRoot" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The root to be used if documentRoot is empty and a root is required to form a valid XML document.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The root to be used if documentRoot is empty and a root is required to form a valid XML document." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DocumentRoot" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the root element of the document. Defaults to 'xmlData'. If there is more than 1 record and the root is not specified, the default document root will still be used to ensure a valid XML document is created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the root element of the document. Defaults to 'xmlData'. If there is more than 1 record and the root is not specified, the default document root will still be used to ensure a valid XML document is created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A header to use in the XML document (such as setting the encoding or version). Defaults to ''.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A header to use in the XML document (such as setting the encoding or version). Defaults to ''." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Record" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name of the node to use for each record. Defaults to 'record'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the node to use for each record. Defaults to 'record'." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XScript" Extends="BaseControl">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;ScriptBlock&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;ScriptBlock&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(XScript), &quot;Build.ToolboxIcons.XScript.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ScriptBlock" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Script text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Script text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XTemplate" Extends="LazyObservable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:XTemplate runat=\&quot;server\&quot;&gt;&lt;/{0}:XTemplate&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(XTemplate), &quot;Build.ToolboxIcons.XTemplate.bmp&quot;" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Functions" Type="List&lt;JFunction&gt;">
          <Summary><![CDATA[Inline functions]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Inline functions" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FunctionsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;functions&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Template text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Template text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;html&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Append" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Append" ParamsRaw="AbstractComponent target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Append" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="AbstractComponent target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="AbstractComponent target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="AbstractComponent target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="AbstractComponent target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
  </Classes>
</Ext.Net>